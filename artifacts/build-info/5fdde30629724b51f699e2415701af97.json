{
  "id": "5fdde30629724b51f699e2415701af97",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/gsn/TokenPaymasterPermitPaymaster.sol": {
        "content": "// SPDX-License-Identifier:MIT\npragma solidity >=0.7.6;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/drafts/IERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@opengsn/contracts/src/BasePaymaster.sol\";\nimport \"@opengsn/contracts/src/interfaces/IRelayHub.sol\";\n\nimport \"./IUniswap.sol\";\n\n/**\n * A Token-based paymaster.\n * - each request is paid for by the caller.\n * - preRelayedCall - pre-pay the maximum possible price for the tx\n * - postRelayedCall - refund the caller for the unused gas\n */\ncontract TokenPaymasterPermitPaymaster is BasePaymaster {\n    using SafeMath for uint256;\n\n    function versionPaymaster() external override virtual view returns (string memory){\n        return \"2.2.0\";\n    }\n\n    mapping (address => address) public routersMap;\n\n    uint public gasUsedByPost;\n\n    constructor() public {\n    }\n\n    function setPostGasUsage(uint _gasUsedByPost) external onlyOwner {\n        gasUsedByPost = _gasUsedByPost;\n    }\n\n    function getPayer(GsnTypes.RelayRequest calldata relayRequest) public virtual view returns (address) {\n        (this);\n        return relayRequest.request.from;\n    }\n\n    receive() external override payable {\n        emit Received(msg.value);\n    }\n\n    function calculatePreCharge(\n        IERC20 token,\n        IUniswap router,\n        GsnTypes.RelayRequest calldata relayRequest,\n        uint256 maxPossibleGas)\n    public\n    view\n    returns (address payer, uint256 tokenPreCharge) {\n        payer = this.getPayer(relayRequest);\n        uint ethMaxCharge = relayHub.calculateCharge(maxPossibleGas, relayRequest.relayData);\n        ethMaxCharge += relayRequest.request.value;\n        tokenPreCharge = getTokenToEthOutputPrice(ethMaxCharge, token, router);\n        require(tokenPreCharge <= token.balanceOf(payer), \"token balance too low\");\n    }\n\n\n    function preRelayedCall(\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        bytes calldata approvalData,\n        uint256 maxPossibleGas\n    )\n    external\n    override\n    virtual\n    relayHubOnly\n    returns (bytes memory context, bool revertOnRecipientRevert) {\n        (relayRequest, signature, approvalData, maxPossibleGas);\n\n        (IERC20 token, IUniswap router) = _getToken(relayRequest.relayData.paymasterData);\n        (address payer, uint256 tokenPrecharge) = calculatePreCharge(token, router, relayRequest, maxPossibleGas);\n        (address owner, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) = abi.decode(approvalData, (address, uint256, uint256, uint8, bytes32, bytes32));\n        IERC20Permit(address(token)).permit(owner, address(this), value, deadline, v, r, s);\n        token.transferFrom(payer, address(this), tokenPrecharge);\n        emit TokensPrecharged(address(token), address(router), tokenPrecharge);\n        return (abi.encode(payer, tokenPrecharge, token, router), false);\n    }\n\n    function postRelayedCall(\n        bytes calldata context,\n        bool success,\n        uint256 gasUseWithoutPost,\n        GsnTypes.RelayData calldata relayData\n    )\n    external\n    override\n    virtual\n    relayHubOnly {\n        (address payer, uint256 tokenPrecharge, IERC20 token, IUniswap router) = abi.decode(context, (address, uint256, IERC20, IUniswap));\n        _postRelayedCallInternal(payer, tokenPrecharge, 0, gasUseWithoutPost, relayData, token, router);\n    }\n\n    function getTokenBalance(IERC20 token) external view returns (uint256) {\n        return token.balanceOf(address(this));\n    }\n\n    function withdrawToken(IERC20 token, address account, uint256 amount) external onlyOwner() {\n        uint256 tokenBalance = token.balanceOf(address(this));\n        require(amount <= tokenBalance, 'TokenPaymaster/Balance to low.');\n        token.transfer(account, amount);\n    }\n\n    function _postRelayedCallInternal(\n        address payer,\n        uint256 tokenPrecharge,\n        uint256 valueRequested,\n        uint256 gasUseWithoutPost,\n        GsnTypes.RelayData calldata relayData,\n        IERC20 token,\n        IUniswap router\n    ) internal {\n        uint256 ethActualCharge = relayHub.calculateCharge(gasUseWithoutPost.add(gasUsedByPost), relayData);\n        uint256 tokenActualCharge = getTokenToEthOutputPrice(valueRequested.add(ethActualCharge), token, router);\n        uint256 tokenRefund = tokenPrecharge.sub(tokenActualCharge);\n        _refundPayer(payer, token, tokenRefund);\n        _depositProceedsToHub(ethActualCharge, tokenActualCharge, token, router);\n        emit TokensCharged(gasUseWithoutPost, gasUsedByPost, ethActualCharge, tokenActualCharge);\n    }\n\n    function _refundPayer(\n        address payer,\n        IERC20 token,\n        uint256 tokenRefund\n    ) private {\n        require(token.transfer(payer, tokenRefund), \"failed refund\");\n    }\n\n    // token must have pool with wrapped native currency\n    function _depositProceedsToHub(uint256 ethActualCharge,uint256 tokenActualCharge, IERC20 token, IUniswap router) private {\n        //solhint-disable-next-line\n        address[] memory path = new address[](2);\n        path[0] = address(token);\n        path[1] = router.WETH();\n        token.approve(address(router),uint(-1));\n        router.swapExactTokensForETH(tokenActualCharge, ethActualCharge, path,address(this), block.timestamp+60*15);\n        IRelayHub(address(relayHub)).depositFor{value:ethActualCharge}(address(this));\n    }\n\n    // todo move in prod to internal\n    // @param router - is just router with uniswap like interface, it may be not a uniswap\n    function _getToken(bytes memory paymasterData) public view returns (IERC20, IUniswap) {\n        (address token) = abi.decode(paymasterData, (address));\n        (address router) = routersMap[token];\n        require(token != address(0), \"This token not supported as fee\");\n        return (IERC20(token), IUniswap(router));\n    }\n\n    // router can be overwritten\n    function addToken(address token, address router) external onlyOwner {\n        routersMap[token] = router;\n    }\n\n    // routers can be overwritten\n    // len(tokens) must be equal to len(routers)\n    function addBatchTokens(address[] memory tokens, address[] memory routers) external onlyOwner {\n            for(uint i = 0; i< tokens.length; i++){\n                routersMap[tokens[i]] = routers[i];\n            }\n    }\n\n\n    function getGasAndDataLimits()\n    public\n    override\n    virtual\n    view\n    returns (\n        IPaymaster.GasAndDataLimits memory limits\n    ) {\n        return IPaymaster.GasAndDataLimits(\n                250000,\n                200000,\n                210000,\n            CALLDATA_SIZE_LIMIT\n        );\n    }\n\n    // token must have pool with wrapped native currency\n    function getTokenToEthOutputPrice(uint ethValue, IERC20 token, IUniswap router) internal view returns (uint256) {\n        address[] memory path = new address[](2);\n        path[0] = address(token);\n        path[1] = router.WETH();\n        uint[] memory amountOuts = router.getAmountsIn(ethValue, path);\n        return amountOuts[0];\n    }\n\n    // Events\n    event TokensCharged(uint gasUseWithoutPost, uint gasUsedByPost, uint ethActualCharge, uint tokenActualCharge);\n    event TokensPrecharged(address token, address router, uint tokenPrecharge);\n    event Received(uint eth);\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
      },
      "@openzeppelin/contracts/math/SafeMath.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
      },
      "@openzeppelin/contracts/drafts/IERC20Permit.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@opengsn/contracts/src/BasePaymaster.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./utils/GsnTypes.sol\";\nimport \"./interfaces/IPaymaster.sol\";\nimport \"./interfaces/IRelayHub.sol\";\nimport \"./utils/GsnEip712Library.sol\";\nimport \"./forwarder/IForwarder.sol\";\n\n/**\n * Abstract base class to be inherited by a concrete Paymaster\n * A subclass must implement:\n *  - preRelayedCall\n *  - postRelayedCall\n */\nabstract contract BasePaymaster is IPaymaster, Ownable {\n\n    IRelayHub internal relayHub;\n    IForwarder public override trustedForwarder;\n\n    function getHubAddr() public override view returns (address) {\n        return address(relayHub);\n    }\n\n    //overhead of forwarder verify+signature, plus hub overhead.\n    uint256 constant public FORWARDER_HUB_OVERHEAD = 50000;\n\n    //These parameters are documented in IPaymaster.GasAndDataLimits\n    uint256 constant public PRE_RELAYED_CALL_GAS_LIMIT = 100000;\n    uint256 constant public POST_RELAYED_CALL_GAS_LIMIT = 110000;\n    uint256 constant public PAYMASTER_ACCEPTANCE_BUDGET = PRE_RELAYED_CALL_GAS_LIMIT + FORWARDER_HUB_OVERHEAD;\n    uint256 constant public CALLDATA_SIZE_LIMIT = 10500;\n\n    function getGasAndDataLimits()\n    public\n    override\n    virtual\n    view\n    returns (\n        IPaymaster.GasAndDataLimits memory limits\n    ) {\n        return IPaymaster.GasAndDataLimits(\n            PAYMASTER_ACCEPTANCE_BUDGET,\n            PRE_RELAYED_CALL_GAS_LIMIT,\n            POST_RELAYED_CALL_GAS_LIMIT,\n            CALLDATA_SIZE_LIMIT\n        );\n    }\n\n    // this method must be called from preRelayedCall to validate that the forwarder\n    // is approved by the paymaster as well as by the recipient contract.\n    function _verifyForwarder(GsnTypes.RelayRequest calldata relayRequest)\n    public\n    view\n    {\n        require(address(trustedForwarder) == relayRequest.relayData.forwarder, \"Forwarder is not trusted\");\n        GsnEip712Library.verifyForwarderTrusted(relayRequest);\n    }\n\n    /*\n     * modifier to be used by recipients as access control protection for preRelayedCall & postRelayedCall\n     */\n    modifier relayHubOnly() {\n        require(msg.sender == getHubAddr(), \"can only be called by RelayHub\");\n        _;\n    }\n\n    function setRelayHub(IRelayHub hub) public onlyOwner {\n        relayHub = hub;\n    }\n\n    function setTrustedForwarder(IForwarder forwarder) public onlyOwner {\n        trustedForwarder = forwarder;\n    }\n\n    /// check current deposit on relay hub.\n    function getRelayHubDeposit()\n    public\n    override\n    view\n    returns (uint) {\n        return relayHub.balanceOf(address(this));\n    }\n\n    // any money moved into the paymaster is transferred as a deposit.\n    // This way, we don't need to understand the RelayHub API in order to replenish\n    // the paymaster.\n    receive() external virtual payable {\n        require(address(relayHub) != address(0), \"relay hub address not set\");\n        relayHub.depositFor{value:msg.value}(address(this));\n    }\n\n    /// withdraw deposit from relayHub\n    function withdrawRelayHubDepositTo(uint amount, address payable target) public onlyOwner {\n        relayHub.withdraw(amount, target);\n    }\n}\n"
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\npragma abicoder v2;\n\nimport \"../utils/GsnTypes.sol\";\nimport \"./IStakeManager.sol\";\n\ninterface IRelayHub {\n    struct RelayHubConfig {\n        // maximum number of worker accounts allowed per manager\n        uint256 maxWorkerCount;\n        // Gas set aside for all relayCall() instructions to prevent unexpected out-of-gas exceptions\n        uint256 gasReserve;\n        // Gas overhead to calculate gasUseWithoutPost\n        uint256 postOverhead;\n        // Gas cost of all relayCall() instructions after actual 'calculateCharge()'\n        // Assume that relay has non-zero balance (costs 15'000 more otherwise).\n        uint256 gasOverhead;\n        // Maximum funds that can be deposited at once. Prevents user error by disallowing large deposits.\n        uint256 maximumRecipientDeposit;\n        // Minimum unstake delay blocks of a relay manager's stake on the StakeManager\n        uint256 minimumUnstakeDelay;\n        // Minimum stake a relay can have. An attack on the network will never cost less than half this value.\n        uint256 minimumStake;\n        // relayCall()'s msg.data upper bound gas cost per byte\n        uint256 dataGasCostPerByte;\n        // relayCalls() minimal gas overhead when calculating cost of putting tx on chain.\n        uint256 externalCallDataCostOverhead;\n    }\n\n    event RelayHubConfigured(RelayHubConfig config);\n\n    /// Emitted when a relay server registers or updates its details\n    /// Looking at these events lets a client discover relay servers\n    event RelayServerRegistered(\n        address indexed relayManager,\n        uint256 baseRelayFee,\n        uint256 pctRelayFee,\n        string relayUrl\n    );\n\n    /// Emitted when relays are added by a relayManager\n    event RelayWorkersAdded(\n        address indexed relayManager,\n        address[] newRelayWorkers,\n        uint256 workersCount\n    );\n\n    /// Emitted when an account withdraws funds from RelayHub.\n    event Withdrawn(\n        address indexed account,\n        address indexed dest,\n        uint256 amount\n    );\n\n    /// Emitted when depositFor is called, including the amount and account that was funded.\n    event Deposited(\n        address indexed paymaster,\n        address indexed from,\n        uint256 amount\n    );\n\n    /// Emitted when an attempt to relay a call fails and Paymaster does not accept the transaction.\n    /// The actual relayed call was not executed, and the recipient not charged.\n    /// @param reason contains a revert reason returned from preRelayedCall or forwarder.\n    event TransactionRejectedByPaymaster(\n        address indexed relayManager,\n        address indexed paymaster,\n        address indexed from,\n        address to,\n        address relayWorker,\n        bytes4 selector,\n        uint256 innerGasUsed,\n        bytes reason\n    );\n\n    /// Emitted when a transaction is relayed. Note that the actual encoded function might be reverted: this will be\n    /// indicated in the status field.\n    /// Useful when monitoring a relay's operation and relayed calls to a contract.\n    /// Charge is the ether value deducted from the recipient's balance, paid to the relay's manager.\n    event TransactionRelayed(\n        address indexed relayManager,\n        address indexed relayWorker,\n        address indexed from,\n        address to,\n        address paymaster,\n        bytes4 selector,\n        RelayCallStatus status,\n        uint256 charge\n    );\n\n    event TransactionResult(\n        RelayCallStatus status,\n        bytes returnValue\n    );\n\n    event HubDeprecated(uint256 fromBlock);\n\n    /// Reason error codes for the TransactionRelayed event\n    /// @param OK - the transaction was successfully relayed and execution successful - never included in the event\n    /// @param RelayedCallFailed - the transaction was relayed, but the relayed call failed\n    /// @param RejectedByPreRelayed - the transaction was not relayed due to preRelatedCall reverting\n    /// @param RejectedByForwarder - the transaction was not relayed due to forwarder check (signature,nonce)\n    /// @param PostRelayedFailed - the transaction was relayed and reverted due to postRelatedCall reverting\n    /// @param PaymasterBalanceChanged - the transaction was relayed and reverted due to the paymaster balance change\n    enum RelayCallStatus {\n        OK,\n        RelayedCallFailed,\n        RejectedByPreRelayed,\n        RejectedByForwarder,\n        RejectedByRecipientRevert,\n        PostRelayedFailed,\n        PaymasterBalanceChanged\n    }\n\n    /// Add new worker addresses controlled by sender who must be a staked Relay Manager address.\n    /// Emits a RelayWorkersAdded event.\n    /// This function can be called multiple times, emitting new events\n    function addRelayWorkers(address[] calldata newRelayWorkers) external;\n\n    function registerRelayServer(uint256 baseRelayFee, uint256 pctRelayFee, string calldata url) external;\n\n    // Balance management\n\n    /// Deposits ether for a contract, so that it can receive (and pay for) relayed transactions. Unused balance can only\n    /// be withdrawn by the contract itself, by calling withdraw.\n    /// Emits a Deposited event.\n    function depositFor(address target) external payable;\n\n    /// Withdraws from an account's balance, sending it back to it. Relay managers call this to retrieve their revenue, and\n    /// contracts can also use it to reduce their funding.\n    /// Emits a Withdrawn event.\n    function withdraw(uint256 amount, address payable dest) external;\n\n    // Relaying\n\n\n    /// Relays a transaction. For this to succeed, multiple conditions must be met:\n    ///  - Paymaster's \"preRelayCall\" method must succeed and not revert\n    ///  - the sender must be a registered Relay Worker that the user signed\n    ///  - the transaction's gas price must be equal or larger than the one that was signed by the sender\n    ///  - the transaction must have enough gas to run all internal transactions if they use all gas available to them\n    ///  - the Paymaster must have enough balance to pay the Relay Worker for the scenario when all gas is spent\n    ///\n    /// If all conditions are met, the call will be relayed and the recipient charged.\n    ///\n    /// Arguments:\n    /// @param maxAcceptanceBudget - max valid value for paymaster.getGasLimits().acceptanceBudget\n    /// @param relayRequest - all details of the requested relayed call\n    /// @param signature - client's EIP-712 signature over the relayRequest struct\n    /// @param approvalData: dapp-specific data forwarded to preRelayedCall.\n    ///        This value is *not* verified by the Hub. For example, it can be used to pass a signature to the Paymaster\n    /// @param externalGasLimit - the value passed as gasLimit to the transaction.\n    ///\n    /// Emits a TransactionRelayed event.\n    function relayCall(\n        uint maxAcceptanceBudget,\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        bytes calldata approvalData,\n        uint externalGasLimit\n    )\n    external\n    returns (bool paymasterAccepted, bytes memory returnValue);\n\n    function penalize(address relayWorker, address payable beneficiary) external;\n\n    function setConfiguration(RelayHubConfig memory _config) external;\n\n    // Deprecate hub (reverting relayCall()) from block number 'fromBlock'\n    // Can only be called by owner\n    function deprecateHub(uint256 fromBlock) external;\n\n    /// The fee is expressed as a base fee in wei plus percentage on actual charge.\n    /// E.g. a value of 40 stands for a 40% fee, so the recipient will be\n    /// charged for 1.4 times the spent amount.\n    function calculateCharge(uint256 gasUsed, GsnTypes.RelayData calldata relayData) external view returns (uint256);\n\n    /* getters */\n\n    /// Returns the whole hub configuration\n    function getConfiguration() external view returns (RelayHubConfig memory config);\n\n    function calldataGasCost(uint256 length) external view returns (uint256);\n\n    function workerToManager(address worker) external view returns(address);\n\n    function workerCount(address manager) external view returns(uint256);\n\n    /// Returns an account's deposits. It can be either a deposit of a paymaster, or a revenue of a relay manager.\n    function balanceOf(address target) external view returns (uint256);\n\n    function stakeManager() external view returns (IStakeManager);\n\n    function penalizer() external view returns (address);\n\n    /// Uses StakeManager info to decide if the Relay Manager can be considered staked\n    /// @return true if stake size and delay satisfy all requirements\n    function isRelayManagerStaked(address relayManager) external view returns(bool);\n\n    // Checks hubs' deprecation status\n    function isDeprecated() external view returns (bool);\n\n    // Returns the block number from which the hub no longer allows relaying calls.\n    function deprecationBlock() external view returns (uint256);\n\n    /// @return a SemVer-compliant version of the hub contract\n    function versionHub() external view returns (string memory);\n}\n\n"
      },
      "contracts/gsn/IUniswap.sol": {
        "content": "// SPDX-License-Identifier:MIT\npragma solidity >=0.7.6;\n\ninterface IUniswap {\n\n    function swapExactTokensForETH(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    )\n    external\n    returns (uint[] memory amounts);\n\n\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n\n    function WETH() external pure returns (address);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\n\nimport \"../forwarder/IForwarder.sol\";\n\ninterface GsnTypes {\n    /// @notice gasPrice, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\n    struct RelayData {\n        uint256 gasPrice;\n        uint256 pctRelayFee;\n        uint256 baseRelayFee;\n        address relayWorker;\n        address paymaster;\n        address forwarder;\n        bytes paymasterData;\n        uint256 clientId;\n    }\n\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\n    struct RelayRequest {\n        IForwarder.ForwardRequest request;\n        RelayData relayData;\n    }\n}\n"
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\npragma abicoder v2;\n\nimport \"../utils/GsnTypes.sol\";\n\ninterface IPaymaster {\n\n    /**\n     * @param acceptanceBudget -\n     *      Paymaster expected gas budget to accept (or reject) a request\n     *      This a gas required by any calculations that might need to reject the\n     *      transaction, by preRelayedCall, forwarder and recipient.\n     *      See value in BasePaymaster.PAYMASTER_ACCEPTANCE_BUDGET\n     *      Transaction that gets rejected above that gas usage is on the paymaster's expense.\n     *      As long this value is above preRelayedCallGasLimit (see defaults in BasePaymaster), the\n     *      Paymaster is guaranteed it will never pay for rejected transactions.\n     *      If this value is below preRelayedCallGasLimt, it might might make Paymaster open to a \"griefing\" attack.\n     *\n     *      Specifying value too high might make the call rejected by some relayers.\n     *\n     *      From a Relay's point of view, this is the highest gas value a paymaster might \"grief\" the relay,\n     *      since the paymaster will pay anything above that (regardless if the tx reverts)\n     *\n     * @param preRelayedCallGasLimit - the max gas usage of preRelayedCall. any revert (including OOG)\n     *      of preRelayedCall is a reject by the paymaster.\n     *      as long as acceptanceBudget is above preRelayedCallGasLimit, any such revert (including OOG)\n     *      is not payed by the paymaster.\n     * @param postRelayedCallGasLimit - the max gas usage of postRelayedCall.\n     *      note that an OOG will revert the transaction, but the paymaster already committed to pay,\n     *      so the relay will get compensated, at the expense of the paymaster\n     */\n    struct GasAndDataLimits {\n        uint256 acceptanceBudget;\n        uint256 preRelayedCallGasLimit;\n        uint256 postRelayedCallGasLimit;\n        uint256 calldataSizeLimit;\n    }\n\n    /**\n     * Return the Gas Limits and msg.data max size constants used by the Paymaster.\n     */\n    function getGasAndDataLimits()\n    external\n    view\n    returns (\n        GasAndDataLimits memory limits\n    );\n\n    function trustedForwarder() external view returns (IForwarder);\n\n/**\n * return the relayHub of this contract.\n */\n    function getHubAddr() external view returns (address);\n\n    /**\n     * Can be used to determine if the contract can pay for incoming calls before making any.\n     * @return the paymaster's deposit in the RelayHub.\n     */\n    function getRelayHubDeposit() external view returns (uint256);\n\n    /**\n     * Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call.\n     *\n     * MUST be protected with relayHubOnly() in case it modifies state.\n     *\n     * The Paymaster rejects by the following \"revert\" operations\n     *  - preRelayedCall() method reverts\n     *  - the forwarder reverts because of nonce or signature error\n     *  - the paymaster returned \"rejectOnRecipientRevert\", and the recipient contract reverted.\n     * In any of the above cases, all paymaster calls (and recipient call) are reverted.\n     * In any other case, the paymaster agrees to pay for the gas cost of the transaction (note\n     *  that this includes also postRelayedCall revert)\n     *\n     * The rejectOnRecipientRevert flag means the Paymaster \"delegate\" the rejection to the recipient\n     *  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,\n     *  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,\n     *  otherwise the TX is paid by the Paymaster.\n     *\n     *  @param relayRequest - the full relay request structure\n     *  @param signature - user's EIP712-compatible signature of the {@link relayRequest}.\n     *              Note that in most cases the paymaster shouldn't try use it at all. It is always checked\n     *              by the forwarder immediately after preRelayedCall returns.\n     *  @param approvalData - extra dapp-specific data (e.g. signature from trusted party)\n     *  @param maxPossibleGas - based on values returned from {@link getGasAndDataLimits},\n     *         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.\n     *         In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"\n     *  return:\n     *      a context to be passed to postRelayedCall\n     *      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.\n     *          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.\n     *          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).\n     */\n    function preRelayedCall(\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        bytes calldata approvalData,\n        uint256 maxPossibleGas\n    )\n    external\n    returns (bytes memory context, bool rejectOnRecipientRevert);\n\n    /**\n     * This method is called after the actual relayed function call.\n     * It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call.\n     *\n     * MUST be protected with relayHubOnly() in case it modifies state.\n     *\n     * @param context - the call context, as returned by the preRelayedCall\n     * @param success - true if the relayed call succeeded, false if it reverted\n     * @param gasUseWithoutPost - the actual amount of gas used by the entire transaction, EXCEPT\n     *        the gas used by the postRelayedCall itself.\n     * @param relayData - the relay params of the request. can be used by relayHub.calculateCharge()\n     *\n     * Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster\n     * is still committed to pay the relay for the entire transaction.\n     */\n    function postRelayedCall(\n        bytes calldata context,\n        bool success,\n        uint256 gasUseWithoutPost,\n        GsnTypes.RelayData calldata relayData\n    ) external;\n\n    function versionPaymaster() external view returns (string memory);\n}\n"
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\npragma abicoder v2;\n\nimport \"../utils/GsnTypes.sol\";\nimport \"../interfaces/IRelayRecipient.sol\";\nimport \"../forwarder/IForwarder.sol\";\n\nimport \"./GsnUtils.sol\";\n\n/**\n * Bridge Library to map GSN RelayRequest into a call of a Forwarder\n */\nlibrary GsnEip712Library {\n    // maximum length of return value/revert reason for 'execute' method. Will truncate result if exceeded.\n    uint256 private constant MAX_RETURN_SIZE = 1024;\n\n    //copied from Forwarder (can't reference string constants even from another library)\n    string public constant GENERIC_PARAMS = \"address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntil\";\n\n    bytes public constant RELAYDATA_TYPE = \"RelayData(uint256 gasPrice,uint256 pctRelayFee,uint256 baseRelayFee,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)\";\n\n    string public constant RELAY_REQUEST_NAME = \"RelayRequest\";\n    string public constant RELAY_REQUEST_SUFFIX = string(abi.encodePacked(\"RelayData relayData)\", RELAYDATA_TYPE));\n\n    bytes public constant RELAY_REQUEST_TYPE = abi.encodePacked(\n        RELAY_REQUEST_NAME,\"(\",GENERIC_PARAMS,\",\", RELAY_REQUEST_SUFFIX);\n\n    bytes32 public constant RELAYDATA_TYPEHASH = keccak256(RELAYDATA_TYPE);\n    bytes32 public constant RELAY_REQUEST_TYPEHASH = keccak256(RELAY_REQUEST_TYPE);\n\n\n    struct EIP712Domain {\n        string name;\n        string version;\n        uint256 chainId;\n        address verifyingContract;\n    }\n\n    bytes32 public constant EIP712DOMAIN_TYPEHASH = keccak256(\n        \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n    );\n\n    function splitRequest(\n        GsnTypes.RelayRequest calldata req\n    )\n    internal\n    pure\n    returns (\n        bytes memory suffixData\n    ) {\n        suffixData = abi.encode(\n            hashRelayData(req.relayData));\n    }\n\n    //verify that the recipient trusts the given forwarder\n    // MUST be called by paymaster\n    function verifyForwarderTrusted(GsnTypes.RelayRequest calldata relayRequest) internal view {\n        (bool success, bytes memory ret) = relayRequest.request.to.staticcall(\n            abi.encodeWithSelector(\n                IRelayRecipient.isTrustedForwarder.selector, relayRequest.relayData.forwarder\n            )\n        );\n        require(success, \"isTrustedForwarder: reverted\");\n        require(ret.length == 32, \"isTrustedForwarder: bad response\");\n        require(abi.decode(ret, (bool)), \"invalid forwarder for recipient\");\n    }\n\n    function verifySignature(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal view {\n        (bytes memory suffixData) = splitRequest(relayRequest);\n        bytes32 _domainSeparator = domainSeparator(relayRequest.relayData.forwarder);\n        IForwarder forwarder = IForwarder(payable(relayRequest.relayData.forwarder));\n        forwarder.verify(relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature);\n    }\n\n    function verify(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal view {\n        verifyForwarderTrusted(relayRequest);\n        verifySignature(relayRequest, signature);\n    }\n\n    function execute(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal returns (bool forwarderSuccess, bool callSuccess, bytes memory ret) {\n        (bytes memory suffixData) = splitRequest(relayRequest);\n        bytes32 _domainSeparator = domainSeparator(relayRequest.relayData.forwarder);\n        /* solhint-disable-next-line avoid-low-level-calls */\n        (forwarderSuccess, ret) = relayRequest.relayData.forwarder.call(\n            abi.encodeWithSelector(IForwarder.execute.selector,\n            relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature\n        ));\n        if ( forwarderSuccess ) {\n\n          //decode return value of execute:\n          (callSuccess, ret) = abi.decode(ret, (bool, bytes));\n        }\n        truncateInPlace(ret);\n    }\n\n    //truncate the given parameter (in-place) if its length is above the given maximum length\n    // do nothing otherwise.\n    //NOTE: solidity warns unless the method is marked \"pure\", but it DOES modify its parameter.\n    function truncateInPlace(bytes memory data) internal pure {\n        MinLibBytes.truncateInPlace(data, MAX_RETURN_SIZE);\n    }\n\n    function domainSeparator(address forwarder) internal pure returns (bytes32) {\n        return hashDomain(EIP712Domain({\n            name : \"GSN Relayed Transaction\",\n            version : \"2\",\n            chainId : getChainID(),\n            verifyingContract : forwarder\n            }));\n    }\n\n    function getChainID() internal pure returns (uint256 id) {\n        /* solhint-disable no-inline-assembly */\n        assembly {\n            id := chainid()\n        }\n    }\n\n    function hashDomain(EIP712Domain memory req) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n                EIP712DOMAIN_TYPEHASH,\n                keccak256(bytes(req.name)),\n                keccak256(bytes(req.version)),\n                req.chainId,\n                req.verifyingContract));\n    }\n\n    function hashRelayData(GsnTypes.RelayData calldata req) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n                RELAYDATA_TYPEHASH,\n                req.gasPrice,\n                req.pctRelayFee,\n                req.baseRelayFee,\n                req.relayWorker,\n                req.paymaster,\n                req.forwarder,\n                keccak256(req.paymasterData),\n                req.clientId\n            ));\n    }\n}\n"
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\npragma abicoder v2;\n\ninterface IForwarder {\n\n    struct ForwardRequest {\n        address from;\n        address to;\n        uint256 value;\n        uint256 gas;\n        uint256 nonce;\n        bytes data;\n        uint256 validUntil;\n    }\n\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\n\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\n\n    function getNonce(address from)\n    external view\n    returns(uint256);\n\n    /**\n     * verify the transaction would execute.\n     * validate the signature and the nonce of the request.\n     * revert if either signature or nonce are incorrect.\n     * also revert if domainSeparator or requestTypeHash are not registered.\n     */\n    function verify(\n        ForwardRequest calldata forwardRequest,\n        bytes32 domainSeparator,\n        bytes32 requestTypeHash,\n        bytes calldata suffixData,\n        bytes calldata signature\n    ) external view;\n\n    /**\n     * execute a transaction\n     * @param forwardRequest - all transaction parameters\n     * @param domainSeparator - domain used when signing this request\n     * @param requestTypeHash - request type used when signing this request.\n     * @param suffixData - the extension data used when signing this request.\n     * @param signature - signature to validate.\n     *\n     * the transaction is verified, and then executed.\n     * the success and ret of \"call\" are returned.\n     * This method would revert only verification errors. target errors\n     * are reported using the returned \"success\" and ret string\n     */\n    function execute(\n        ForwardRequest calldata forwardRequest,\n        bytes32 domainSeparator,\n        bytes32 requestTypeHash,\n        bytes calldata suffixData,\n        bytes calldata signature\n    )\n    external payable\n    returns (bool success, bytes memory ret);\n\n    /**\n     * Register a new Request typehash.\n     * @param typeName - the name of the request type.\n     * @param typeSuffix - any extra data after the generic params.\n     *  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)\n     */\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\n\n    /**\n     * Register a new domain separator.\n     * The domain separator must have the following fields: name,version,chainId, verifyingContract.\n     * the chainId is the current network's chainId, and the verifyingContract is this forwarder.\n     * This method is given the domain name and version to create and register the domain separator value.\n     * @param name the domain's display name\n     * @param version the domain/protocol version\n     */\n    function registerDomainSeparator(string calldata name, string calldata version) external;\n}\n"
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\n\ninterface IStakeManager {\n\n    /// Emitted when a stake or unstakeDelay are initialized or increased\n    event StakeAdded(\n        address indexed relayManager,\n        address indexed owner,\n        uint256 stake,\n        uint256 unstakeDelay\n    );\n\n    /// Emitted once a stake is scheduled for withdrawal\n    event StakeUnlocked(\n        address indexed relayManager,\n        address indexed owner,\n        uint256 withdrawBlock\n    );\n\n    /// Emitted when owner withdraws relayManager funds\n    event StakeWithdrawn(\n        address indexed relayManager,\n        address indexed owner,\n        uint256 amount\n    );\n\n    /// Emitted when an authorized Relay Hub penalizes a relayManager\n    event StakePenalized(\n        address indexed relayManager,\n        address indexed beneficiary,\n        uint256 reward\n    );\n\n    event HubAuthorized(\n        address indexed relayManager,\n        address indexed relayHub\n    );\n\n    event HubUnauthorized(\n        address indexed relayManager,\n        address indexed relayHub,\n        uint256 removalBlock\n    );\n\n    event OwnerSet(\n        address indexed relayManager,\n        address indexed owner\n    );\n\n    /// @param stake - amount of ether staked for this relay\n    /// @param unstakeDelay - number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'\n    /// @param withdrawBlock - first block number 'withdraw' will be callable, or zero if the unlock has not been called\n    /// @param owner - address that receives revenue and manages relayManager's stake\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelay;\n        uint256 withdrawBlock;\n        address payable owner;\n    }\n\n    struct RelayHubInfo {\n        uint256 removalBlock;\n    }\n\n    /// Set the owner of a Relay Manager. Called only by the RelayManager itself.\n    /// Note that owners cannot transfer ownership - if the entry already exists, reverts.\n    /// @param owner - owner of the relay (as configured off-chain)\n    function setRelayManagerOwner(address payable owner) external;\n\n    /// Only the owner can call this function. If the entry does not exist, reverts.\n    /// @param relayManager - address that represents a stake entry and controls relay registrations on relay hubs\n    /// @param unstakeDelay - number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'\n    function stakeForRelayManager(address relayManager, uint256 unstakeDelay) external payable;\n\n    function unlockStake(address relayManager) external;\n\n    function withdrawStake(address relayManager) external;\n\n    function authorizeHubByOwner(address relayManager, address relayHub) external;\n\n    function authorizeHubByManager(address relayHub) external;\n\n    function unauthorizeHubByOwner(address relayManager, address relayHub) external;\n\n    function unauthorizeHubByManager(address relayHub) external;\n\n    function isRelayManagerStaked(address relayManager, address relayHub, uint256 minAmount, uint256 minUnstakeDelay)\n    external\n    view\n    returns (bool);\n\n    /// Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns half of stake on the way.\n    /// @param relayManager - entry to penalize\n    /// @param beneficiary - address that receives half of the penalty amount\n    /// @param amount - amount to withdraw from stake\n    function penalizeRelayManager(address relayManager, address payable beneficiary, uint256 amount) external;\n\n    function getStakeInfo(address relayManager) external view returns (StakeInfo memory stakeInfo);\n\n    function maxUnstakeDelay() external view returns (uint256);\n\n    function versionSM() external view returns (string memory);\n}\n"
      },
      "@opengsn/contracts/src/interfaces/IRelayRecipient.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\n\n/**\n * a contract must implement this interface in order to support relayed transaction.\n * It is better to inherit the BaseRelayRecipient as its implementation.\n */\nabstract contract IRelayRecipient {\n\n    /**\n     * return if the forwarder is trusted to forward relayed transactions to us.\n     * the forwarder is required to verify the sender's signature, and verify\n     * the call is not a replay.\n     */\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\n\n    /**\n     * return the sender of this call.\n     * if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\n     * of the msg.data.\n     * otherwise, return `msg.sender`\n     * should be used in the contract anywhere instead of msg.sender\n     */\n    function _msgSender() internal virtual view returns (address payable);\n\n    /**\n     * return the msg.data of this call.\n     * if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\n     * of the msg.data - so this method will strip those 20 bytes off.\n     * otherwise (if the call was made directly and not through the forwarder), return `msg.data`\n     * should be used in the contract instead of msg.data, where this difference matters.\n     */\n    function _msgData() internal virtual view returns (bytes memory);\n\n    function versionRecipient() external virtual view returns (string memory);\n}\n"
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol": {
        "content": "/* solhint-disable no-inline-assembly */\n// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\n\nimport \"../utils/MinLibBytes.sol\";\n\nlibrary GsnUtils {\n\n    /**\n     * extract method sig from encoded function call\n     */\n    function getMethodSig(bytes memory msgData) internal pure returns (bytes4) {\n        return MinLibBytes.readBytes4(msgData, 0);\n    }\n\n    /**\n     * extract parameter from encoded-function block.\n     * see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\n     * the return value should be casted to the right type (uintXXX/bytesXXX/address/bool/enum)\n     */\n    function getParam(bytes memory msgData, uint index) internal pure returns (uint) {\n        return MinLibBytes.readUint256(msgData, 4 + index * 32);\n    }\n\n    //re-throw revert with the same revert data.\n    function revertWithData(bytes memory data) internal pure {\n        assembly {\n            revert(add(data,32), mload(data))\n        }\n    }\n\n}\n"
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// minimal bytes manipulation required by GSN\n// a minimal subset from 0x/LibBytes\n/* solhint-disable no-inline-assembly */\npragma solidity >=0.7.6;\n\nlibrary MinLibBytes {\n\n    //truncate the given parameter (in-place) if its length is above the given maximum length\n    // do nothing otherwise.\n    //NOTE: solidity warns unless the method is marked \"pure\", but it DOES modify its parameter.\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\n        if (data.length > maxlen) {\n            assembly { mstore(data, maxlen) }\n        }\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return result address from byte array.\n    function readAddress(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (address result)\n    {\n        require (b.length >= index + 20, \"readAddress: data too short\");\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    function readBytes32(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes32 result)\n    {\n        require(b.length >= index + 32, \"readBytes32: data too short\" );\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, add(index,32)))\n        }\n        return result;\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return result uint256 value from byte array.\n    function readUint256(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (uint256 result)\n    {\n        result = uint256(readBytes32(b, index));\n        return result;\n    }\n\n    function readBytes4(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes4 result)\n    {\n        require(b.length >= index + 4, \"readBytes4: data too short\");\n\n        // Read the bytes4 from array memory\n        assembly {\n            result := mload(add(b, add(index,32)))\n            // Solidity does not require us to clean the trailing bytes.\n            // We do it anyway\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\n        }\n        return result;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "@opengsn/contracts/src/BasePaymaster.sol": {
        "BasePaymaster": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "CALLDATA_SIZE_LIMIT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "FORWARDER_HUB_OVERHEAD",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PAYMASTER_ACCEPTANCE_BUDGET",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "POST_RELAYED_CALL_GAS_LIMIT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PRE_RELAYED_CALL_GAS_LIMIT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gas",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "validUntil",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IForwarder.ForwardRequest",
                      "name": "request",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "gasPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "pctRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "relayWorker",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "paymaster",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "forwarder",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "paymasterData",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "clientId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct GsnTypes.RelayData",
                      "name": "relayData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayRequest",
                  "name": "relayRequest",
                  "type": "tuple"
                }
              ],
              "name": "_verifyForwarder",
              "outputs": [],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGasAndDataLimits",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "acceptanceBudget",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "preRelayedCallGasLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "postRelayedCallGasLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "calldataSizeLimit",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IPaymaster.GasAndDataLimits",
                  "name": "limits",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHubAddr",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRelayHubDeposit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "context",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "gasUseWithoutPost",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "gasPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pctRelayFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseRelayFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "relayWorker",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "paymaster",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "forwarder",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "paymasterData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "clientId",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayData",
                  "name": "relayData",
                  "type": "tuple"
                }
              ],
              "name": "postRelayedCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gas",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "validUntil",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IForwarder.ForwardRequest",
                      "name": "request",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "gasPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "pctRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "relayWorker",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "paymaster",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "forwarder",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "paymasterData",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "clientId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct GsnTypes.RelayData",
                      "name": "relayData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayRequest",
                  "name": "relayRequest",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "approvalData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPossibleGas",
                  "type": "uint256"
                }
              ],
              "name": "preRelayedCall",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "context",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "rejectOnRecipientRevert",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IRelayHub",
                  "name": "hub",
                  "type": "address"
                }
              ],
              "name": "setRelayHub",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IForwarder",
                  "name": "forwarder",
                  "type": "address"
                }
              ],
              "name": "setTrustedForwarder",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "trustedForwarder",
              "outputs": [
                {
                  "internalType": "contract IForwarder",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "versionPaymaster",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "withdrawRelayHubDepositTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
                "params": {
                  "context": "- the call context, as returned by the preRelayedCall",
                  "gasUseWithoutPost": "- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.",
                  "relayData": "- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.",
                  "success": "- true if the relayed call succeeded, false if it reverted"
                }
              },
              "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
                "params": {
                  "approvalData": "- extra dapp-specific data (e.g. signature from trusted party)",
                  "maxPossibleGas": "- based on values returned from {@link getGasAndDataLimits},         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.         In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"  return:      a context to be passed to postRelayedCall      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).",
                  "relayRequest": "- the full relay request structure",
                  "signature": "- user's EIP712-compatible signature of the {@link relayRequest}.              Note that in most cases the paymaster shouldn't try use it at all. It is always checked              by the forwarder immediately after preRelayedCall returns."
                }
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "CALLDATA_SIZE_LIMIT()": "5c5e3db1",
              "FORWARDER_HUB_OVERHEAD()": "b90b41cf",
              "PAYMASTER_ACCEPTANCE_BUDGET()": "df463a66",
              "POST_RELAYED_CALL_GAS_LIMIT()": "bbdaa3c9",
              "PRE_RELAYED_CALL_GAS_LIMIT()": "f9c002f7",
              "_verifyForwarder(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)))": "a5dcd07b",
              "getGasAndDataLimits()": "b039a88f",
              "getHubAddr()": "74e861d6",
              "getRelayHubDeposit()": "2afe31c1",
              "owner()": "8da5cb5b",
              "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": "76fa01c3",
              "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": "00be5dd4",
              "renounceOwnership()": "715018a6",
              "setRelayHub(address)": "7bb05264",
              "setTrustedForwarder(address)": "da742228",
              "transferOwnership(address)": "f2fde38b",
              "trustedForwarder()": "7da0a877",
              "versionPaymaster()": "921276ea",
              "withdrawRelayHubDepositTo(uint256,address)": "2d14c4b7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLDATA_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORWARDER_HUB_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_ACCEPTANCE_BUDGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POST_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRE_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"}],\"name\":\"_verifyForwarder\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasAndDataLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSizeLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasAndDataLimits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHubDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"rejectOnRecipientRevert\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRelayHub\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setRelayHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IForwarder\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"contract IForwarder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPaymaster\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawRelayHubDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"params\":{\"context\":\"- the call context, as returned by the preRelayedCall\",\"gasUseWithoutPost\":\"- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.\",\"relayData\":\"- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.\",\"success\":\"- true if the relayed call succeeded, false if it reverted\"}},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"params\":{\"approvalData\":\"- extra dapp-specific data (e.g. signature from trusted party)\",\"maxPossibleGas\":\"- based on values returned from {@link getGasAndDataLimits},         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.         In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"  return:      a context to be passed to postRelayedCall      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).\",\"relayRequest\":\"- the full relay request structure\",\"signature\":\"- user's EIP712-compatible signature of the {@link relayRequest}.              Note that in most cases the paymaster shouldn't try use it at all. It is always checked              by the forwarder immediately after preRelayedCall returns.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGasAndDataLimits()\":{\"notice\":\"Return the Gas Limits and msg.data max size constants used by the Paymaster.\"},\"getHubAddr()\":{\"notice\":\"return the relayHub of this contract.\"},\"getRelayHubDeposit()\":{\"notice\":\"check current deposit on relay hub.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state.\"},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call. MUST be protected with relayHubOnly() in case it modifies state. The Paymaster rejects by the following \\\"revert\\\" operations  - preRelayedCall() method reverts  - the forwarder reverts because of nonce or signature error  - the paymaster returned \\\"rejectOnRecipientRevert\\\", and the recipient contract reverted. In any of the above cases, all paymaster calls (and recipient call) are reverted. In any other case, the paymaster agrees to pay for the gas cost of the transaction (note  that this includes also postRelayedCall revert) The rejectOnRecipientRevert flag means the Paymaster \\\"delegate\\\" the rejection to the recipient  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,  otherwise the TX is paid by the Paymaster.\"},\"withdrawRelayHubDepositTo(uint256,address)\":{\"notice\":\"withdraw deposit from relayHub\"}},\"notice\":\"Abstract base class to be inherited by a concrete Paymaster A subclass must implement:  - preRelayedCall  - postRelayedCall\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/BasePaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./utils/GsnTypes.sol\\\";\\nimport \\\"./interfaces/IPaymaster.sol\\\";\\nimport \\\"./interfaces/IRelayHub.sol\\\";\\nimport \\\"./utils/GsnEip712Library.sol\\\";\\nimport \\\"./forwarder/IForwarder.sol\\\";\\n\\n/**\\n * Abstract base class to be inherited by a concrete Paymaster\\n * A subclass must implement:\\n *  - preRelayedCall\\n *  - postRelayedCall\\n */\\nabstract contract BasePaymaster is IPaymaster, Ownable {\\n\\n    IRelayHub internal relayHub;\\n    IForwarder public override trustedForwarder;\\n\\n    function getHubAddr() public override view returns (address) {\\n        return address(relayHub);\\n    }\\n\\n    //overhead of forwarder verify+signature, plus hub overhead.\\n    uint256 constant public FORWARDER_HUB_OVERHEAD = 50000;\\n\\n    //These parameters are documented in IPaymaster.GasAndDataLimits\\n    uint256 constant public PRE_RELAYED_CALL_GAS_LIMIT = 100000;\\n    uint256 constant public POST_RELAYED_CALL_GAS_LIMIT = 110000;\\n    uint256 constant public PAYMASTER_ACCEPTANCE_BUDGET = PRE_RELAYED_CALL_GAS_LIMIT + FORWARDER_HUB_OVERHEAD;\\n    uint256 constant public CALLDATA_SIZE_LIMIT = 10500;\\n\\n    function getGasAndDataLimits()\\n    public\\n    override\\n    virtual\\n    view\\n    returns (\\n        IPaymaster.GasAndDataLimits memory limits\\n    ) {\\n        return IPaymaster.GasAndDataLimits(\\n            PAYMASTER_ACCEPTANCE_BUDGET,\\n            PRE_RELAYED_CALL_GAS_LIMIT,\\n            POST_RELAYED_CALL_GAS_LIMIT,\\n            CALLDATA_SIZE_LIMIT\\n        );\\n    }\\n\\n    // this method must be called from preRelayedCall to validate that the forwarder\\n    // is approved by the paymaster as well as by the recipient contract.\\n    function _verifyForwarder(GsnTypes.RelayRequest calldata relayRequest)\\n    public\\n    view\\n    {\\n        require(address(trustedForwarder) == relayRequest.relayData.forwarder, \\\"Forwarder is not trusted\\\");\\n        GsnEip712Library.verifyForwarderTrusted(relayRequest);\\n    }\\n\\n    /*\\n     * modifier to be used by recipients as access control protection for preRelayedCall & postRelayedCall\\n     */\\n    modifier relayHubOnly() {\\n        require(msg.sender == getHubAddr(), \\\"can only be called by RelayHub\\\");\\n        _;\\n    }\\n\\n    function setRelayHub(IRelayHub hub) public onlyOwner {\\n        relayHub = hub;\\n    }\\n\\n    function setTrustedForwarder(IForwarder forwarder) public onlyOwner {\\n        trustedForwarder = forwarder;\\n    }\\n\\n    /// check current deposit on relay hub.\\n    function getRelayHubDeposit()\\n    public\\n    override\\n    view\\n    returns (uint) {\\n        return relayHub.balanceOf(address(this));\\n    }\\n\\n    // any money moved into the paymaster is transferred as a deposit.\\n    // This way, we don't need to understand the RelayHub API in order to replenish\\n    // the paymaster.\\n    receive() external virtual payable {\\n        require(address(relayHub) != address(0), \\\"relay hub address not set\\\");\\n        relayHub.depositFor{value:msg.value}(address(this));\\n    }\\n\\n    /// withdraw deposit from relayHub\\n    function withdrawRelayHubDepositTo(uint amount, address payable target) public onlyOwner {\\n        relayHub.withdraw(amount, target);\\n    }\\n}\\n\",\"keccak256\":\"0xd914685ceab88a06d4a1c94d7dd11167bec794106b4c25554bce6491d0df6ec8\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\ninterface IForwarder {\\n\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntil;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * verify the transaction would execute.\\n     * validate the signature and the nonce of the request.\\n     * revert if either signature or nonce are incorrect.\\n     * also revert if domainSeparator or requestTypeHash are not registered.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * execute a transaction\\n     * @param forwardRequest - all transaction parameters\\n     * @param domainSeparator - domain used when signing this request\\n     * @param requestTypeHash - request type used when signing this request.\\n     * @param suffixData - the extension data used when signing this request.\\n     * @param signature - signature to validate.\\n     *\\n     * the transaction is verified, and then executed.\\n     * the success and ret of \\\"call\\\" are returned.\\n     * This method would revert only verification errors. target errors\\n     * are reported using the returned \\\"success\\\" and ret string\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * Register a new Request typehash.\\n     * @param typeName - the name of the request type.\\n     * @param typeSuffix - any extra data after the generic params.\\n     *  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * Register a new domain separator.\\n     * The domain separator must have the following fields: name,version,chainId, verifyingContract.\\n     * the chainId is the current network's chainId, and the verifyingContract is this forwarder.\\n     * This method is given the domain name and version to create and register the domain separator value.\\n     * @param name the domain's display name\\n     * @param version the domain/protocol version\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\n\\ninterface IPaymaster {\\n\\n    /**\\n     * @param acceptanceBudget -\\n     *      Paymaster expected gas budget to accept (or reject) a request\\n     *      This a gas required by any calculations that might need to reject the\\n     *      transaction, by preRelayedCall, forwarder and recipient.\\n     *      See value in BasePaymaster.PAYMASTER_ACCEPTANCE_BUDGET\\n     *      Transaction that gets rejected above that gas usage is on the paymaster's expense.\\n     *      As long this value is above preRelayedCallGasLimit (see defaults in BasePaymaster), the\\n     *      Paymaster is guaranteed it will never pay for rejected transactions.\\n     *      If this value is below preRelayedCallGasLimt, it might might make Paymaster open to a \\\"griefing\\\" attack.\\n     *\\n     *      Specifying value too high might make the call rejected by some relayers.\\n     *\\n     *      From a Relay's point of view, this is the highest gas value a paymaster might \\\"grief\\\" the relay,\\n     *      since the paymaster will pay anything above that (regardless if the tx reverts)\\n     *\\n     * @param preRelayedCallGasLimit - the max gas usage of preRelayedCall. any revert (including OOG)\\n     *      of preRelayedCall is a reject by the paymaster.\\n     *      as long as acceptanceBudget is above preRelayedCallGasLimit, any such revert (including OOG)\\n     *      is not payed by the paymaster.\\n     * @param postRelayedCallGasLimit - the max gas usage of postRelayedCall.\\n     *      note that an OOG will revert the transaction, but the paymaster already committed to pay,\\n     *      so the relay will get compensated, at the expense of the paymaster\\n     */\\n    struct GasAndDataLimits {\\n        uint256 acceptanceBudget;\\n        uint256 preRelayedCallGasLimit;\\n        uint256 postRelayedCallGasLimit;\\n        uint256 calldataSizeLimit;\\n    }\\n\\n    /**\\n     * Return the Gas Limits and msg.data max size constants used by the Paymaster.\\n     */\\n    function getGasAndDataLimits()\\n    external\\n    view\\n    returns (\\n        GasAndDataLimits memory limits\\n    );\\n\\n    function trustedForwarder() external view returns (IForwarder);\\n\\n/**\\n * return the relayHub of this contract.\\n */\\n    function getHubAddr() external view returns (address);\\n\\n    /**\\n     * Can be used to determine if the contract can pay for incoming calls before making any.\\n     * @return the paymaster's deposit in the RelayHub.\\n     */\\n    function getRelayHubDeposit() external view returns (uint256);\\n\\n    /**\\n     * Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call.\\n     *\\n     * MUST be protected with relayHubOnly() in case it modifies state.\\n     *\\n     * The Paymaster rejects by the following \\\"revert\\\" operations\\n     *  - preRelayedCall() method reverts\\n     *  - the forwarder reverts because of nonce or signature error\\n     *  - the paymaster returned \\\"rejectOnRecipientRevert\\\", and the recipient contract reverted.\\n     * In any of the above cases, all paymaster calls (and recipient call) are reverted.\\n     * In any other case, the paymaster agrees to pay for the gas cost of the transaction (note\\n     *  that this includes also postRelayedCall revert)\\n     *\\n     * The rejectOnRecipientRevert flag means the Paymaster \\\"delegate\\\" the rejection to the recipient\\n     *  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,\\n     *  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,\\n     *  otherwise the TX is paid by the Paymaster.\\n     *\\n     *  @param relayRequest - the full relay request structure\\n     *  @param signature - user's EIP712-compatible signature of the {@link relayRequest}.\\n     *              Note that in most cases the paymaster shouldn't try use it at all. It is always checked\\n     *              by the forwarder immediately after preRelayedCall returns.\\n     *  @param approvalData - extra dapp-specific data (e.g. signature from trusted party)\\n     *  @param maxPossibleGas - based on values returned from {@link getGasAndDataLimits},\\n     *         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.\\n     *         In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"\\n     *  return:\\n     *      a context to be passed to postRelayedCall\\n     *      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.\\n     *          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.\\n     *          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).\\n     */\\n    function preRelayedCall(\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint256 maxPossibleGas\\n    )\\n    external\\n    returns (bytes memory context, bool rejectOnRecipientRevert);\\n\\n    /**\\n     * This method is called after the actual relayed function call.\\n     * It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call.\\n     *\\n     * MUST be protected with relayHubOnly() in case it modifies state.\\n     *\\n     * @param context - the call context, as returned by the preRelayedCall\\n     * @param success - true if the relayed call succeeded, false if it reverted\\n     * @param gasUseWithoutPost - the actual amount of gas used by the entire transaction, EXCEPT\\n     *        the gas used by the postRelayedCall itself.\\n     * @param relayData - the relay params of the request. can be used by relayHub.calculateCharge()\\n     *\\n     * Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster\\n     * is still committed to pay the relay for the entire transaction.\\n     */\\n    function postRelayedCall(\\n        bytes calldata context,\\n        bool success,\\n        uint256 gasUseWithoutPost,\\n        GsnTypes.RelayData calldata relayData\\n    ) external;\\n\\n    function versionPaymaster() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x4cf49c343b72cd8dac257e8b49009347dc2465d5d191c6d1f9455e74f331f5d9\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IRelayHub.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"./IStakeManager.sol\\\";\\n\\ninterface IRelayHub {\\n    struct RelayHubConfig {\\n        // maximum number of worker accounts allowed per manager\\n        uint256 maxWorkerCount;\\n        // Gas set aside for all relayCall() instructions to prevent unexpected out-of-gas exceptions\\n        uint256 gasReserve;\\n        // Gas overhead to calculate gasUseWithoutPost\\n        uint256 postOverhead;\\n        // Gas cost of all relayCall() instructions after actual 'calculateCharge()'\\n        // Assume that relay has non-zero balance (costs 15'000 more otherwise).\\n        uint256 gasOverhead;\\n        // Maximum funds that can be deposited at once. Prevents user error by disallowing large deposits.\\n        uint256 maximumRecipientDeposit;\\n        // Minimum unstake delay blocks of a relay manager's stake on the StakeManager\\n        uint256 minimumUnstakeDelay;\\n        // Minimum stake a relay can have. An attack on the network will never cost less than half this value.\\n        uint256 minimumStake;\\n        // relayCall()'s msg.data upper bound gas cost per byte\\n        uint256 dataGasCostPerByte;\\n        // relayCalls() minimal gas overhead when calculating cost of putting tx on chain.\\n        uint256 externalCallDataCostOverhead;\\n    }\\n\\n    event RelayHubConfigured(RelayHubConfig config);\\n\\n    /// Emitted when a relay server registers or updates its details\\n    /// Looking at these events lets a client discover relay servers\\n    event RelayServerRegistered(\\n        address indexed relayManager,\\n        uint256 baseRelayFee,\\n        uint256 pctRelayFee,\\n        string relayUrl\\n    );\\n\\n    /// Emitted when relays are added by a relayManager\\n    event RelayWorkersAdded(\\n        address indexed relayManager,\\n        address[] newRelayWorkers,\\n        uint256 workersCount\\n    );\\n\\n    /// Emitted when an account withdraws funds from RelayHub.\\n    event Withdrawn(\\n        address indexed account,\\n        address indexed dest,\\n        uint256 amount\\n    );\\n\\n    /// Emitted when depositFor is called, including the amount and account that was funded.\\n    event Deposited(\\n        address indexed paymaster,\\n        address indexed from,\\n        uint256 amount\\n    );\\n\\n    /// Emitted when an attempt to relay a call fails and Paymaster does not accept the transaction.\\n    /// The actual relayed call was not executed, and the recipient not charged.\\n    /// @param reason contains a revert reason returned from preRelayedCall or forwarder.\\n    event TransactionRejectedByPaymaster(\\n        address indexed relayManager,\\n        address indexed paymaster,\\n        address indexed from,\\n        address to,\\n        address relayWorker,\\n        bytes4 selector,\\n        uint256 innerGasUsed,\\n        bytes reason\\n    );\\n\\n    /// Emitted when a transaction is relayed. Note that the actual encoded function might be reverted: this will be\\n    /// indicated in the status field.\\n    /// Useful when monitoring a relay's operation and relayed calls to a contract.\\n    /// Charge is the ether value deducted from the recipient's balance, paid to the relay's manager.\\n    event TransactionRelayed(\\n        address indexed relayManager,\\n        address indexed relayWorker,\\n        address indexed from,\\n        address to,\\n        address paymaster,\\n        bytes4 selector,\\n        RelayCallStatus status,\\n        uint256 charge\\n    );\\n\\n    event TransactionResult(\\n        RelayCallStatus status,\\n        bytes returnValue\\n    );\\n\\n    event HubDeprecated(uint256 fromBlock);\\n\\n    /// Reason error codes for the TransactionRelayed event\\n    /// @param OK - the transaction was successfully relayed and execution successful - never included in the event\\n    /// @param RelayedCallFailed - the transaction was relayed, but the relayed call failed\\n    /// @param RejectedByPreRelayed - the transaction was not relayed due to preRelatedCall reverting\\n    /// @param RejectedByForwarder - the transaction was not relayed due to forwarder check (signature,nonce)\\n    /// @param PostRelayedFailed - the transaction was relayed and reverted due to postRelatedCall reverting\\n    /// @param PaymasterBalanceChanged - the transaction was relayed and reverted due to the paymaster balance change\\n    enum RelayCallStatus {\\n        OK,\\n        RelayedCallFailed,\\n        RejectedByPreRelayed,\\n        RejectedByForwarder,\\n        RejectedByRecipientRevert,\\n        PostRelayedFailed,\\n        PaymasterBalanceChanged\\n    }\\n\\n    /// Add new worker addresses controlled by sender who must be a staked Relay Manager address.\\n    /// Emits a RelayWorkersAdded event.\\n    /// This function can be called multiple times, emitting new events\\n    function addRelayWorkers(address[] calldata newRelayWorkers) external;\\n\\n    function registerRelayServer(uint256 baseRelayFee, uint256 pctRelayFee, string calldata url) external;\\n\\n    // Balance management\\n\\n    /// Deposits ether for a contract, so that it can receive (and pay for) relayed transactions. Unused balance can only\\n    /// be withdrawn by the contract itself, by calling withdraw.\\n    /// Emits a Deposited event.\\n    function depositFor(address target) external payable;\\n\\n    /// Withdraws from an account's balance, sending it back to it. Relay managers call this to retrieve their revenue, and\\n    /// contracts can also use it to reduce their funding.\\n    /// Emits a Withdrawn event.\\n    function withdraw(uint256 amount, address payable dest) external;\\n\\n    // Relaying\\n\\n\\n    /// Relays a transaction. For this to succeed, multiple conditions must be met:\\n    ///  - Paymaster's \\\"preRelayCall\\\" method must succeed and not revert\\n    ///  - the sender must be a registered Relay Worker that the user signed\\n    ///  - the transaction's gas price must be equal or larger than the one that was signed by the sender\\n    ///  - the transaction must have enough gas to run all internal transactions if they use all gas available to them\\n    ///  - the Paymaster must have enough balance to pay the Relay Worker for the scenario when all gas is spent\\n    ///\\n    /// If all conditions are met, the call will be relayed and the recipient charged.\\n    ///\\n    /// Arguments:\\n    /// @param maxAcceptanceBudget - max valid value for paymaster.getGasLimits().acceptanceBudget\\n    /// @param relayRequest - all details of the requested relayed call\\n    /// @param signature - client's EIP-712 signature over the relayRequest struct\\n    /// @param approvalData: dapp-specific data forwarded to preRelayedCall.\\n    ///        This value is *not* verified by the Hub. For example, it can be used to pass a signature to the Paymaster\\n    /// @param externalGasLimit - the value passed as gasLimit to the transaction.\\n    ///\\n    /// Emits a TransactionRelayed event.\\n    function relayCall(\\n        uint maxAcceptanceBudget,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint externalGasLimit\\n    )\\n    external\\n    returns (bool paymasterAccepted, bytes memory returnValue);\\n\\n    function penalize(address relayWorker, address payable beneficiary) external;\\n\\n    function setConfiguration(RelayHubConfig memory _config) external;\\n\\n    // Deprecate hub (reverting relayCall()) from block number 'fromBlock'\\n    // Can only be called by owner\\n    function deprecateHub(uint256 fromBlock) external;\\n\\n    /// The fee is expressed as a base fee in wei plus percentage on actual charge.\\n    /// E.g. a value of 40 stands for a 40% fee, so the recipient will be\\n    /// charged for 1.4 times the spent amount.\\n    function calculateCharge(uint256 gasUsed, GsnTypes.RelayData calldata relayData) external view returns (uint256);\\n\\n    /* getters */\\n\\n    /// Returns the whole hub configuration\\n    function getConfiguration() external view returns (RelayHubConfig memory config);\\n\\n    function calldataGasCost(uint256 length) external view returns (uint256);\\n\\n    function workerToManager(address worker) external view returns(address);\\n\\n    function workerCount(address manager) external view returns(uint256);\\n\\n    /// Returns an account's deposits. It can be either a deposit of a paymaster, or a revenue of a relay manager.\\n    function balanceOf(address target) external view returns (uint256);\\n\\n    function stakeManager() external view returns (IStakeManager);\\n\\n    function penalizer() external view returns (address);\\n\\n    /// Uses StakeManager info to decide if the Relay Manager can be considered staked\\n    /// @return true if stake size and delay satisfy all requirements\\n    function isRelayManagerStaked(address relayManager) external view returns(bool);\\n\\n    // Checks hubs' deprecation status\\n    function isDeprecated() external view returns (bool);\\n\\n    // Returns the block number from which the hub no longer allows relaying calls.\\n    function deprecationBlock() external view returns (uint256);\\n\\n    /// @return a SemVer-compliant version of the hub contract\\n    function versionHub() external view returns (string memory);\\n}\\n\\n\",\"keccak256\":\"0x3497133a7147174c498d2feeb2569b973396a8c2c220b5876fd9eb3b59841c85\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\n/**\\n * a contract must implement this interface in order to support relayed transaction.\\n * It is better to inherit the BaseRelayRecipient as its implementation.\\n */\\nabstract contract IRelayRecipient {\\n\\n    /**\\n     * return if the forwarder is trusted to forward relayed transactions to us.\\n     * the forwarder is required to verify the sender's signature, and verify\\n     * the call is not a replay.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * return the sender of this call.\\n     * if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\\n     * of the msg.data.\\n     * otherwise, return `msg.sender`\\n     * should be used in the contract anywhere instead of msg.sender\\n     */\\n    function _msgSender() internal virtual view returns (address payable);\\n\\n    /**\\n     * return the msg.data of this call.\\n     * if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\\n     * of the msg.data - so this method will strip those 20 bytes off.\\n     * otherwise (if the call was made directly and not through the forwarder), return `msg.data`\\n     * should be used in the contract instead of msg.data, where this difference matters.\\n     */\\n    function _msgData() internal virtual view returns (bytes memory);\\n\\n    function versionRecipient() external virtual view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6243d3a925653ed0bde57e9fae7fb87f12c58a2376b27ae23b53502322532e00\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\ninterface IStakeManager {\\n\\n    /// Emitted when a stake or unstakeDelay are initialized or increased\\n    event StakeAdded(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 stake,\\n        uint256 unstakeDelay\\n    );\\n\\n    /// Emitted once a stake is scheduled for withdrawal\\n    event StakeUnlocked(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 withdrawBlock\\n    );\\n\\n    /// Emitted when owner withdraws relayManager funds\\n    event StakeWithdrawn(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 amount\\n    );\\n\\n    /// Emitted when an authorized Relay Hub penalizes a relayManager\\n    event StakePenalized(\\n        address indexed relayManager,\\n        address indexed beneficiary,\\n        uint256 reward\\n    );\\n\\n    event HubAuthorized(\\n        address indexed relayManager,\\n        address indexed relayHub\\n    );\\n\\n    event HubUnauthorized(\\n        address indexed relayManager,\\n        address indexed relayHub,\\n        uint256 removalBlock\\n    );\\n\\n    event OwnerSet(\\n        address indexed relayManager,\\n        address indexed owner\\n    );\\n\\n    /// @param stake - amount of ether staked for this relay\\n    /// @param unstakeDelay - number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'\\n    /// @param withdrawBlock - first block number 'withdraw' will be callable, or zero if the unlock has not been called\\n    /// @param owner - address that receives revenue and manages relayManager's stake\\n    struct StakeInfo {\\n        uint256 stake;\\n        uint256 unstakeDelay;\\n        uint256 withdrawBlock;\\n        address payable owner;\\n    }\\n\\n    struct RelayHubInfo {\\n        uint256 removalBlock;\\n    }\\n\\n    /// Set the owner of a Relay Manager. Called only by the RelayManager itself.\\n    /// Note that owners cannot transfer ownership - if the entry already exists, reverts.\\n    /// @param owner - owner of the relay (as configured off-chain)\\n    function setRelayManagerOwner(address payable owner) external;\\n\\n    /// Only the owner can call this function. If the entry does not exist, reverts.\\n    /// @param relayManager - address that represents a stake entry and controls relay registrations on relay hubs\\n    /// @param unstakeDelay - number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'\\n    function stakeForRelayManager(address relayManager, uint256 unstakeDelay) external payable;\\n\\n    function unlockStake(address relayManager) external;\\n\\n    function withdrawStake(address relayManager) external;\\n\\n    function authorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    function authorizeHubByManager(address relayHub) external;\\n\\n    function unauthorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    function unauthorizeHubByManager(address relayHub) external;\\n\\n    function isRelayManagerStaked(address relayManager, address relayHub, uint256 minAmount, uint256 minUnstakeDelay)\\n    external\\n    view\\n    returns (bool);\\n\\n    /// Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns half of stake on the way.\\n    /// @param relayManager - entry to penalize\\n    /// @param beneficiary - address that receives half of the penalty amount\\n    /// @param amount - amount to withdraw from stake\\n    function penalizeRelayManager(address relayManager, address payable beneficiary, uint256 amount) external;\\n\\n    function getStakeInfo(address relayManager) external view returns (StakeInfo memory stakeInfo);\\n\\n    function maxUnstakeDelay() external view returns (uint256);\\n\\n    function versionSM() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x86fcc2f265ba3c2f987fe47823121b4df3ddc86b834d89a67aca585d0721747f\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnEip712Library.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"../interfaces/IRelayRecipient.sol\\\";\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\nimport \\\"./GsnUtils.sol\\\";\\n\\n/**\\n * Bridge Library to map GSN RelayRequest into a call of a Forwarder\\n */\\nlibrary GsnEip712Library {\\n    // maximum length of return value/revert reason for 'execute' method. Will truncate result if exceeded.\\n    uint256 private constant MAX_RETURN_SIZE = 1024;\\n\\n    //copied from Forwarder (can't reference string constants even from another library)\\n    string public constant GENERIC_PARAMS = \\\"address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntil\\\";\\n\\n    bytes public constant RELAYDATA_TYPE = \\\"RelayData(uint256 gasPrice,uint256 pctRelayFee,uint256 baseRelayFee,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)\\\";\\n\\n    string public constant RELAY_REQUEST_NAME = \\\"RelayRequest\\\";\\n    string public constant RELAY_REQUEST_SUFFIX = string(abi.encodePacked(\\\"RelayData relayData)\\\", RELAYDATA_TYPE));\\n\\n    bytes public constant RELAY_REQUEST_TYPE = abi.encodePacked(\\n        RELAY_REQUEST_NAME,\\\"(\\\",GENERIC_PARAMS,\\\",\\\", RELAY_REQUEST_SUFFIX);\\n\\n    bytes32 public constant RELAYDATA_TYPEHASH = keccak256(RELAYDATA_TYPE);\\n    bytes32 public constant RELAY_REQUEST_TYPEHASH = keccak256(RELAY_REQUEST_TYPE);\\n\\n\\n    struct EIP712Domain {\\n        string name;\\n        string version;\\n        uint256 chainId;\\n        address verifyingContract;\\n    }\\n\\n    bytes32 public constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n    );\\n\\n    function splitRequest(\\n        GsnTypes.RelayRequest calldata req\\n    )\\n    internal\\n    pure\\n    returns (\\n        bytes memory suffixData\\n    ) {\\n        suffixData = abi.encode(\\n            hashRelayData(req.relayData));\\n    }\\n\\n    //verify that the recipient trusts the given forwarder\\n    // MUST be called by paymaster\\n    function verifyForwarderTrusted(GsnTypes.RelayRequest calldata relayRequest) internal view {\\n        (bool success, bytes memory ret) = relayRequest.request.to.staticcall(\\n            abi.encodeWithSelector(\\n                IRelayRecipient.isTrustedForwarder.selector, relayRequest.relayData.forwarder\\n            )\\n        );\\n        require(success, \\\"isTrustedForwarder: reverted\\\");\\n        require(ret.length == 32, \\\"isTrustedForwarder: bad response\\\");\\n        require(abi.decode(ret, (bool)), \\\"invalid forwarder for recipient\\\");\\n    }\\n\\n    function verifySignature(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal view {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(relayRequest.relayData.forwarder);\\n        IForwarder forwarder = IForwarder(payable(relayRequest.relayData.forwarder));\\n        forwarder.verify(relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature);\\n    }\\n\\n    function verify(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal view {\\n        verifyForwarderTrusted(relayRequest);\\n        verifySignature(relayRequest, signature);\\n    }\\n\\n    function execute(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal returns (bool forwarderSuccess, bool callSuccess, bytes memory ret) {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(relayRequest.relayData.forwarder);\\n        /* solhint-disable-next-line avoid-low-level-calls */\\n        (forwarderSuccess, ret) = relayRequest.relayData.forwarder.call(\\n            abi.encodeWithSelector(IForwarder.execute.selector,\\n            relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature\\n        ));\\n        if ( forwarderSuccess ) {\\n\\n          //decode return value of execute:\\n          (callSuccess, ret) = abi.decode(ret, (bool, bytes));\\n        }\\n        truncateInPlace(ret);\\n    }\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data) internal pure {\\n        MinLibBytes.truncateInPlace(data, MAX_RETURN_SIZE);\\n    }\\n\\n    function domainSeparator(address forwarder) internal pure returns (bytes32) {\\n        return hashDomain(EIP712Domain({\\n            name : \\\"GSN Relayed Transaction\\\",\\n            version : \\\"2\\\",\\n            chainId : getChainID(),\\n            verifyingContract : forwarder\\n            }));\\n    }\\n\\n    function getChainID() internal pure returns (uint256 id) {\\n        /* solhint-disable no-inline-assembly */\\n        assembly {\\n            id := chainid()\\n        }\\n    }\\n\\n    function hashDomain(EIP712Domain memory req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(bytes(req.name)),\\n                keccak256(bytes(req.version)),\\n                req.chainId,\\n                req.verifyingContract));\\n    }\\n\\n    function hashRelayData(GsnTypes.RelayData calldata req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                RELAYDATA_TYPEHASH,\\n                req.gasPrice,\\n                req.pctRelayFee,\\n                req.baseRelayFee,\\n                req.relayWorker,\\n                req.paymaster,\\n                req.forwarder,\\n                keccak256(req.paymasterData),\\n                req.clientId\\n            ));\\n    }\\n}\\n\",\"keccak256\":\"0xeabda17c0116022fba48a5be922c093fd721fc21e400a8158a2d2c9ae1c0ac4f\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice gasPrice, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 gasPrice;\\n        uint256 pctRelayFee;\\n        uint256 baseRelayFee;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x813b12755ca7e69d3f269b5ab801d36d208274c26ea2764a416c3033e61bc130\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnUtils.sol\":{\"content\":\"/* solhint-disable no-inline-assembly */\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\nimport \\\"../utils/MinLibBytes.sol\\\";\\n\\nlibrary GsnUtils {\\n\\n    /**\\n     * extract method sig from encoded function call\\n     */\\n    function getMethodSig(bytes memory msgData) internal pure returns (bytes4) {\\n        return MinLibBytes.readBytes4(msgData, 0);\\n    }\\n\\n    /**\\n     * extract parameter from encoded-function block.\\n     * see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\\n     * the return value should be casted to the right type (uintXXX/bytesXXX/address/bool/enum)\\n     */\\n    function getParam(bytes memory msgData, uint index) internal pure returns (uint) {\\n        return MinLibBytes.readUint256(msgData, 4 + index * 32);\\n    }\\n\\n    //re-throw revert with the same revert data.\\n    function revertWithData(bytes memory data) internal pure {\\n        assembly {\\n            revert(add(data,32), mload(data))\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0xeb0c5992c7c2648e414a14605a72e773e09c554036e9c9cd9aca34e292b195d7\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// minimal bytes manipulation required by GSN\\n// a minimal subset from 0x/LibBytes\\n/* solhint-disable no-inline-assembly */\\npragma solidity >=0.7.6;\\n\\nlibrary MinLibBytes {\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\\n        if (data.length > maxlen) {\\n            assembly { mstore(data, maxlen) }\\n        }\\n    }\\n\\n    /// @dev Reads an address from a position in a byte array.\\n    /// @param b Byte array containing an address.\\n    /// @param index Index in byte array of address.\\n    /// @return result address from byte array.\\n    function readAddress(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (address result)\\n    {\\n        require (b.length >= index + 20, \\\"readAddress: data too short\\\");\\n\\n        // Add offset to index:\\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\\n        index += 20;\\n\\n        // Read address from array memory\\n        assembly {\\n            // 1. Add index to address of bytes array\\n            // 2. Load 32-byte word from memory\\n            // 3. Apply 20-byte mask to obtain address\\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n        return result;\\n    }\\n\\n    function readBytes32(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes32 result)\\n    {\\n        require(b.length >= index + 32, \\\"readBytes32: data too short\\\" );\\n\\n        // Read the bytes32 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n        }\\n        return result;\\n    }\\n\\n    /// @dev Reads a uint256 value from a position in a byte array.\\n    /// @param b Byte array containing a uint256 value.\\n    /// @param index Index in byte array of uint256 value.\\n    /// @return result uint256 value from byte array.\\n    function readUint256(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        result = uint256(readBytes32(b, index));\\n        return result;\\n    }\\n\\n    function readBytes4(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes4 result)\\n    {\\n        require(b.length >= index + 4, \\\"readBytes4: data too short\\\");\\n\\n        // Read the bytes4 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n            // Solidity does not require us to clean the trailing bytes.\\n            // We do it anyway\\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x73c837126ff5369c63b7a71828b6d5c9e5bc8a6477f8d4fc97f8e28142380cd9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1367,
                "contract": "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 15,
                "contract": "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
                "label": "relayHub",
                "offset": 0,
                "slot": "1",
                "type": "t_contract(IRelayHub)611"
              },
              {
                "astId": 18,
                "contract": "@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster",
                "label": "trustedForwarder",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(IForwarder)273"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_contract(IForwarder)273": {
                "encoding": "inplace",
                "label": "contract IForwarder",
                "numberOfBytes": "20"
              },
              "t_contract(IRelayHub)611": {
                "encoding": "inplace",
                "label": "contract IRelayHub",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "getGasAndDataLimits()": {
                "notice": "Return the Gas Limits and msg.data max size constants used by the Paymaster."
              },
              "getHubAddr()": {
                "notice": "return the relayHub of this contract."
              },
              "getRelayHubDeposit()": {
                "notice": "check current deposit on relay hub."
              },
              "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
                "notice": "This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state."
              },
              "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
                "notice": "Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call. MUST be protected with relayHubOnly() in case it modifies state. The Paymaster rejects by the following \"revert\" operations  - preRelayedCall() method reverts  - the forwarder reverts because of nonce or signature error  - the paymaster returned \"rejectOnRecipientRevert\", and the recipient contract reverted. In any of the above cases, all paymaster calls (and recipient call) are reverted. In any other case, the paymaster agrees to pay for the gas cost of the transaction (note  that this includes also postRelayedCall revert) The rejectOnRecipientRevert flag means the Paymaster \"delegate\" the rejection to the recipient  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,  otherwise the TX is paid by the Paymaster."
              },
              "withdrawRelayHubDepositTo(uint256,address)": {
                "notice": "withdraw deposit from relayHub"
              }
            },
            "notice": "Abstract base class to be inherited by a concrete Paymaster A subclass must implement:  - preRelayedCall  - postRelayedCall",
            "version": 1
          }
        }
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol": {
        "IForwarder": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "domainSeparator",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "domainValue",
                  "type": "bytes"
                }
              ],
              "name": "DomainRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "typeHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "typeStr",
                  "type": "string"
                }
              ],
              "name": "RequestTypeRegistered",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "validUntil",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IForwarder.ForwardRequest",
                  "name": "forwardRequest",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes32",
                  "name": "domainSeparator",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "requestTypeHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "suffixData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "ret",
                  "type": "bytes"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                }
              ],
              "name": "getNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "version",
                  "type": "string"
                }
              ],
              "name": "registerDomainSeparator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "typeName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "typeSuffix",
                  "type": "string"
                }
              ],
              "name": "registerRequestType",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "validUntil",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IForwarder.ForwardRequest",
                  "name": "forwardRequest",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes32",
                  "name": "domainSeparator",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "requestTypeHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "suffixData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "verify",
              "outputs": [],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)": {
                "params": {
                  "domainSeparator": "- domain used when signing this request",
                  "forwardRequest": "- all transaction parameters",
                  "requestTypeHash": "- request type used when signing this request.",
                  "signature": "- signature to validate. the transaction is verified, and then executed. the success and ret of \"call\" are returned. This method would revert only verification errors. target errors are reported using the returned \"success\" and ret string",
                  "suffixData": "- the extension data used when signing this request."
                }
              },
              "registerDomainSeparator(string,string)": {
                "params": {
                  "name": "the domain's display name",
                  "version": "the domain/protocol version"
                }
              },
              "registerRequestType(string,string)": {
                "params": {
                  "typeName": "- the name of the request type.",
                  "typeSuffix": "- any extra data after the generic params.  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)"
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)": "e024dc7f",
              "getNonce(address)": "2d0335ab",
              "registerDomainSeparator(string,string)": "9c7b4592",
              "registerRequestType(string,string)": "d9210be5",
              "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)": "ad9f99c7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"domainValue\",\"type\":\"bytes\"}],\"name\":\"DomainRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"typeStr\",\"type\":\"string\"}],\"name\":\"RequestTypeRegistered\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"forwardRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"requestTypeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"suffixData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"registerDomainSeparator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSuffix\",\"type\":\"string\"}],\"name\":\"registerRequestType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"forwardRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"requestTypeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"suffixData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)\":{\"params\":{\"domainSeparator\":\"- domain used when signing this request\",\"forwardRequest\":\"- all transaction parameters\",\"requestTypeHash\":\"- request type used when signing this request.\",\"signature\":\"- signature to validate. the transaction is verified, and then executed. the success and ret of \\\"call\\\" are returned. This method would revert only verification errors. target errors are reported using the returned \\\"success\\\" and ret string\",\"suffixData\":\"- the extension data used when signing this request.\"}},\"registerDomainSeparator(string,string)\":{\"params\":{\"name\":\"the domain's display name\",\"version\":\"the domain/protocol version\"}},\"registerRequestType(string,string)\":{\"params\":{\"typeName\":\"- the name of the request type.\",\"typeSuffix\":\"- any extra data after the generic params.  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)\":{\"notice\":\"execute a transaction\"},\"registerDomainSeparator(string,string)\":{\"notice\":\"Register a new domain separator. The domain separator must have the following fields: name,version,chainId, verifyingContract. the chainId is the current network's chainId, and the verifyingContract is this forwarder. This method is given the domain name and version to create and register the domain separator value.\"},\"registerRequestType(string,string)\":{\"notice\":\"Register a new Request typehash.\"},\"verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)\":{\"notice\":\"verify the transaction would execute. validate the signature and the nonce of the request. revert if either signature or nonce are incorrect. also revert if domainSeparator or requestTypeHash are not registered.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":\"IForwarder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\ninterface IForwarder {\\n\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntil;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * verify the transaction would execute.\\n     * validate the signature and the nonce of the request.\\n     * revert if either signature or nonce are incorrect.\\n     * also revert if domainSeparator or requestTypeHash are not registered.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * execute a transaction\\n     * @param forwardRequest - all transaction parameters\\n     * @param domainSeparator - domain used when signing this request\\n     * @param requestTypeHash - request type used when signing this request.\\n     * @param suffixData - the extension data used when signing this request.\\n     * @param signature - signature to validate.\\n     *\\n     * the transaction is verified, and then executed.\\n     * the success and ret of \\\"call\\\" are returned.\\n     * This method would revert only verification errors. target errors\\n     * are reported using the returned \\\"success\\\" and ret string\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * Register a new Request typehash.\\n     * @param typeName - the name of the request type.\\n     * @param typeSuffix - any extra data after the generic params.\\n     *  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * Register a new domain separator.\\n     * The domain separator must have the following fields: name,version,chainId, verifyingContract.\\n     * the chainId is the current network's chainId, and the verifyingContract is this forwarder.\\n     * This method is given the domain name and version to create and register the domain separator value.\\n     * @param name the domain's display name\\n     * @param version the domain/protocol version\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)": {
                "notice": "execute a transaction"
              },
              "registerDomainSeparator(string,string)": {
                "notice": "Register a new domain separator. The domain separator must have the following fields: name,version,chainId, verifyingContract. the chainId is the current network's chainId, and the verifyingContract is this forwarder. This method is given the domain name and version to create and register the domain separator value."
              },
              "registerRequestType(string,string)": {
                "notice": "Register a new Request typehash."
              },
              "verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)": {
                "notice": "verify the transaction would execute. validate the signature and the nonce of the request. revert if either signature or nonce are incorrect. also revert if domainSeparator or requestTypeHash are not registered."
              }
            },
            "version": 1
          }
        }
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol": {
        "IPaymaster": {
          "abi": [
            {
              "inputs": [],
              "name": "getGasAndDataLimits",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "acceptanceBudget",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "preRelayedCallGasLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "postRelayedCallGasLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "calldataSizeLimit",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IPaymaster.GasAndDataLimits",
                  "name": "limits",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHubAddr",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRelayHubDeposit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "context",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "gasUseWithoutPost",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "gasPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pctRelayFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseRelayFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "relayWorker",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "paymaster",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "forwarder",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "paymasterData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "clientId",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayData",
                  "name": "relayData",
                  "type": "tuple"
                }
              ],
              "name": "postRelayedCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gas",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "validUntil",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IForwarder.ForwardRequest",
                      "name": "request",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "gasPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "pctRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "relayWorker",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "paymaster",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "forwarder",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "paymasterData",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "clientId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct GsnTypes.RelayData",
                      "name": "relayData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayRequest",
                  "name": "relayRequest",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "approvalData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPossibleGas",
                  "type": "uint256"
                }
              ],
              "name": "preRelayedCall",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "context",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "rejectOnRecipientRevert",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "trustedForwarder",
              "outputs": [
                {
                  "internalType": "contract IForwarder",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "versionPaymaster",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "getRelayHubDeposit()": {
                "returns": {
                  "_0": "the paymaster's deposit in the RelayHub."
                }
              },
              "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
                "params": {
                  "context": "- the call context, as returned by the preRelayedCall",
                  "gasUseWithoutPost": "- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.",
                  "relayData": "- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.",
                  "success": "- true if the relayed call succeeded, false if it reverted"
                }
              },
              "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
                "params": {
                  "approvalData": "- extra dapp-specific data (e.g. signature from trusted party)",
                  "maxPossibleGas": "- based on values returned from {@link getGasAndDataLimits},         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.         In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"  return:      a context to be passed to postRelayedCall      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).",
                  "relayRequest": "- the full relay request structure",
                  "signature": "- user's EIP712-compatible signature of the {@link relayRequest}.              Note that in most cases the paymaster shouldn't try use it at all. It is always checked              by the forwarder immediately after preRelayedCall returns."
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "getGasAndDataLimits()": "b039a88f",
              "getHubAddr()": "74e861d6",
              "getRelayHubDeposit()": "2afe31c1",
              "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": "76fa01c3",
              "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": "00be5dd4",
              "trustedForwarder()": "7da0a877",
              "versionPaymaster()": "921276ea"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getGasAndDataLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSizeLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasAndDataLimits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHubDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"rejectOnRecipientRevert\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"contract IForwarder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPaymaster\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRelayHubDeposit()\":{\"returns\":{\"_0\":\"the paymaster's deposit in the RelayHub.\"}},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"params\":{\"context\":\"- the call context, as returned by the preRelayedCall\",\"gasUseWithoutPost\":\"- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.\",\"relayData\":\"- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.\",\"success\":\"- true if the relayed call succeeded, false if it reverted\"}},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"params\":{\"approvalData\":\"- extra dapp-specific data (e.g. signature from trusted party)\",\"maxPossibleGas\":\"- based on values returned from {@link getGasAndDataLimits},         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.         In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"  return:      a context to be passed to postRelayedCall      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).\",\"relayRequest\":\"- the full relay request structure\",\"signature\":\"- user's EIP712-compatible signature of the {@link relayRequest}.              Note that in most cases the paymaster shouldn't try use it at all. It is always checked              by the forwarder immediately after preRelayedCall returns.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGasAndDataLimits()\":{\"notice\":\"Return the Gas Limits and msg.data max size constants used by the Paymaster.\"},\"getHubAddr()\":{\"notice\":\"return the relayHub of this contract.\"},\"getRelayHubDeposit()\":{\"notice\":\"Can be used to determine if the contract can pay for incoming calls before making any.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state.\"},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call. MUST be protected with relayHubOnly() in case it modifies state. The Paymaster rejects by the following \\\"revert\\\" operations  - preRelayedCall() method reverts  - the forwarder reverts because of nonce or signature error  - the paymaster returned \\\"rejectOnRecipientRevert\\\", and the recipient contract reverted. In any of the above cases, all paymaster calls (and recipient call) are reverted. In any other case, the paymaster agrees to pay for the gas cost of the transaction (note  that this includes also postRelayedCall revert) The rejectOnRecipientRevert flag means the Paymaster \\\"delegate\\\" the rejection to the recipient  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,  otherwise the TX is paid by the Paymaster.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\ninterface IForwarder {\\n\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntil;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * verify the transaction would execute.\\n     * validate the signature and the nonce of the request.\\n     * revert if either signature or nonce are incorrect.\\n     * also revert if domainSeparator or requestTypeHash are not registered.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * execute a transaction\\n     * @param forwardRequest - all transaction parameters\\n     * @param domainSeparator - domain used when signing this request\\n     * @param requestTypeHash - request type used when signing this request.\\n     * @param suffixData - the extension data used when signing this request.\\n     * @param signature - signature to validate.\\n     *\\n     * the transaction is verified, and then executed.\\n     * the success and ret of \\\"call\\\" are returned.\\n     * This method would revert only verification errors. target errors\\n     * are reported using the returned \\\"success\\\" and ret string\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * Register a new Request typehash.\\n     * @param typeName - the name of the request type.\\n     * @param typeSuffix - any extra data after the generic params.\\n     *  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * Register a new domain separator.\\n     * The domain separator must have the following fields: name,version,chainId, verifyingContract.\\n     * the chainId is the current network's chainId, and the verifyingContract is this forwarder.\\n     * This method is given the domain name and version to create and register the domain separator value.\\n     * @param name the domain's display name\\n     * @param version the domain/protocol version\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\n\\ninterface IPaymaster {\\n\\n    /**\\n     * @param acceptanceBudget -\\n     *      Paymaster expected gas budget to accept (or reject) a request\\n     *      This a gas required by any calculations that might need to reject the\\n     *      transaction, by preRelayedCall, forwarder and recipient.\\n     *      See value in BasePaymaster.PAYMASTER_ACCEPTANCE_BUDGET\\n     *      Transaction that gets rejected above that gas usage is on the paymaster's expense.\\n     *      As long this value is above preRelayedCallGasLimit (see defaults in BasePaymaster), the\\n     *      Paymaster is guaranteed it will never pay for rejected transactions.\\n     *      If this value is below preRelayedCallGasLimt, it might might make Paymaster open to a \\\"griefing\\\" attack.\\n     *\\n     *      Specifying value too high might make the call rejected by some relayers.\\n     *\\n     *      From a Relay's point of view, this is the highest gas value a paymaster might \\\"grief\\\" the relay,\\n     *      since the paymaster will pay anything above that (regardless if the tx reverts)\\n     *\\n     * @param preRelayedCallGasLimit - the max gas usage of preRelayedCall. any revert (including OOG)\\n     *      of preRelayedCall is a reject by the paymaster.\\n     *      as long as acceptanceBudget is above preRelayedCallGasLimit, any such revert (including OOG)\\n     *      is not payed by the paymaster.\\n     * @param postRelayedCallGasLimit - the max gas usage of postRelayedCall.\\n     *      note that an OOG will revert the transaction, but the paymaster already committed to pay,\\n     *      so the relay will get compensated, at the expense of the paymaster\\n     */\\n    struct GasAndDataLimits {\\n        uint256 acceptanceBudget;\\n        uint256 preRelayedCallGasLimit;\\n        uint256 postRelayedCallGasLimit;\\n        uint256 calldataSizeLimit;\\n    }\\n\\n    /**\\n     * Return the Gas Limits and msg.data max size constants used by the Paymaster.\\n     */\\n    function getGasAndDataLimits()\\n    external\\n    view\\n    returns (\\n        GasAndDataLimits memory limits\\n    );\\n\\n    function trustedForwarder() external view returns (IForwarder);\\n\\n/**\\n * return the relayHub of this contract.\\n */\\n    function getHubAddr() external view returns (address);\\n\\n    /**\\n     * Can be used to determine if the contract can pay for incoming calls before making any.\\n     * @return the paymaster's deposit in the RelayHub.\\n     */\\n    function getRelayHubDeposit() external view returns (uint256);\\n\\n    /**\\n     * Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call.\\n     *\\n     * MUST be protected with relayHubOnly() in case it modifies state.\\n     *\\n     * The Paymaster rejects by the following \\\"revert\\\" operations\\n     *  - preRelayedCall() method reverts\\n     *  - the forwarder reverts because of nonce or signature error\\n     *  - the paymaster returned \\\"rejectOnRecipientRevert\\\", and the recipient contract reverted.\\n     * In any of the above cases, all paymaster calls (and recipient call) are reverted.\\n     * In any other case, the paymaster agrees to pay for the gas cost of the transaction (note\\n     *  that this includes also postRelayedCall revert)\\n     *\\n     * The rejectOnRecipientRevert flag means the Paymaster \\\"delegate\\\" the rejection to the recipient\\n     *  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,\\n     *  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,\\n     *  otherwise the TX is paid by the Paymaster.\\n     *\\n     *  @param relayRequest - the full relay request structure\\n     *  @param signature - user's EIP712-compatible signature of the {@link relayRequest}.\\n     *              Note that in most cases the paymaster shouldn't try use it at all. It is always checked\\n     *              by the forwarder immediately after preRelayedCall returns.\\n     *  @param approvalData - extra dapp-specific data (e.g. signature from trusted party)\\n     *  @param maxPossibleGas - based on values returned from {@link getGasAndDataLimits},\\n     *         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.\\n     *         In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"\\n     *  return:\\n     *      a context to be passed to postRelayedCall\\n     *      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.\\n     *          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.\\n     *          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).\\n     */\\n    function preRelayedCall(\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint256 maxPossibleGas\\n    )\\n    external\\n    returns (bytes memory context, bool rejectOnRecipientRevert);\\n\\n    /**\\n     * This method is called after the actual relayed function call.\\n     * It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call.\\n     *\\n     * MUST be protected with relayHubOnly() in case it modifies state.\\n     *\\n     * @param context - the call context, as returned by the preRelayedCall\\n     * @param success - true if the relayed call succeeded, false if it reverted\\n     * @param gasUseWithoutPost - the actual amount of gas used by the entire transaction, EXCEPT\\n     *        the gas used by the postRelayedCall itself.\\n     * @param relayData - the relay params of the request. can be used by relayHub.calculateCharge()\\n     *\\n     * Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster\\n     * is still committed to pay the relay for the entire transaction.\\n     */\\n    function postRelayedCall(\\n        bytes calldata context,\\n        bool success,\\n        uint256 gasUseWithoutPost,\\n        GsnTypes.RelayData calldata relayData\\n    ) external;\\n\\n    function versionPaymaster() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x4cf49c343b72cd8dac257e8b49009347dc2465d5d191c6d1f9455e74f331f5d9\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice gasPrice, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 gasPrice;\\n        uint256 pctRelayFee;\\n        uint256 baseRelayFee;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x813b12755ca7e69d3f269b5ab801d36d208274c26ea2764a416c3033e61bc130\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "getGasAndDataLimits()": {
                "notice": "Return the Gas Limits and msg.data max size constants used by the Paymaster."
              },
              "getHubAddr()": {
                "notice": "return the relayHub of this contract."
              },
              "getRelayHubDeposit()": {
                "notice": "Can be used to determine if the contract can pay for incoming calls before making any."
              },
              "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
                "notice": "This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state."
              },
              "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
                "notice": "Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call. MUST be protected with relayHubOnly() in case it modifies state. The Paymaster rejects by the following \"revert\" operations  - preRelayedCall() method reverts  - the forwarder reverts because of nonce or signature error  - the paymaster returned \"rejectOnRecipientRevert\", and the recipient contract reverted. In any of the above cases, all paymaster calls (and recipient call) are reverted. In any other case, the paymaster agrees to pay for the gas cost of the transaction (note  that this includes also postRelayedCall revert) The rejectOnRecipientRevert flag means the Paymaster \"delegate\" the rejection to the recipient  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,  otherwise the TX is paid by the Paymaster."
              }
            },
            "version": 1
          }
        }
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol": {
        "IRelayHub": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Deposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "fromBlock",
                  "type": "uint256"
                }
              ],
              "name": "HubDeprecated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxWorkerCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gasReserve",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "postOverhead",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gasOverhead",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maximumRecipientDeposit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minimumUnstakeDelay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minimumStake",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "dataGasCostPerByte",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "externalCallDataCostOverhead",
                      "type": "uint256"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct IRelayHub.RelayHubConfig",
                  "name": "config",
                  "type": "tuple"
                }
              ],
              "name": "RelayHubConfigured",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "baseRelayFee",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pctRelayFee",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "relayUrl",
                  "type": "string"
                }
              ],
              "name": "RelayServerRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "newRelayWorkers",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "workersCount",
                  "type": "uint256"
                }
              ],
              "name": "RelayWorkersAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "relayWorker",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "innerGasUsed",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "reason",
                  "type": "bytes"
                }
              ],
              "name": "TransactionRejectedByPaymaster",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayWorker",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                },
                {
                  "indexed": false,
                  "internalType": "enum IRelayHub.RelayCallStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "charge",
                  "type": "uint256"
                }
              ],
              "name": "TransactionRelayed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "enum IRelayHub.RelayCallStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "returnValue",
                  "type": "bytes"
                }
              ],
              "name": "TransactionResult",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "dest",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawn",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "newRelayWorkers",
                  "type": "address[]"
                }
              ],
              "name": "addRelayWorkers",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "gasUsed",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "gasPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pctRelayFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseRelayFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "relayWorker",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "paymaster",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "forwarder",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "paymasterData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "clientId",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayData",
                  "name": "relayData",
                  "type": "tuple"
                }
              ],
              "name": "calculateCharge",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "name": "calldataGasCost",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "depositFor",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "fromBlock",
                  "type": "uint256"
                }
              ],
              "name": "deprecateHub",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deprecationBlock",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getConfiguration",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxWorkerCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gasReserve",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "postOverhead",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gasOverhead",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maximumRecipientDeposit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minimumUnstakeDelay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minimumStake",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "dataGasCostPerByte",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "externalCallDataCostOverhead",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IRelayHub.RelayHubConfig",
                  "name": "config",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isDeprecated",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                }
              ],
              "name": "isRelayManagerStaked",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayWorker",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "beneficiary",
                  "type": "address"
                }
              ],
              "name": "penalize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "penalizer",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "baseRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pctRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "url",
                  "type": "string"
                }
              ],
              "name": "registerRelayServer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "maxAcceptanceBudget",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gas",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "validUntil",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IForwarder.ForwardRequest",
                      "name": "request",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "gasPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "pctRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "relayWorker",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "paymaster",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "forwarder",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "paymasterData",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "clientId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct GsnTypes.RelayData",
                      "name": "relayData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayRequest",
                  "name": "relayRequest",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "approvalData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "externalGasLimit",
                  "type": "uint256"
                }
              ],
              "name": "relayCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "paymasterAccepted",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnValue",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxWorkerCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gasReserve",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "postOverhead",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gasOverhead",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maximumRecipientDeposit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minimumUnstakeDelay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minimumStake",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "dataGasCostPerByte",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "externalCallDataCostOverhead",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IRelayHub.RelayHubConfig",
                  "name": "_config",
                  "type": "tuple"
                }
              ],
              "name": "setConfiguration",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "stakeManager",
              "outputs": [
                {
                  "internalType": "contract IStakeManager",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "versionHub",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "dest",
                  "type": "address"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "manager",
                  "type": "address"
                }
              ],
              "name": "workerCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "worker",
                  "type": "address"
                }
              ],
              "name": "workerToManager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "events": {
              "TransactionRejectedByPaymaster(address,address,address,address,address,bytes4,uint256,bytes)": {
                "params": {
                  "reason": "contains a revert reason returned from preRelayedCall or forwarder."
                }
              }
            },
            "kind": "dev",
            "methods": {
              "isRelayManagerStaked(address)": {
                "returns": {
                  "_0": "true if stake size and delay satisfy all requirements"
                }
              },
              "relayCall(uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
                "params": {
                  "approvalData": ": dapp-specific data forwarded to preRelayedCall.        This value is *not* verified by the Hub. For example, it can be used to pass a signature to the Paymaster",
                  "externalGasLimit": "- the value passed as gasLimit to the transaction. Emits a TransactionRelayed event.",
                  "maxAcceptanceBudget": "- max valid value for paymaster.getGasLimits().acceptanceBudget",
                  "relayRequest": "- all details of the requested relayed call",
                  "signature": "- client's EIP-712 signature over the relayRequest struct"
                }
              },
              "versionHub()": {
                "returns": {
                  "_0": "a SemVer-compliant version of the hub contract"
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "addRelayWorkers(address[])": "c2da0786",
              "balanceOf(address)": "70a08231",
              "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": "8e53548b",
              "calldataGasCost(uint256)": "26595b9d",
              "depositFor(address)": "aa67c919",
              "deprecateHub(uint256)": "af595dfc",
              "deprecationBlock()": "d6a71c0d",
              "getConfiguration()": "6bd50cef",
              "isDeprecated()": "c7178230",
              "isRelayManagerStaked(address)": "2ad311b5",
              "penalize(address,address)": "ebcd31ac",
              "penalizer()": "c4775a68",
              "registerRelayServer(uint256,uint256,string)": "83b71871",
              "relayCall(uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": "10c45431",
              "setConfiguration((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "c651bce8",
              "stakeManager()": "7542ff95",
              "versionHub()": "d904c732",
              "withdraw(uint256,address)": "00f714ce",
              "workerCount(address)": "194ac307",
              "workerToManager(address)": "ca998f56"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"}],\"name\":\"HubDeprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxWorkerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRecipientDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumUnstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataGasCostPerByte\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalCallDataCostOverhead\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IRelayHub.RelayHubConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"RelayHubConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"relayUrl\",\"type\":\"string\"}],\"name\":\"RelayServerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"newRelayWorkers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"workersCount\",\"type\":\"uint256\"}],\"name\":\"RelayWorkersAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"innerGasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"TransactionRejectedByPaymaster\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"enum IRelayHub.RelayCallStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"charge\",\"type\":\"uint256\"}],\"name\":\"TransactionRelayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IRelayHub.RelayCallStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnValue\",\"type\":\"bytes\"}],\"name\":\"TransactionResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newRelayWorkers\",\"type\":\"address[]\"}],\"name\":\"addRelayWorkers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"calculateCharge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"calldataGasCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"}],\"name\":\"deprecateHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deprecationBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxWorkerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRecipientDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumUnstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataGasCostPerByte\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalCallDataCostOverhead\",\"type\":\"uint256\"}],\"internalType\":\"struct IRelayHub.RelayHubConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDeprecated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"isRelayManagerStaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"penalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penalizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"name\":\"registerRelayServer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAcceptanceBudget\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"externalGasLimit\",\"type\":\"uint256\"}],\"name\":\"relayCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paymasterAccepted\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnValue\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxWorkerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumRecipientDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumUnstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataGasCostPerByte\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalCallDataCostOverhead\",\"type\":\"uint256\"}],\"internalType\":\"struct IRelayHub.RelayHubConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeManager\",\"outputs\":[{\"internalType\":\"contract IStakeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionHub\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"workerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"}],\"name\":\"workerToManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TransactionRejectedByPaymaster(address,address,address,address,address,bytes4,uint256,bytes)\":{\"params\":{\"reason\":\"contains a revert reason returned from preRelayedCall or forwarder.\"}}},\"kind\":\"dev\",\"methods\":{\"isRelayManagerStaked(address)\":{\"returns\":{\"_0\":\"true if stake size and delay satisfy all requirements\"}},\"relayCall(uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"params\":{\"approvalData\":\": dapp-specific data forwarded to preRelayedCall.        This value is *not* verified by the Hub. For example, it can be used to pass a signature to the Paymaster\",\"externalGasLimit\":\"- the value passed as gasLimit to the transaction. Emits a TransactionRelayed event.\",\"maxAcceptanceBudget\":\"- max valid value for paymaster.getGasLimits().acceptanceBudget\",\"relayRequest\":\"- all details of the requested relayed call\",\"signature\":\"- client's EIP-712 signature over the relayRequest struct\"}},\"versionHub()\":{\"returns\":{\"_0\":\"a SemVer-compliant version of the hub contract\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,address,uint256)\":{\"notice\":\"Emitted when depositFor is called, including the amount and account that was funded.\"},\"RelayServerRegistered(address,uint256,uint256,string)\":{\"notice\":\"Emitted when a relay server registers or updates its details Looking at these events lets a client discover relay servers\"},\"RelayWorkersAdded(address,address[],uint256)\":{\"notice\":\"Emitted when relays are added by a relayManager\"},\"TransactionRejectedByPaymaster(address,address,address,address,address,bytes4,uint256,bytes)\":{\"notice\":\"Emitted when an attempt to relay a call fails and Paymaster does not accept the transaction. The actual relayed call was not executed, and the recipient not charged.\"},\"TransactionRelayed(address,address,address,address,address,bytes4,uint8,uint256)\":{\"notice\":\"Emitted when a transaction is relayed. Note that the actual encoded function might be reverted: this will be indicated in the status field. Useful when monitoring a relay's operation and relayed calls to a contract. Charge is the ether value deducted from the recipient's balance, paid to the relay's manager.\"},\"Withdrawn(address,address,uint256)\":{\"notice\":\"Emitted when an account withdraws funds from RelayHub.\"}},\"kind\":\"user\",\"methods\":{\"addRelayWorkers(address[])\":{\"notice\":\"Add new worker addresses controlled by sender who must be a staked Relay Manager address. Emits a RelayWorkersAdded event. This function can be called multiple times, emitting new events\"},\"balanceOf(address)\":{\"notice\":\"Returns an account's deposits. It can be either a deposit of a paymaster, or a revenue of a relay manager.\"},\"calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"The fee is expressed as a base fee in wei plus percentage on actual charge. E.g. a value of 40 stands for a 40% fee, so the recipient will be charged for 1.4 times the spent amount.\"},\"depositFor(address)\":{\"notice\":\"Deposits ether for a contract, so that it can receive (and pay for) relayed transactions. Unused balance can only be withdrawn by the contract itself, by calling withdraw. Emits a Deposited event.\"},\"getConfiguration()\":{\"notice\":\"Returns the whole hub configuration\"},\"isRelayManagerStaked(address)\":{\"notice\":\"Uses StakeManager info to decide if the Relay Manager can be considered staked\"},\"relayCall(uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"Relays a transaction. For this to succeed, multiple conditions must be met:  - Paymaster's \\\"preRelayCall\\\" method must succeed and not revert  - the sender must be a registered Relay Worker that the user signed  - the transaction's gas price must be equal or larger than the one that was signed by the sender  - the transaction must have enough gas to run all internal transactions if they use all gas available to them  - the Paymaster must have enough balance to pay the Relay Worker for the scenario when all gas is spent If all conditions are met, the call will be relayed and the recipient charged. Arguments:\"},\"withdraw(uint256,address)\":{\"notice\":\"Withdraws from an account's balance, sending it back to it. Relay managers call this to retrieve their revenue, and contracts can also use it to reduce their funding. Emits a Withdrawn event.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/interfaces/IRelayHub.sol\":\"IRelayHub\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\ninterface IForwarder {\\n\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntil;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * verify the transaction would execute.\\n     * validate the signature and the nonce of the request.\\n     * revert if either signature or nonce are incorrect.\\n     * also revert if domainSeparator or requestTypeHash are not registered.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * execute a transaction\\n     * @param forwardRequest - all transaction parameters\\n     * @param domainSeparator - domain used when signing this request\\n     * @param requestTypeHash - request type used when signing this request.\\n     * @param suffixData - the extension data used when signing this request.\\n     * @param signature - signature to validate.\\n     *\\n     * the transaction is verified, and then executed.\\n     * the success and ret of \\\"call\\\" are returned.\\n     * This method would revert only verification errors. target errors\\n     * are reported using the returned \\\"success\\\" and ret string\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * Register a new Request typehash.\\n     * @param typeName - the name of the request type.\\n     * @param typeSuffix - any extra data after the generic params.\\n     *  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * Register a new domain separator.\\n     * The domain separator must have the following fields: name,version,chainId, verifyingContract.\\n     * the chainId is the current network's chainId, and the verifyingContract is this forwarder.\\n     * This method is given the domain name and version to create and register the domain separator value.\\n     * @param name the domain's display name\\n     * @param version the domain/protocol version\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IRelayHub.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"./IStakeManager.sol\\\";\\n\\ninterface IRelayHub {\\n    struct RelayHubConfig {\\n        // maximum number of worker accounts allowed per manager\\n        uint256 maxWorkerCount;\\n        // Gas set aside for all relayCall() instructions to prevent unexpected out-of-gas exceptions\\n        uint256 gasReserve;\\n        // Gas overhead to calculate gasUseWithoutPost\\n        uint256 postOverhead;\\n        // Gas cost of all relayCall() instructions after actual 'calculateCharge()'\\n        // Assume that relay has non-zero balance (costs 15'000 more otherwise).\\n        uint256 gasOverhead;\\n        // Maximum funds that can be deposited at once. Prevents user error by disallowing large deposits.\\n        uint256 maximumRecipientDeposit;\\n        // Minimum unstake delay blocks of a relay manager's stake on the StakeManager\\n        uint256 minimumUnstakeDelay;\\n        // Minimum stake a relay can have. An attack on the network will never cost less than half this value.\\n        uint256 minimumStake;\\n        // relayCall()'s msg.data upper bound gas cost per byte\\n        uint256 dataGasCostPerByte;\\n        // relayCalls() minimal gas overhead when calculating cost of putting tx on chain.\\n        uint256 externalCallDataCostOverhead;\\n    }\\n\\n    event RelayHubConfigured(RelayHubConfig config);\\n\\n    /// Emitted when a relay server registers or updates its details\\n    /// Looking at these events lets a client discover relay servers\\n    event RelayServerRegistered(\\n        address indexed relayManager,\\n        uint256 baseRelayFee,\\n        uint256 pctRelayFee,\\n        string relayUrl\\n    );\\n\\n    /// Emitted when relays are added by a relayManager\\n    event RelayWorkersAdded(\\n        address indexed relayManager,\\n        address[] newRelayWorkers,\\n        uint256 workersCount\\n    );\\n\\n    /// Emitted when an account withdraws funds from RelayHub.\\n    event Withdrawn(\\n        address indexed account,\\n        address indexed dest,\\n        uint256 amount\\n    );\\n\\n    /// Emitted when depositFor is called, including the amount and account that was funded.\\n    event Deposited(\\n        address indexed paymaster,\\n        address indexed from,\\n        uint256 amount\\n    );\\n\\n    /// Emitted when an attempt to relay a call fails and Paymaster does not accept the transaction.\\n    /// The actual relayed call was not executed, and the recipient not charged.\\n    /// @param reason contains a revert reason returned from preRelayedCall or forwarder.\\n    event TransactionRejectedByPaymaster(\\n        address indexed relayManager,\\n        address indexed paymaster,\\n        address indexed from,\\n        address to,\\n        address relayWorker,\\n        bytes4 selector,\\n        uint256 innerGasUsed,\\n        bytes reason\\n    );\\n\\n    /// Emitted when a transaction is relayed. Note that the actual encoded function might be reverted: this will be\\n    /// indicated in the status field.\\n    /// Useful when monitoring a relay's operation and relayed calls to a contract.\\n    /// Charge is the ether value deducted from the recipient's balance, paid to the relay's manager.\\n    event TransactionRelayed(\\n        address indexed relayManager,\\n        address indexed relayWorker,\\n        address indexed from,\\n        address to,\\n        address paymaster,\\n        bytes4 selector,\\n        RelayCallStatus status,\\n        uint256 charge\\n    );\\n\\n    event TransactionResult(\\n        RelayCallStatus status,\\n        bytes returnValue\\n    );\\n\\n    event HubDeprecated(uint256 fromBlock);\\n\\n    /// Reason error codes for the TransactionRelayed event\\n    /// @param OK - the transaction was successfully relayed and execution successful - never included in the event\\n    /// @param RelayedCallFailed - the transaction was relayed, but the relayed call failed\\n    /// @param RejectedByPreRelayed - the transaction was not relayed due to preRelatedCall reverting\\n    /// @param RejectedByForwarder - the transaction was not relayed due to forwarder check (signature,nonce)\\n    /// @param PostRelayedFailed - the transaction was relayed and reverted due to postRelatedCall reverting\\n    /// @param PaymasterBalanceChanged - the transaction was relayed and reverted due to the paymaster balance change\\n    enum RelayCallStatus {\\n        OK,\\n        RelayedCallFailed,\\n        RejectedByPreRelayed,\\n        RejectedByForwarder,\\n        RejectedByRecipientRevert,\\n        PostRelayedFailed,\\n        PaymasterBalanceChanged\\n    }\\n\\n    /// Add new worker addresses controlled by sender who must be a staked Relay Manager address.\\n    /// Emits a RelayWorkersAdded event.\\n    /// This function can be called multiple times, emitting new events\\n    function addRelayWorkers(address[] calldata newRelayWorkers) external;\\n\\n    function registerRelayServer(uint256 baseRelayFee, uint256 pctRelayFee, string calldata url) external;\\n\\n    // Balance management\\n\\n    /// Deposits ether for a contract, so that it can receive (and pay for) relayed transactions. Unused balance can only\\n    /// be withdrawn by the contract itself, by calling withdraw.\\n    /// Emits a Deposited event.\\n    function depositFor(address target) external payable;\\n\\n    /// Withdraws from an account's balance, sending it back to it. Relay managers call this to retrieve their revenue, and\\n    /// contracts can also use it to reduce their funding.\\n    /// Emits a Withdrawn event.\\n    function withdraw(uint256 amount, address payable dest) external;\\n\\n    // Relaying\\n\\n\\n    /// Relays a transaction. For this to succeed, multiple conditions must be met:\\n    ///  - Paymaster's \\\"preRelayCall\\\" method must succeed and not revert\\n    ///  - the sender must be a registered Relay Worker that the user signed\\n    ///  - the transaction's gas price must be equal or larger than the one that was signed by the sender\\n    ///  - the transaction must have enough gas to run all internal transactions if they use all gas available to them\\n    ///  - the Paymaster must have enough balance to pay the Relay Worker for the scenario when all gas is spent\\n    ///\\n    /// If all conditions are met, the call will be relayed and the recipient charged.\\n    ///\\n    /// Arguments:\\n    /// @param maxAcceptanceBudget - max valid value for paymaster.getGasLimits().acceptanceBudget\\n    /// @param relayRequest - all details of the requested relayed call\\n    /// @param signature - client's EIP-712 signature over the relayRequest struct\\n    /// @param approvalData: dapp-specific data forwarded to preRelayedCall.\\n    ///        This value is *not* verified by the Hub. For example, it can be used to pass a signature to the Paymaster\\n    /// @param externalGasLimit - the value passed as gasLimit to the transaction.\\n    ///\\n    /// Emits a TransactionRelayed event.\\n    function relayCall(\\n        uint maxAcceptanceBudget,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint externalGasLimit\\n    )\\n    external\\n    returns (bool paymasterAccepted, bytes memory returnValue);\\n\\n    function penalize(address relayWorker, address payable beneficiary) external;\\n\\n    function setConfiguration(RelayHubConfig memory _config) external;\\n\\n    // Deprecate hub (reverting relayCall()) from block number 'fromBlock'\\n    // Can only be called by owner\\n    function deprecateHub(uint256 fromBlock) external;\\n\\n    /// The fee is expressed as a base fee in wei plus percentage on actual charge.\\n    /// E.g. a value of 40 stands for a 40% fee, so the recipient will be\\n    /// charged for 1.4 times the spent amount.\\n    function calculateCharge(uint256 gasUsed, GsnTypes.RelayData calldata relayData) external view returns (uint256);\\n\\n    /* getters */\\n\\n    /// Returns the whole hub configuration\\n    function getConfiguration() external view returns (RelayHubConfig memory config);\\n\\n    function calldataGasCost(uint256 length) external view returns (uint256);\\n\\n    function workerToManager(address worker) external view returns(address);\\n\\n    function workerCount(address manager) external view returns(uint256);\\n\\n    /// Returns an account's deposits. It can be either a deposit of a paymaster, or a revenue of a relay manager.\\n    function balanceOf(address target) external view returns (uint256);\\n\\n    function stakeManager() external view returns (IStakeManager);\\n\\n    function penalizer() external view returns (address);\\n\\n    /// Uses StakeManager info to decide if the Relay Manager can be considered staked\\n    /// @return true if stake size and delay satisfy all requirements\\n    function isRelayManagerStaked(address relayManager) external view returns(bool);\\n\\n    // Checks hubs' deprecation status\\n    function isDeprecated() external view returns (bool);\\n\\n    // Returns the block number from which the hub no longer allows relaying calls.\\n    function deprecationBlock() external view returns (uint256);\\n\\n    /// @return a SemVer-compliant version of the hub contract\\n    function versionHub() external view returns (string memory);\\n}\\n\\n\",\"keccak256\":\"0x3497133a7147174c498d2feeb2569b973396a8c2c220b5876fd9eb3b59841c85\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\ninterface IStakeManager {\\n\\n    /// Emitted when a stake or unstakeDelay are initialized or increased\\n    event StakeAdded(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 stake,\\n        uint256 unstakeDelay\\n    );\\n\\n    /// Emitted once a stake is scheduled for withdrawal\\n    event StakeUnlocked(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 withdrawBlock\\n    );\\n\\n    /// Emitted when owner withdraws relayManager funds\\n    event StakeWithdrawn(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 amount\\n    );\\n\\n    /// Emitted when an authorized Relay Hub penalizes a relayManager\\n    event StakePenalized(\\n        address indexed relayManager,\\n        address indexed beneficiary,\\n        uint256 reward\\n    );\\n\\n    event HubAuthorized(\\n        address indexed relayManager,\\n        address indexed relayHub\\n    );\\n\\n    event HubUnauthorized(\\n        address indexed relayManager,\\n        address indexed relayHub,\\n        uint256 removalBlock\\n    );\\n\\n    event OwnerSet(\\n        address indexed relayManager,\\n        address indexed owner\\n    );\\n\\n    /// @param stake - amount of ether staked for this relay\\n    /// @param unstakeDelay - number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'\\n    /// @param withdrawBlock - first block number 'withdraw' will be callable, or zero if the unlock has not been called\\n    /// @param owner - address that receives revenue and manages relayManager's stake\\n    struct StakeInfo {\\n        uint256 stake;\\n        uint256 unstakeDelay;\\n        uint256 withdrawBlock;\\n        address payable owner;\\n    }\\n\\n    struct RelayHubInfo {\\n        uint256 removalBlock;\\n    }\\n\\n    /// Set the owner of a Relay Manager. Called only by the RelayManager itself.\\n    /// Note that owners cannot transfer ownership - if the entry already exists, reverts.\\n    /// @param owner - owner of the relay (as configured off-chain)\\n    function setRelayManagerOwner(address payable owner) external;\\n\\n    /// Only the owner can call this function. If the entry does not exist, reverts.\\n    /// @param relayManager - address that represents a stake entry and controls relay registrations on relay hubs\\n    /// @param unstakeDelay - number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'\\n    function stakeForRelayManager(address relayManager, uint256 unstakeDelay) external payable;\\n\\n    function unlockStake(address relayManager) external;\\n\\n    function withdrawStake(address relayManager) external;\\n\\n    function authorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    function authorizeHubByManager(address relayHub) external;\\n\\n    function unauthorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    function unauthorizeHubByManager(address relayHub) external;\\n\\n    function isRelayManagerStaked(address relayManager, address relayHub, uint256 minAmount, uint256 minUnstakeDelay)\\n    external\\n    view\\n    returns (bool);\\n\\n    /// Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns half of stake on the way.\\n    /// @param relayManager - entry to penalize\\n    /// @param beneficiary - address that receives half of the penalty amount\\n    /// @param amount - amount to withdraw from stake\\n    function penalizeRelayManager(address relayManager, address payable beneficiary, uint256 amount) external;\\n\\n    function getStakeInfo(address relayManager) external view returns (StakeInfo memory stakeInfo);\\n\\n    function maxUnstakeDelay() external view returns (uint256);\\n\\n    function versionSM() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x86fcc2f265ba3c2f987fe47823121b4df3ddc86b834d89a67aca585d0721747f\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice gasPrice, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 gasPrice;\\n        uint256 pctRelayFee;\\n        uint256 baseRelayFee;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x813b12755ca7e69d3f269b5ab801d36d208274c26ea2764a416c3033e61bc130\",\"license\":\"GPL-3.0-only\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "events": {
              "Deposited(address,address,uint256)": {
                "notice": "Emitted when depositFor is called, including the amount and account that was funded."
              },
              "RelayServerRegistered(address,uint256,uint256,string)": {
                "notice": "Emitted when a relay server registers or updates its details Looking at these events lets a client discover relay servers"
              },
              "RelayWorkersAdded(address,address[],uint256)": {
                "notice": "Emitted when relays are added by a relayManager"
              },
              "TransactionRejectedByPaymaster(address,address,address,address,address,bytes4,uint256,bytes)": {
                "notice": "Emitted when an attempt to relay a call fails and Paymaster does not accept the transaction. The actual relayed call was not executed, and the recipient not charged."
              },
              "TransactionRelayed(address,address,address,address,address,bytes4,uint8,uint256)": {
                "notice": "Emitted when a transaction is relayed. Note that the actual encoded function might be reverted: this will be indicated in the status field. Useful when monitoring a relay's operation and relayed calls to a contract. Charge is the ether value deducted from the recipient's balance, paid to the relay's manager."
              },
              "Withdrawn(address,address,uint256)": {
                "notice": "Emitted when an account withdraws funds from RelayHub."
              }
            },
            "kind": "user",
            "methods": {
              "addRelayWorkers(address[])": {
                "notice": "Add new worker addresses controlled by sender who must be a staked Relay Manager address. Emits a RelayWorkersAdded event. This function can be called multiple times, emitting new events"
              },
              "balanceOf(address)": {
                "notice": "Returns an account's deposits. It can be either a deposit of a paymaster, or a revenue of a relay manager."
              },
              "calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
                "notice": "The fee is expressed as a base fee in wei plus percentage on actual charge. E.g. a value of 40 stands for a 40% fee, so the recipient will be charged for 1.4 times the spent amount."
              },
              "depositFor(address)": {
                "notice": "Deposits ether for a contract, so that it can receive (and pay for) relayed transactions. Unused balance can only be withdrawn by the contract itself, by calling withdraw. Emits a Deposited event."
              },
              "getConfiguration()": {
                "notice": "Returns the whole hub configuration"
              },
              "isRelayManagerStaked(address)": {
                "notice": "Uses StakeManager info to decide if the Relay Manager can be considered staked"
              },
              "relayCall(uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
                "notice": "Relays a transaction. For this to succeed, multiple conditions must be met:  - Paymaster's \"preRelayCall\" method must succeed and not revert  - the sender must be a registered Relay Worker that the user signed  - the transaction's gas price must be equal or larger than the one that was signed by the sender  - the transaction must have enough gas to run all internal transactions if they use all gas available to them  - the Paymaster must have enough balance to pay the Relay Worker for the scenario when all gas is spent If all conditions are met, the call will be relayed and the recipient charged. Arguments:"
              },
              "withdraw(uint256,address)": {
                "notice": "Withdraws from an account's balance, sending it back to it. Relay managers call this to retrieve their revenue, and contracts can also use it to reduce their funding. Emits a Withdrawn event."
              }
            },
            "version": 1
          }
        }
      },
      "@opengsn/contracts/src/interfaces/IRelayRecipient.sol": {
        "IRelayRecipient": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                }
              ],
              "name": "isTrustedForwarder",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "versionRecipient",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "isTrustedForwarder(address)": "572b6c05",
              "versionRecipient()": "486ff0cd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"}},\"notice\":\"a contract must implement this interface in order to support relayed transaction. It is better to inherit the BaseRelayRecipient as its implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":\"IRelayRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\n/**\\n * a contract must implement this interface in order to support relayed transaction.\\n * It is better to inherit the BaseRelayRecipient as its implementation.\\n */\\nabstract contract IRelayRecipient {\\n\\n    /**\\n     * return if the forwarder is trusted to forward relayed transactions to us.\\n     * the forwarder is required to verify the sender's signature, and verify\\n     * the call is not a replay.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * return the sender of this call.\\n     * if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\\n     * of the msg.data.\\n     * otherwise, return `msg.sender`\\n     * should be used in the contract anywhere instead of msg.sender\\n     */\\n    function _msgSender() internal virtual view returns (address payable);\\n\\n    /**\\n     * return the msg.data of this call.\\n     * if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\\n     * of the msg.data - so this method will strip those 20 bytes off.\\n     * otherwise (if the call was made directly and not through the forwarder), return `msg.data`\\n     * should be used in the contract instead of msg.data, where this difference matters.\\n     */\\n    function _msgData() internal virtual view returns (bytes memory);\\n\\n    function versionRecipient() external virtual view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6243d3a925653ed0bde57e9fae7fb87f12c58a2376b27ae23b53502322532e00\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "isTrustedForwarder(address)": {
                "notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
              }
            },
            "notice": "a contract must implement this interface in order to support relayed transaction. It is better to inherit the BaseRelayRecipient as its implementation.",
            "version": 1
          }
        }
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol": {
        "IStakeManager": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayHub",
                  "type": "address"
                }
              ],
              "name": "HubAuthorized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayHub",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "removalBlock",
                  "type": "uint256"
                }
              ],
              "name": "HubUnauthorized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnerSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "stake",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "unstakeDelay",
                  "type": "uint256"
                }
              ],
              "name": "StakeAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "beneficiary",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "name": "StakePenalized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "withdrawBlock",
                  "type": "uint256"
                }
              ],
              "name": "StakeUnlocked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "StakeWithdrawn",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayHub",
                  "type": "address"
                }
              ],
              "name": "authorizeHubByManager",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "relayHub",
                  "type": "address"
                }
              ],
              "name": "authorizeHubByOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                }
              ],
              "name": "getStakeInfo",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "stake",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "unstakeDelay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawBlock",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IStakeManager.StakeInfo",
                  "name": "stakeInfo",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "relayHub",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minUnstakeDelay",
                  "type": "uint256"
                }
              ],
              "name": "isRelayManagerStaked",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxUnstakeDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "beneficiary",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "penalizeRelayManager",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "setRelayManagerOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "unstakeDelay",
                  "type": "uint256"
                }
              ],
              "name": "stakeForRelayManager",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayHub",
                  "type": "address"
                }
              ],
              "name": "unauthorizeHubByManager",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "relayHub",
                  "type": "address"
                }
              ],
              "name": "unauthorizeHubByOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                }
              ],
              "name": "unlockStake",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "versionSM",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "relayManager",
                  "type": "address"
                }
              ],
              "name": "withdrawStake",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "penalizeRelayManager(address,address,uint256)": {
                "params": {
                  "amount": "- amount to withdraw from stake",
                  "beneficiary": "- address that receives half of the penalty amount",
                  "relayManager": "- entry to penalize"
                }
              },
              "setRelayManagerOwner(address)": {
                "params": {
                  "owner": "- owner of the relay (as configured off-chain)"
                }
              },
              "stakeForRelayManager(address,uint256)": {
                "params": {
                  "relayManager": "- address that represents a stake entry and controls relay registrations on relay hubs",
                  "unstakeDelay": "- number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'"
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "authorizeHubByManager(address)": "d48a9d43",
              "authorizeHubByOwner(address,address)": "7835d296",
              "getStakeInfo(address)": "c3453153",
              "isRelayManagerStaked(address,address,uint256,uint256)": "6de8dd41",
              "maxUnstakeDelay()": "4e02131c",
              "penalizeRelayManager(address,address,uint256)": "09a08af4",
              "setRelayManagerOwner(address)": "fece3dd4",
              "stakeForRelayManager(address,uint256)": "f32102db",
              "unauthorizeHubByManager(address)": "f9bce311",
              "unauthorizeHubByOwner(address,address)": "f48f8ac7",
              "unlockStake(address)": "4a1ce599",
              "versionSM()": "47116c6e",
              "withdrawStake(address)": "c23a5cea"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"}],\"name\":\"HubAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removalBlock\",\"type\":\"uint256\"}],\"name\":\"HubUnauthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelay\",\"type\":\"uint256\"}],\"name\":\"StakeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"StakePenalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawBlock\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"}],\"name\":\"authorizeHubByManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"}],\"name\":\"authorizeHubByOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawBlock\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minUnstakeDelay\",\"type\":\"uint256\"}],\"name\":\"isRelayManagerStaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxUnstakeDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"penalizeRelayManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setRelayManagerOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelay\",\"type\":\"uint256\"}],\"name\":\"stakeForRelayManager\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"}],\"name\":\"unauthorizeHubByManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"}],\"name\":\"unauthorizeHubByOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionSM\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"penalizeRelayManager(address,address,uint256)\":{\"params\":{\"amount\":\"- amount to withdraw from stake\",\"beneficiary\":\"- address that receives half of the penalty amount\",\"relayManager\":\"- entry to penalize\"}},\"setRelayManagerOwner(address)\":{\"params\":{\"owner\":\"- owner of the relay (as configured off-chain)\"}},\"stakeForRelayManager(address,uint256)\":{\"params\":{\"relayManager\":\"- address that represents a stake entry and controls relay registrations on relay hubs\",\"unstakeDelay\":\"- number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeAdded(address,address,uint256,uint256)\":{\"notice\":\"Emitted when a stake or unstakeDelay are initialized or increased\"},\"StakePenalized(address,address,uint256)\":{\"notice\":\"Emitted when an authorized Relay Hub penalizes a relayManager\"},\"StakeUnlocked(address,address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"StakeWithdrawn(address,address,uint256)\":{\"notice\":\"Emitted when owner withdraws relayManager funds\"}},\"kind\":\"user\",\"methods\":{\"penalizeRelayManager(address,address,uint256)\":{\"notice\":\"Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns half of stake on the way.\"},\"setRelayManagerOwner(address)\":{\"notice\":\"Set the owner of a Relay Manager. Called only by the RelayManager itself. Note that owners cannot transfer ownership - if the entry already exists, reverts.\"},\"stakeForRelayManager(address,uint256)\":{\"notice\":\"Only the owner can call this function. If the entry does not exist, reverts.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\ninterface IStakeManager {\\n\\n    /// Emitted when a stake or unstakeDelay are initialized or increased\\n    event StakeAdded(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 stake,\\n        uint256 unstakeDelay\\n    );\\n\\n    /// Emitted once a stake is scheduled for withdrawal\\n    event StakeUnlocked(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 withdrawBlock\\n    );\\n\\n    /// Emitted when owner withdraws relayManager funds\\n    event StakeWithdrawn(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 amount\\n    );\\n\\n    /// Emitted when an authorized Relay Hub penalizes a relayManager\\n    event StakePenalized(\\n        address indexed relayManager,\\n        address indexed beneficiary,\\n        uint256 reward\\n    );\\n\\n    event HubAuthorized(\\n        address indexed relayManager,\\n        address indexed relayHub\\n    );\\n\\n    event HubUnauthorized(\\n        address indexed relayManager,\\n        address indexed relayHub,\\n        uint256 removalBlock\\n    );\\n\\n    event OwnerSet(\\n        address indexed relayManager,\\n        address indexed owner\\n    );\\n\\n    /// @param stake - amount of ether staked for this relay\\n    /// @param unstakeDelay - number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'\\n    /// @param withdrawBlock - first block number 'withdraw' will be callable, or zero if the unlock has not been called\\n    /// @param owner - address that receives revenue and manages relayManager's stake\\n    struct StakeInfo {\\n        uint256 stake;\\n        uint256 unstakeDelay;\\n        uint256 withdrawBlock;\\n        address payable owner;\\n    }\\n\\n    struct RelayHubInfo {\\n        uint256 removalBlock;\\n    }\\n\\n    /// Set the owner of a Relay Manager. Called only by the RelayManager itself.\\n    /// Note that owners cannot transfer ownership - if the entry already exists, reverts.\\n    /// @param owner - owner of the relay (as configured off-chain)\\n    function setRelayManagerOwner(address payable owner) external;\\n\\n    /// Only the owner can call this function. If the entry does not exist, reverts.\\n    /// @param relayManager - address that represents a stake entry and controls relay registrations on relay hubs\\n    /// @param unstakeDelay - number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'\\n    function stakeForRelayManager(address relayManager, uint256 unstakeDelay) external payable;\\n\\n    function unlockStake(address relayManager) external;\\n\\n    function withdrawStake(address relayManager) external;\\n\\n    function authorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    function authorizeHubByManager(address relayHub) external;\\n\\n    function unauthorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    function unauthorizeHubByManager(address relayHub) external;\\n\\n    function isRelayManagerStaked(address relayManager, address relayHub, uint256 minAmount, uint256 minUnstakeDelay)\\n    external\\n    view\\n    returns (bool);\\n\\n    /// Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns half of stake on the way.\\n    /// @param relayManager - entry to penalize\\n    /// @param beneficiary - address that receives half of the penalty amount\\n    /// @param amount - amount to withdraw from stake\\n    function penalizeRelayManager(address relayManager, address payable beneficiary, uint256 amount) external;\\n\\n    function getStakeInfo(address relayManager) external view returns (StakeInfo memory stakeInfo);\\n\\n    function maxUnstakeDelay() external view returns (uint256);\\n\\n    function versionSM() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x86fcc2f265ba3c2f987fe47823121b4df3ddc86b834d89a67aca585d0721747f\",\"license\":\"GPL-3.0-only\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "events": {
              "StakeAdded(address,address,uint256,uint256)": {
                "notice": "Emitted when a stake or unstakeDelay are initialized or increased"
              },
              "StakePenalized(address,address,uint256)": {
                "notice": "Emitted when an authorized Relay Hub penalizes a relayManager"
              },
              "StakeUnlocked(address,address,uint256)": {
                "notice": "Emitted once a stake is scheduled for withdrawal"
              },
              "StakeWithdrawn(address,address,uint256)": {
                "notice": "Emitted when owner withdraws relayManager funds"
              }
            },
            "kind": "user",
            "methods": {
              "penalizeRelayManager(address,address,uint256)": {
                "notice": "Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns half of stake on the way."
              },
              "setRelayManagerOwner(address)": {
                "notice": "Set the owner of a Relay Manager. Called only by the RelayManager itself. Note that owners cannot transfer ownership - if the entry already exists, reverts."
              },
              "stakeForRelayManager(address,uint256)": {
                "notice": "Only the owner can call this function. If the entry does not exist, reverts."
              }
            },
            "version": 1
          }
        }
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol": {
        "GsnEip712Library": {
          "abi": [
            {
              "inputs": [],
              "name": "EIP712DOMAIN_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "GENERIC_PARAMS",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "RELAYDATA_TYPE",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "RELAYDATA_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "RELAY_REQUEST_NAME",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "RELAY_REQUEST_SUFFIX",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "RELAY_REQUEST_TYPE",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "RELAY_REQUEST_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "610812610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c8063abf0d3f411610065578063abf0d3f41461010f578063c46cf83f1461012d578063c49f91d31461014b578063cc0c62b21461016957610092565b8063066a310c146100975780636225e61b146100b5578063931cd38f146100d3578063987673f7146100f1575b600080fd5b61009f610187565b6040516100ac9190610620565b60405180910390f35b6100bd6101a3565b6040516100ca91906105fe565b60405180910390f35b6100db61024e565b6040516100e89190610620565b60405180910390f35b6100f9610289565b6040516101069190610620565b60405180910390f35b6101176102c2565b60405161012491906105e3565b60405180910390f35b610135610374565b60405161014291906105fe565b60405180910390f35b610153610390565b60405161016091906105e3565b60405180910390f35b6101716103b4565b60405161017e91906105e3565b60405180910390f35b6040518060800160405280605d81526020016106df605d913981565b6040518060400160405280600c81526020017f52656c61795265717565737400000000000000000000000000000000000000008152506040518060800160405280605d81526020016106df605d91396040518060e0016040528060a1815260200161073c60a1913960405160200161021b91906105c1565b60405160208183030381529060405260405160200161023c9392919061057a565b60405160208183030381529060405281565b6040518060e0016040528060a1815260200161073c60a1913960405160200161027791906105c1565b60405160208183030381529060405281565b6040518060400160405280600c81526020017f52656c617952657175657374000000000000000000000000000000000000000081525081565b6040518060400160405280600c81526020017f52656c61795265717565737400000000000000000000000000000000000000008152506040518060800160405280605d81526020016106df605d91396040518060e0016040528060a1815260200161073c60a1913960405160200161033a91906105c1565b60405160208183030381529060405260405160200161035b9392919061057a565b6040516020818303038152906040528051906020012081565b6040518060e0016040528060a1815260200161073c60a1913981565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6040518060e0016040528060a1815260200161073c60a191398051906020012081565b6103e081610690565b82525050565b60006103f182610642565b6103fb8185610658565b935061040b81856020860161069a565b610414816106cd565b840191505092915050565b600061042a82610642565b6104348185610669565b935061044481856020860161069a565b80840191505092915050565b600061045b8261064d565b6104658185610674565b935061047581856020860161069a565b61047e816106cd565b840191505092915050565b60006104948261064d565b61049e8185610685565b93506104ae81856020860161069a565b80840191505092915050565b60006104c7600183610685565b91507f2c000000000000000000000000000000000000000000000000000000000000006000830152600182019050919050565b6000610507601483610685565b91507f52656c6179446174612072656c617944617461290000000000000000000000006000830152601482019050919050565b6000610547600183610685565b91507f28000000000000000000000000000000000000000000000000000000000000006000830152600182019050919050565b60006105868286610489565b91506105918261053a565b915061059d8285610489565b91506105a8826104ba565b91506105b48284610489565b9150819050949350505050565b60006105cc826104fa565b91506105d8828461041f565b915081905092915050565b60006020820190506105f860008301846103d7565b92915050565b6000602082019050818103600083015261061881846103e6565b905092915050565b6000602082019050818103600083015261063a8184610450565b905092915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b60005b838110156106b857808201518184015260208101905061069d565b838111156106c7576000848401525b50505050565b6000601f19601f830116905091905056fe616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c627974657320646174612c75696e743235362076616c6964556e74696c52656c6179446174612875696e743235362067617350726963652c75696e743235362070637452656c61794665652c75696e74323536206261736552656c61794665652c616464726573732072656c6179576f726b65722c61646472657373207061796d61737465722c6164647265737320666f727761726465722c6279746573207061796d6173746572446174612c75696e7432353620636c69656e74496429a2646970667358221220075ddb6ec85b7506da03c3f49a8715c5ec1fe7a9fb924763a076072e988d065a64736f6c63430007060033",
              "opcodes": "PUSH2 0x812 PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xABF0D3F4 GT PUSH2 0x65 JUMPI DUP1 PUSH4 0xABF0D3F4 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xC46CF83F EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xC49F91D3 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xCC0C62B2 EQ PUSH2 0x169 JUMPI PUSH2 0x92 JUMP JUMPDEST DUP1 PUSH4 0x66A310C EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x6225E61B EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x931CD38F EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x987673F7 EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6DF PUSH1 0x5D SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52656C6179526571756573740000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6DF PUSH1 0x5D SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x73C PUSH1 0xA1 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x73C PUSH1 0xA1 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52656C6179526571756573740000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52656C6179526571756573740000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6DF PUSH1 0x5D SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x73C PUSH1 0xA1 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x35B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x73C PUSH1 0xA1 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x73C PUSH1 0xA1 SWAP2 CODECOPY DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0x3E0 DUP2 PUSH2 0x690 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F1 DUP3 PUSH2 0x642 JUMP JUMPDEST PUSH2 0x3FB DUP2 DUP6 PUSH2 0x658 JUMP JUMPDEST SWAP4 POP PUSH2 0x40B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x6CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42A DUP3 PUSH2 0x642 JUMP JUMPDEST PUSH2 0x434 DUP2 DUP6 PUSH2 0x669 JUMP JUMPDEST SWAP4 POP PUSH2 0x444 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B DUP3 PUSH2 0x64D JUMP JUMPDEST PUSH2 0x465 DUP2 DUP6 PUSH2 0x674 JUMP JUMPDEST SWAP4 POP PUSH2 0x475 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x47E DUP2 PUSH2 0x6CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 DUP3 PUSH2 0x64D JUMP JUMPDEST PUSH2 0x49E DUP2 DUP6 PUSH2 0x685 JUMP JUMPDEST SWAP4 POP PUSH2 0x4AE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 PUSH1 0x1 DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP2 POP PUSH32 0x2C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x507 PUSH1 0x14 DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP2 POP PUSH32 0x52656C6179446174612072656C61794461746129000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x14 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x547 PUSH1 0x1 DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP2 POP PUSH32 0x2800000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x586 DUP3 DUP7 PUSH2 0x489 JUMP JUMPDEST SWAP2 POP PUSH2 0x591 DUP3 PUSH2 0x53A JUMP JUMPDEST SWAP2 POP PUSH2 0x59D DUP3 DUP6 PUSH2 0x489 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A8 DUP3 PUSH2 0x4BA JUMP JUMPDEST SWAP2 POP PUSH2 0x5B4 DUP3 DUP5 PUSH2 0x489 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CC DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP PUSH2 0x5D8 DUP3 DUP5 PUSH2 0x41F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x618 DUP2 DUP5 PUSH2 0x3E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x63A DUP2 DUP5 PUSH2 0x450 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6B8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x69D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH2 0x6464 PUSH19 0x6573732066726F6D2C6164647265737320746F 0x2C PUSH22 0x696E743235362076616C75652C75696E743235362067 PUSH2 0x732C PUSH22 0x696E74323536206E6F6E63652C627974657320646174 PUSH2 0x2C75 PUSH10 0x6E743235362076616C69 PUSH5 0x556E74696C MSTORE PUSH6 0x6C6179446174 PUSH2 0x2875 PUSH10 0x6E743235362067617350 PUSH19 0x6963652C75696E743235362070637452656C61 PUSH26 0x4665652C75696E74323536206261736552656C61794665652C61 PUSH5 0x6472657373 KECCAK256 PUSH19 0x656C6179576F726B65722C6164647265737320 PUSH17 0x61796D61737465722C6164647265737320 PUSH7 0x6F727761726465 PUSH19 0x2C6279746573207061796D6173746572446174 PUSH2 0x2C75 PUSH10 0x6E7432353620636C6965 PUSH15 0x74496429A264697066735822122007 0x5D 0xDB PUSH15 0xC85B7506DA03C3F49A8715C5EC1FE7 0xA9 0xFB SWAP3 SELFBALANCE PUSH4 0xA076072E SWAP9 DUP14 MOD GAS PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "305:5397:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:6651:17",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "80:53:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "97:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "120:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "102:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "102:24:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "90:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "90:37:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "90:37:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack_library",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "68:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "75:3:17",
                            "type": ""
                          }
                        ],
                        "src": "7:126:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "237:278:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "247:52:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "293:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "261:31:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "261:38:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "251:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "308:85:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "381:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "386:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack_library",
                                  "nodeType": "YulIdentifier",
                                  "src": "315:65:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "315:78:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "308:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "428:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "435:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "424:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "424:16:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "442:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "447:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "402:21:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "402:52:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "402:52:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "463:46:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "474:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "501:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "479:21:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "479:29:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "470:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "470:39:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "463:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack_library",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "218:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "225:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "233:3:17",
                            "type": ""
                          }
                        ],
                        "src": "139:376:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "629:265:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "639:52:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "685:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "653:31:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "653:38:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "643:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "700:95:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "783:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "788:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "707:75:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "707:88:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "700:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "830:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "837:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "826:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "826:16:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "844:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "849:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "804:21:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "804:52:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "804:52:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "865:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "876:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "881:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "872:16:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "865:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "610:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "617:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "625:3:17",
                            "type": ""
                          }
                        ],
                        "src": "521:373:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1000:280:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1010:53:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1057:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1024:32:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1024:39:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1014:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1072:86:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1146:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1151:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library",
                                  "nodeType": "YulIdentifier",
                                  "src": "1079:66:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1079:79:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1072:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1193:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1200:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1189:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1189:16:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1207:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1212:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1167:21:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1167:52:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1167:52:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1228:46:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1239:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1266:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "1244:21:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1244:29:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1235:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1235:39:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1228:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "981:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "988:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "996:3:17",
                            "type": ""
                          }
                        ],
                        "src": "900:380:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1396:267:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1406:53:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1453:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1420:32:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1420:39:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1410:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1468:96:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1552:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1557:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1475:76:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1475:89:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1468:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1599:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1606:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1595:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1595:16:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1613:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1618:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1573:21:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1573:52:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1573:52:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1634:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1645:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1650:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1641:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1641:16:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1634:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1377:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1384:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1392:3:17",
                            "type": ""
                          }
                        ],
                        "src": "1286:377:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1833:169:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1843:91:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1927:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1932:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1850:76:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1850:84:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1843:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "1955:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1960:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1951:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1951:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1964:3:17",
                                    "type": "",
                                    "value": ","
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1944:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1944:24:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1944:24:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1978:18:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1989:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1994:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1985:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1985:11:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1978:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1821:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1829:3:17",
                            "type": ""
                          }
                        ],
                        "src": "1669:333:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2172:178:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2182:92:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2266:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2271:2:17",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2189:76:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2189:85:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2182:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2291:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2296:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2287:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2287:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2300:22:17",
                                    "type": "",
                                    "value": "RelayData relayData)"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2280:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2280:43:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2280:43:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2329:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2340:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2345:2:17",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2336:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2336:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2329:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2160:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2168:3:17",
                            "type": ""
                          }
                        ],
                        "src": "2008:342:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2516:161:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2522:91:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2606:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2611:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2529:76:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2529:84:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2522:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2630:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2635:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2626:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2626:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2639:3:17",
                                    "type": "",
                                    "value": "("
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2619:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2619:24:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2619:24:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2653:18:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2664:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2669:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2660:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2660:11:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2653:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2504:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2512:3:17",
                            "type": ""
                          }
                        ],
                        "src": "2352:325:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3117:693:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3128:102:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3217:6:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3226:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3135:81:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3135:95:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3128:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3240:155:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3391:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3247:142:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3247:148:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3240:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3405:102:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3494:6:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3503:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3412:81:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3412:95:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3405:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3517:155:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3668:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3524:142:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3524:148:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3517:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3682:102:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3771:6:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3780:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3689:81:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3689:95:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3682:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3794:10:17",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3801:3:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3794:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3080:3:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3086:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3094:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3102:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3113:3:17",
                            "type": ""
                          }
                        ],
                        "src": "2683:1127:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4051:302:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4062:155:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4213:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4069:142:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4069:148:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4062:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4227:100:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4314:6:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4323:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4234:79:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4234:93:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4227:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4337:10:17",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4344:3:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4337:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f_t_bytes_memory_ptr__to_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4030:3:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4036:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4047:3:17",
                            "type": ""
                          }
                        ],
                        "src": "3816:537:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4465:132:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4475:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4487:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4498:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4483:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4483:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4475:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4563:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4576:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4587:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4572:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4572:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack_library",
                                  "nodeType": "YulIdentifier",
                                  "src": "4511:51:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4511:79:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4511:79:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4437:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4449:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4460:4:17",
                            "type": ""
                          }
                        ],
                        "src": "4359:238:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4727:201:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4737:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4749:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4760:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4745:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4745:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4737:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4784:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4795:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4780:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4780:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "4803:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4809:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4799:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4799:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4773:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4773:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4773:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4829:92:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4907:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "4916:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack_library",
                                  "nodeType": "YulIdentifier",
                                  "src": "4837:69:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4837:84:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4829:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4699:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4711:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4722:4:17",
                            "type": ""
                          }
                        ],
                        "src": "4603:325:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5060:203:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5070:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5082:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5093:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5078:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5078:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5070:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5117:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5128:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5113:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5113:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "5136:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5142:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5132:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5132:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5106:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5106:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5106:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5162:94:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5242:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "5251:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library",
                                  "nodeType": "YulIdentifier",
                                  "src": "5170:71:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5170:86:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5162:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5032:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5044:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5055:4:17",
                            "type": ""
                          }
                        ],
                        "src": "4934:329:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5327:40:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5338:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5354:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5348:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5348:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5338:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5310:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5320:6:17",
                            "type": ""
                          }
                        ],
                        "src": "5269:98:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5432:40:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5443:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5459:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5453:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5453:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5443:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5415:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5425:6:17",
                            "type": ""
                          }
                        ],
                        "src": "5373:99:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5581:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5598:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5603:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5591:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5591:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5591:19:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5619:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5638:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5643:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5634:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5634:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5619:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack_library",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5553:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5558:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "5569:11:17",
                            "type": ""
                          }
                        ],
                        "src": "5478:176:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5773:34:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5783:18:17",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5798:3:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5783:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5745:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5750:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "5761:11:17",
                            "type": ""
                          }
                        ],
                        "src": "5660:147:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5917:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5934:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5939:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5927:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5927:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5927:19:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5955:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5974:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5979:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5970:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5970:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5955:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5889:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5894:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "5905:11:17",
                            "type": ""
                          }
                        ],
                        "src": "5813:177:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6110:34:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6120:18:17",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6135:3:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6120:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6082:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "6087:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "6098:11:17",
                            "type": ""
                          }
                        ],
                        "src": "5996:148:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6195:32:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6205:16:17",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6216:5:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6205:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6177:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6187:7:17",
                            "type": ""
                          }
                        ],
                        "src": "6150:77:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6282:258:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6292:10:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6301:1:17",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "6296:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6361:63:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "6386:3:17"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "6391:1:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "6382:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6382:11:17"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6405:3:17"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6410:1:17"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "6401:3:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "6401:11:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "6395:5:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6395:18:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6375:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6375:39:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6375:39:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "6322:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6325:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6319:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6319:13:17"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "6333:19:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6335:15:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6344:1:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6347:2:17",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6340:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6340:10:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "6335:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "6315:3:17",
                                "statements": []
                              },
                              "src": "6311:113:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6458:76:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "6508:3:17"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "6513:6:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "6504:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6504:16:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6522:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6497:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6497:27:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6497:27:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "6439:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6442:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6436:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6436:13:17"
                              },
                              "nodeType": "YulIf",
                              "src": "6433:2:17"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "6264:3:17",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "6269:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "6274:6:17",
                            "type": ""
                          }
                        ],
                        "src": "6233:307:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6594:54:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6604:38:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6622:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6629:2:17",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6618:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6618:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6638:2:17",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "6634:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6634:7:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6614:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6614:28:17"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "6604:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6577:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "6587:6:17",
                            "type": ""
                          }
                        ],
                        "src": "6546:102:17"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack_library(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack_library(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n\n        mstore(add(pos, 0), \",\")\n\n        end := add(pos, 1)\n    }\n\n    function abi_encode_t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 20)\n\n    mstore(add(pos, 0), \"RelayData relayData)\")\n\n    end := add(pos, 20)\n}\n\nfunction abi_encode_t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n    pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n\n    mstore(add(pos, 0), \"(\")\n\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f_t_bytes_memory_ptr__to_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack_library(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack_library(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack_library(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack_library(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
                  "id": 17,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c8063abf0d3f411610065578063abf0d3f41461010f578063c46cf83f1461012d578063c49f91d31461014b578063cc0c62b21461016957610092565b8063066a310c146100975780636225e61b146100b5578063931cd38f146100d3578063987673f7146100f1575b600080fd5b61009f610187565b6040516100ac9190610620565b60405180910390f35b6100bd6101a3565b6040516100ca91906105fe565b60405180910390f35b6100db61024e565b6040516100e89190610620565b60405180910390f35b6100f9610289565b6040516101069190610620565b60405180910390f35b6101176102c2565b60405161012491906105e3565b60405180910390f35b610135610374565b60405161014291906105fe565b60405180910390f35b610153610390565b60405161016091906105e3565b60405180910390f35b6101716103b4565b60405161017e91906105e3565b60405180910390f35b6040518060800160405280605d81526020016106df605d913981565b6040518060400160405280600c81526020017f52656c61795265717565737400000000000000000000000000000000000000008152506040518060800160405280605d81526020016106df605d91396040518060e0016040528060a1815260200161073c60a1913960405160200161021b91906105c1565b60405160208183030381529060405260405160200161023c9392919061057a565b60405160208183030381529060405281565b6040518060e0016040528060a1815260200161073c60a1913960405160200161027791906105c1565b60405160208183030381529060405281565b6040518060400160405280600c81526020017f52656c617952657175657374000000000000000000000000000000000000000081525081565b6040518060400160405280600c81526020017f52656c61795265717565737400000000000000000000000000000000000000008152506040518060800160405280605d81526020016106df605d91396040518060e0016040528060a1815260200161073c60a1913960405160200161033a91906105c1565b60405160208183030381529060405260405160200161035b9392919061057a565b6040516020818303038152906040528051906020012081565b6040518060e0016040528060a1815260200161073c60a1913981565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6040518060e0016040528060a1815260200161073c60a191398051906020012081565b6103e081610690565b82525050565b60006103f182610642565b6103fb8185610658565b935061040b81856020860161069a565b610414816106cd565b840191505092915050565b600061042a82610642565b6104348185610669565b935061044481856020860161069a565b80840191505092915050565b600061045b8261064d565b6104658185610674565b935061047581856020860161069a565b61047e816106cd565b840191505092915050565b60006104948261064d565b61049e8185610685565b93506104ae81856020860161069a565b80840191505092915050565b60006104c7600183610685565b91507f2c000000000000000000000000000000000000000000000000000000000000006000830152600182019050919050565b6000610507601483610685565b91507f52656c6179446174612072656c617944617461290000000000000000000000006000830152601482019050919050565b6000610547600183610685565b91507f28000000000000000000000000000000000000000000000000000000000000006000830152600182019050919050565b60006105868286610489565b91506105918261053a565b915061059d8285610489565b91506105a8826104ba565b91506105b48284610489565b9150819050949350505050565b60006105cc826104fa565b91506105d8828461041f565b915081905092915050565b60006020820190506105f860008301846103d7565b92915050565b6000602082019050818103600083015261061881846103e6565b905092915050565b6000602082019050818103600083015261063a8184610450565b905092915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b60005b838110156106b857808201518184015260208101905061069d565b838111156106c7576000848401525b50505050565b6000601f19601f830116905091905056fe616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c627974657320646174612c75696e743235362076616c6964556e74696c52656c6179446174612875696e743235362067617350726963652c75696e743235362070637452656c61794665652c75696e74323536206261736552656c61794665652c616464726573732072656c6179576f726b65722c61646472657373207061796d61737465722c6164647265737320666f727761726465722c6279746573207061796d6173746572446174612c75696e7432353620636c69656e74496429a2646970667358221220075ddb6ec85b7506da03c3f49a8715c5ec1fe7a9fb924763a076072e988d065a64736f6c63430007060033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xABF0D3F4 GT PUSH2 0x65 JUMPI DUP1 PUSH4 0xABF0D3F4 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xC46CF83F EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xC49F91D3 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xCC0C62B2 EQ PUSH2 0x169 JUMPI PUSH2 0x92 JUMP JUMPDEST DUP1 PUSH4 0x66A310C EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x6225E61B EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x931CD38F EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x987673F7 EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6DF PUSH1 0x5D SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52656C6179526571756573740000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6DF PUSH1 0x5D SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x73C PUSH1 0xA1 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x73C PUSH1 0xA1 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52656C6179526571756573740000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52656C6179526571756573740000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6DF PUSH1 0x5D SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x73C PUSH1 0xA1 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x35B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x73C PUSH1 0xA1 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x73C PUSH1 0xA1 SWAP2 CODECOPY DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0x3E0 DUP2 PUSH2 0x690 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F1 DUP3 PUSH2 0x642 JUMP JUMPDEST PUSH2 0x3FB DUP2 DUP6 PUSH2 0x658 JUMP JUMPDEST SWAP4 POP PUSH2 0x40B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x6CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42A DUP3 PUSH2 0x642 JUMP JUMPDEST PUSH2 0x434 DUP2 DUP6 PUSH2 0x669 JUMP JUMPDEST SWAP4 POP PUSH2 0x444 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B DUP3 PUSH2 0x64D JUMP JUMPDEST PUSH2 0x465 DUP2 DUP6 PUSH2 0x674 JUMP JUMPDEST SWAP4 POP PUSH2 0x475 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x47E DUP2 PUSH2 0x6CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 DUP3 PUSH2 0x64D JUMP JUMPDEST PUSH2 0x49E DUP2 DUP6 PUSH2 0x685 JUMP JUMPDEST SWAP4 POP PUSH2 0x4AE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C7 PUSH1 0x1 DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP2 POP PUSH32 0x2C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x507 PUSH1 0x14 DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP2 POP PUSH32 0x52656C6179446174612072656C61794461746129000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x14 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x547 PUSH1 0x1 DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP2 POP PUSH32 0x2800000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x586 DUP3 DUP7 PUSH2 0x489 JUMP JUMPDEST SWAP2 POP PUSH2 0x591 DUP3 PUSH2 0x53A JUMP JUMPDEST SWAP2 POP PUSH2 0x59D DUP3 DUP6 PUSH2 0x489 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A8 DUP3 PUSH2 0x4BA JUMP JUMPDEST SWAP2 POP PUSH2 0x5B4 DUP3 DUP5 PUSH2 0x489 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CC DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP PUSH2 0x5D8 DUP3 DUP5 PUSH2 0x41F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x618 DUP2 DUP5 PUSH2 0x3E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x63A DUP2 DUP5 PUSH2 0x450 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6B8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x69D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH2 0x6464 PUSH19 0x6573732066726F6D2C6164647265737320746F 0x2C PUSH22 0x696E743235362076616C75652C75696E743235362067 PUSH2 0x732C PUSH22 0x696E74323536206E6F6E63652C627974657320646174 PUSH2 0x2C75 PUSH10 0x6E743235362076616C69 PUSH5 0x556E74696C MSTORE PUSH6 0x6C6179446174 PUSH2 0x2875 PUSH10 0x6E743235362067617350 PUSH19 0x6963652C75696E743235362070637452656C61 PUSH26 0x4665652C75696E74323536206261736552656C61794665652C61 PUSH5 0x6472657373 KECCAK256 PUSH19 0x656C6179576F726B65722C6164647265737320 PUSH17 0x61796D61737465722C6164647265737320 PUSH7 0x6F727761726465 PUSH19 0x2C6279746573207061796D6173746572446174 PUSH2 0x2C75 PUSH10 0x6E7432353620636C6965 PUSH15 0x74496429A264697066735822122007 0x5D 0xDB PUSH15 0xC85B7506DA03C3F49A8715C5EC1FE7 0xA9 0xFB SWAP3 SELFBALANCE PUSH4 0xA076072E SWAP9 DUP14 MOD GAS PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "305:5397:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;587:135;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1119:133;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1002:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;938:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1335:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;729:202;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1559:157;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1259:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;587:135;;;;;;;;;;;;;;;;;;;:::o;1119:133::-;1188:18;;;;;;;;;;;;;;;;;1211:14;;;;;;;;;;;;;;;;;1096;;;;;;;;;;;;;;;;;1055:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;1162:90;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1119:133;:::o;1002:110::-;1096:14;;;;;;;;;;;;;;;;;1055:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;1002:110;:::o;938:58::-;;;;;;;;;;;;;;;;;;;:::o;1335:78::-;1188:18;;;;;;;;;;;;;;;;;1211:14;;;;;;;;;;;;;;;;;1096;;;;;;;;;;;;;;;;;1055:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;1162:90;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1384:29;;;;;;1335:78;:::o;729:202::-;;;;;;;;;;;;;;;;;;;:::o;1559:157::-;1607:109;1559:157;:::o;1259:70::-;1314:14;;;;;;;;;;;;;;;;;1304:25;;;;;;1259:70;:::o;7:126:17:-;102:24;120:5;102:24;:::i;:::-;97:3;90:37;80:53;;:::o;139:376::-;;261:38;293:5;261:38;:::i;:::-;315:78;386:6;381:3;315:78;:::i;:::-;308:85;;402:52;447:6;442:3;435:4;428:5;424:16;402:52;:::i;:::-;479:29;501:6;479:29;:::i;:::-;474:3;470:39;463:46;;237:278;;;;;:::o;521:373::-;;653:38;685:5;653:38;:::i;:::-;707:88;788:6;783:3;707:88;:::i;:::-;700:95;;804:52;849:6;844:3;837:4;830:5;826:16;804:52;:::i;:::-;881:6;876:3;872:16;865:23;;629:265;;;;;:::o;900:380::-;;1024:39;1057:5;1024:39;:::i;:::-;1079:79;1151:6;1146:3;1079:79;:::i;:::-;1072:86;;1167:52;1212:6;1207:3;1200:4;1193:5;1189:16;1167:52;:::i;:::-;1244:29;1266:6;1244:29;:::i;:::-;1239:3;1235:39;1228:46;;1000:280;;;;;:::o;1286:377::-;;1420:39;1453:5;1420:39;:::i;:::-;1475:89;1557:6;1552:3;1475:89;:::i;:::-;1468:96;;1573:52;1618:6;1613:3;1606:4;1599:5;1595:16;1573:52;:::i;:::-;1650:6;1645:3;1641:16;1634:23;;1396:267;;;;;:::o;1669:333::-;;1850:84;1932:1;1927:3;1850:84;:::i;:::-;1843:91;;1964:3;1960:1;1955:3;1951:11;1944:24;1994:1;1989:3;1985:11;1978:18;;1833:169;;;:::o;2008:342::-;;2189:85;2271:2;2266:3;2189:85;:::i;:::-;2182:92;;2300:22;2296:1;2291:3;2287:11;2280:43;2345:2;2340:3;2336:12;2329:19;;2172:178;;;:::o;2352:325::-;;2529:84;2611:1;2606:3;2529:84;:::i;:::-;2522:91;;2639:3;2635:1;2630:3;2626:11;2619:24;2669:1;2664:3;2660:11;2653:18;;2516:161;;;:::o;2683:1127::-;;3135:95;3226:3;3217:6;3135:95;:::i;:::-;3128:102;;3247:148;3391:3;3247:148;:::i;:::-;3240:155;;3412:95;3503:3;3494:6;3412:95;:::i;:::-;3405:102;;3524:148;3668:3;3524:148;:::i;:::-;3517:155;;3689:95;3780:3;3771:6;3689:95;:::i;:::-;3682:102;;3801:3;3794:10;;3117:693;;;;;;:::o;3816:537::-;;4069:148;4213:3;4069:148;:::i;:::-;4062:155;;4234:93;4323:3;4314:6;4234:93;:::i;:::-;4227:100;;4344:3;4337:10;;4051:302;;;;:::o;4359:238::-;;4498:2;4487:9;4483:18;4475:26;;4511:79;4587:1;4576:9;4572:17;4563:6;4511:79;:::i;:::-;4465:132;;;;:::o;4603:325::-;;4760:2;4749:9;4745:18;4737:26;;4809:9;4803:4;4799:20;4795:1;4784:9;4780:17;4773:47;4837:84;4916:4;4907:6;4837:84;:::i;:::-;4829:92;;4727:201;;;;:::o;4934:329::-;;5093:2;5082:9;5078:18;5070:26;;5142:9;5136:4;5132:20;5128:1;5117:9;5113:17;5106:47;5170:86;5251:4;5242:6;5170:86;:::i;:::-;5162:94;;5060:203;;;;:::o;5269:98::-;;5354:5;5348:12;5338:22;;5327:40;;;:::o;5373:99::-;;5459:5;5453:12;5443:22;;5432:40;;;:::o;5478:176::-;;5603:6;5598:3;5591:19;5643:4;5638:3;5634:14;5619:29;;5581:73;;;;:::o;5660:147::-;;5798:3;5783:18;;5773:34;;;;:::o;5813:177::-;;5939:6;5934:3;5927:19;5979:4;5974:3;5970:14;5955:29;;5917:73;;;;:::o;5996:148::-;;6135:3;6120:18;;6110:34;;;;:::o;6150:77::-;;6216:5;6205:16;;6195:32;;;:::o;6233:307::-;6301:1;6311:113;6325:6;6322:1;6319:13;6311:113;;;6410:1;6405:3;6401:11;6395:18;6391:1;6386:3;6382:11;6375:39;6347:2;6344:1;6340:10;6335:15;;6311:113;;;6442:6;6439:1;6436:13;6433:2;;;6522:1;6513:6;6508:3;6504:16;6497:27;6433:2;6282:258;;;;:::o;6546:102::-;;6638:2;6634:7;6629:2;6622:5;6618:14;6614:28;6604:38;;6594:54;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "413200",
                "executionCost": "474",
                "totalCost": "413674"
              },
              "external": {
                "EIP712DOMAIN_TYPEHASH()": "357",
                "GENERIC_PARAMS()": "infinite",
                "RELAYDATA_TYPE()": "infinite",
                "RELAYDATA_TYPEHASH()": "infinite",
                "RELAY_REQUEST_NAME()": "infinite",
                "RELAY_REQUEST_SUFFIX()": "infinite",
                "RELAY_REQUEST_TYPE()": "infinite",
                "RELAY_REQUEST_TYPEHASH()": "infinite"
              },
              "internal": {
                "domainSeparator(address)": "infinite",
                "execute(struct GsnTypes.RelayRequest calldata,bytes calldata)": "infinite",
                "getChainID()": "infinite",
                "hashDomain(struct GsnEip712Library.EIP712Domain memory)": "infinite",
                "hashRelayData(struct GsnTypes.RelayData calldata)": "infinite",
                "splitRequest(struct GsnTypes.RelayRequest calldata)": "infinite",
                "truncateInPlace(bytes memory)": "infinite",
                "verify(struct GsnTypes.RelayRequest calldata,bytes calldata)": "infinite",
                "verifyForwarderTrusted(struct GsnTypes.RelayRequest calldata)": "infinite",
                "verifySignature(struct GsnTypes.RelayRequest calldata,bytes calldata)": "infinite"
              }
            },
            "methodIdentifiers": {
              "EIP712DOMAIN_TYPEHASH()": "c49f91d3",
              "GENERIC_PARAMS()": "066a310c",
              "RELAYDATA_TYPE()": "c46cf83f",
              "RELAYDATA_TYPEHASH()": "cc0c62b2",
              "RELAY_REQUEST_NAME()": "987673f7",
              "RELAY_REQUEST_SUFFIX()": "931cd38f",
              "RELAY_REQUEST_TYPE()": "6225e61b",
              "RELAY_REQUEST_TYPEHASH()": "abf0d3f4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EIP712DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GENERIC_PARAMS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAYDATA_TYPE\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAYDATA_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_REQUEST_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_REQUEST_SUFFIX\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_REQUEST_TYPE\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_REQUEST_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Bridge Library to map GSN RelayRequest into a call of a Forwarder\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/utils/GsnEip712Library.sol\":\"GsnEip712Library\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\ninterface IForwarder {\\n\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntil;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * verify the transaction would execute.\\n     * validate the signature and the nonce of the request.\\n     * revert if either signature or nonce are incorrect.\\n     * also revert if domainSeparator or requestTypeHash are not registered.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * execute a transaction\\n     * @param forwardRequest - all transaction parameters\\n     * @param domainSeparator - domain used when signing this request\\n     * @param requestTypeHash - request type used when signing this request.\\n     * @param suffixData - the extension data used when signing this request.\\n     * @param signature - signature to validate.\\n     *\\n     * the transaction is verified, and then executed.\\n     * the success and ret of \\\"call\\\" are returned.\\n     * This method would revert only verification errors. target errors\\n     * are reported using the returned \\\"success\\\" and ret string\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * Register a new Request typehash.\\n     * @param typeName - the name of the request type.\\n     * @param typeSuffix - any extra data after the generic params.\\n     *  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * Register a new domain separator.\\n     * The domain separator must have the following fields: name,version,chainId, verifyingContract.\\n     * the chainId is the current network's chainId, and the verifyingContract is this forwarder.\\n     * This method is given the domain name and version to create and register the domain separator value.\\n     * @param name the domain's display name\\n     * @param version the domain/protocol version\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\n/**\\n * a contract must implement this interface in order to support relayed transaction.\\n * It is better to inherit the BaseRelayRecipient as its implementation.\\n */\\nabstract contract IRelayRecipient {\\n\\n    /**\\n     * return if the forwarder is trusted to forward relayed transactions to us.\\n     * the forwarder is required to verify the sender's signature, and verify\\n     * the call is not a replay.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * return the sender of this call.\\n     * if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\\n     * of the msg.data.\\n     * otherwise, return `msg.sender`\\n     * should be used in the contract anywhere instead of msg.sender\\n     */\\n    function _msgSender() internal virtual view returns (address payable);\\n\\n    /**\\n     * return the msg.data of this call.\\n     * if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\\n     * of the msg.data - so this method will strip those 20 bytes off.\\n     * otherwise (if the call was made directly and not through the forwarder), return `msg.data`\\n     * should be used in the contract instead of msg.data, where this difference matters.\\n     */\\n    function _msgData() internal virtual view returns (bytes memory);\\n\\n    function versionRecipient() external virtual view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6243d3a925653ed0bde57e9fae7fb87f12c58a2376b27ae23b53502322532e00\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnEip712Library.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"../interfaces/IRelayRecipient.sol\\\";\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\nimport \\\"./GsnUtils.sol\\\";\\n\\n/**\\n * Bridge Library to map GSN RelayRequest into a call of a Forwarder\\n */\\nlibrary GsnEip712Library {\\n    // maximum length of return value/revert reason for 'execute' method. Will truncate result if exceeded.\\n    uint256 private constant MAX_RETURN_SIZE = 1024;\\n\\n    //copied from Forwarder (can't reference string constants even from another library)\\n    string public constant GENERIC_PARAMS = \\\"address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntil\\\";\\n\\n    bytes public constant RELAYDATA_TYPE = \\\"RelayData(uint256 gasPrice,uint256 pctRelayFee,uint256 baseRelayFee,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)\\\";\\n\\n    string public constant RELAY_REQUEST_NAME = \\\"RelayRequest\\\";\\n    string public constant RELAY_REQUEST_SUFFIX = string(abi.encodePacked(\\\"RelayData relayData)\\\", RELAYDATA_TYPE));\\n\\n    bytes public constant RELAY_REQUEST_TYPE = abi.encodePacked(\\n        RELAY_REQUEST_NAME,\\\"(\\\",GENERIC_PARAMS,\\\",\\\", RELAY_REQUEST_SUFFIX);\\n\\n    bytes32 public constant RELAYDATA_TYPEHASH = keccak256(RELAYDATA_TYPE);\\n    bytes32 public constant RELAY_REQUEST_TYPEHASH = keccak256(RELAY_REQUEST_TYPE);\\n\\n\\n    struct EIP712Domain {\\n        string name;\\n        string version;\\n        uint256 chainId;\\n        address verifyingContract;\\n    }\\n\\n    bytes32 public constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n    );\\n\\n    function splitRequest(\\n        GsnTypes.RelayRequest calldata req\\n    )\\n    internal\\n    pure\\n    returns (\\n        bytes memory suffixData\\n    ) {\\n        suffixData = abi.encode(\\n            hashRelayData(req.relayData));\\n    }\\n\\n    //verify that the recipient trusts the given forwarder\\n    // MUST be called by paymaster\\n    function verifyForwarderTrusted(GsnTypes.RelayRequest calldata relayRequest) internal view {\\n        (bool success, bytes memory ret) = relayRequest.request.to.staticcall(\\n            abi.encodeWithSelector(\\n                IRelayRecipient.isTrustedForwarder.selector, relayRequest.relayData.forwarder\\n            )\\n        );\\n        require(success, \\\"isTrustedForwarder: reverted\\\");\\n        require(ret.length == 32, \\\"isTrustedForwarder: bad response\\\");\\n        require(abi.decode(ret, (bool)), \\\"invalid forwarder for recipient\\\");\\n    }\\n\\n    function verifySignature(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal view {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(relayRequest.relayData.forwarder);\\n        IForwarder forwarder = IForwarder(payable(relayRequest.relayData.forwarder));\\n        forwarder.verify(relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature);\\n    }\\n\\n    function verify(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal view {\\n        verifyForwarderTrusted(relayRequest);\\n        verifySignature(relayRequest, signature);\\n    }\\n\\n    function execute(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal returns (bool forwarderSuccess, bool callSuccess, bytes memory ret) {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(relayRequest.relayData.forwarder);\\n        /* solhint-disable-next-line avoid-low-level-calls */\\n        (forwarderSuccess, ret) = relayRequest.relayData.forwarder.call(\\n            abi.encodeWithSelector(IForwarder.execute.selector,\\n            relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature\\n        ));\\n        if ( forwarderSuccess ) {\\n\\n          //decode return value of execute:\\n          (callSuccess, ret) = abi.decode(ret, (bool, bytes));\\n        }\\n        truncateInPlace(ret);\\n    }\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data) internal pure {\\n        MinLibBytes.truncateInPlace(data, MAX_RETURN_SIZE);\\n    }\\n\\n    function domainSeparator(address forwarder) internal pure returns (bytes32) {\\n        return hashDomain(EIP712Domain({\\n            name : \\\"GSN Relayed Transaction\\\",\\n            version : \\\"2\\\",\\n            chainId : getChainID(),\\n            verifyingContract : forwarder\\n            }));\\n    }\\n\\n    function getChainID() internal pure returns (uint256 id) {\\n        /* solhint-disable no-inline-assembly */\\n        assembly {\\n            id := chainid()\\n        }\\n    }\\n\\n    function hashDomain(EIP712Domain memory req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(bytes(req.name)),\\n                keccak256(bytes(req.version)),\\n                req.chainId,\\n                req.verifyingContract));\\n    }\\n\\n    function hashRelayData(GsnTypes.RelayData calldata req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                RELAYDATA_TYPEHASH,\\n                req.gasPrice,\\n                req.pctRelayFee,\\n                req.baseRelayFee,\\n                req.relayWorker,\\n                req.paymaster,\\n                req.forwarder,\\n                keccak256(req.paymasterData),\\n                req.clientId\\n            ));\\n    }\\n}\\n\",\"keccak256\":\"0xeabda17c0116022fba48a5be922c093fd721fc21e400a8158a2d2c9ae1c0ac4f\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice gasPrice, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 gasPrice;\\n        uint256 pctRelayFee;\\n        uint256 baseRelayFee;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x813b12755ca7e69d3f269b5ab801d36d208274c26ea2764a416c3033e61bc130\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnUtils.sol\":{\"content\":\"/* solhint-disable no-inline-assembly */\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\nimport \\\"../utils/MinLibBytes.sol\\\";\\n\\nlibrary GsnUtils {\\n\\n    /**\\n     * extract method sig from encoded function call\\n     */\\n    function getMethodSig(bytes memory msgData) internal pure returns (bytes4) {\\n        return MinLibBytes.readBytes4(msgData, 0);\\n    }\\n\\n    /**\\n     * extract parameter from encoded-function block.\\n     * see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\\n     * the return value should be casted to the right type (uintXXX/bytesXXX/address/bool/enum)\\n     */\\n    function getParam(bytes memory msgData, uint index) internal pure returns (uint) {\\n        return MinLibBytes.readUint256(msgData, 4 + index * 32);\\n    }\\n\\n    //re-throw revert with the same revert data.\\n    function revertWithData(bytes memory data) internal pure {\\n        assembly {\\n            revert(add(data,32), mload(data))\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0xeb0c5992c7c2648e414a14605a72e773e09c554036e9c9cd9aca34e292b195d7\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// minimal bytes manipulation required by GSN\\n// a minimal subset from 0x/LibBytes\\n/* solhint-disable no-inline-assembly */\\npragma solidity >=0.7.6;\\n\\nlibrary MinLibBytes {\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\\n        if (data.length > maxlen) {\\n            assembly { mstore(data, maxlen) }\\n        }\\n    }\\n\\n    /// @dev Reads an address from a position in a byte array.\\n    /// @param b Byte array containing an address.\\n    /// @param index Index in byte array of address.\\n    /// @return result address from byte array.\\n    function readAddress(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (address result)\\n    {\\n        require (b.length >= index + 20, \\\"readAddress: data too short\\\");\\n\\n        // Add offset to index:\\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\\n        index += 20;\\n\\n        // Read address from array memory\\n        assembly {\\n            // 1. Add index to address of bytes array\\n            // 2. Load 32-byte word from memory\\n            // 3. Apply 20-byte mask to obtain address\\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n        return result;\\n    }\\n\\n    function readBytes32(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes32 result)\\n    {\\n        require(b.length >= index + 32, \\\"readBytes32: data too short\\\" );\\n\\n        // Read the bytes32 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n        }\\n        return result;\\n    }\\n\\n    /// @dev Reads a uint256 value from a position in a byte array.\\n    /// @param b Byte array containing a uint256 value.\\n    /// @param index Index in byte array of uint256 value.\\n    /// @return result uint256 value from byte array.\\n    function readUint256(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        result = uint256(readBytes32(b, index));\\n        return result;\\n    }\\n\\n    function readBytes4(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes4 result)\\n    {\\n        require(b.length >= index + 4, \\\"readBytes4: data too short\\\");\\n\\n        // Read the bytes4 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n            // Solidity does not require us to clean the trailing bytes.\\n            // We do it anyway\\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x73c837126ff5369c63b7a71828b6d5c9e5bc8a6477f8d4fc97f8e28142380cd9\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "notice": "Bridge Library to map GSN RelayRequest into a call of a Forwarder",
            "version": 1
          }
        }
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol": {
        "GsnTypes": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/utils/GsnTypes.sol\":\"GsnTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\ninterface IForwarder {\\n\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntil;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * verify the transaction would execute.\\n     * validate the signature and the nonce of the request.\\n     * revert if either signature or nonce are incorrect.\\n     * also revert if domainSeparator or requestTypeHash are not registered.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * execute a transaction\\n     * @param forwardRequest - all transaction parameters\\n     * @param domainSeparator - domain used when signing this request\\n     * @param requestTypeHash - request type used when signing this request.\\n     * @param suffixData - the extension data used when signing this request.\\n     * @param signature - signature to validate.\\n     *\\n     * the transaction is verified, and then executed.\\n     * the success and ret of \\\"call\\\" are returned.\\n     * This method would revert only verification errors. target errors\\n     * are reported using the returned \\\"success\\\" and ret string\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * Register a new Request typehash.\\n     * @param typeName - the name of the request type.\\n     * @param typeSuffix - any extra data after the generic params.\\n     *  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * Register a new domain separator.\\n     * The domain separator must have the following fields: name,version,chainId, verifyingContract.\\n     * the chainId is the current network's chainId, and the verifyingContract is this forwarder.\\n     * This method is given the domain name and version to create and register the domain separator value.\\n     * @param name the domain's display name\\n     * @param version the domain/protocol version\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice gasPrice, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 gasPrice;\\n        uint256 pctRelayFee;\\n        uint256 baseRelayFee;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x813b12755ca7e69d3f269b5ab801d36d208274c26ea2764a416c3033e61bc130\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol": {
        "GsnUtils": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012bd526358220f2f4aaf1c4528c91428af12f623db12677b09081bf3f91c5c5264736f6c63430007060033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xBD MSTORE PUSH4 0x58220F2F 0x4A 0xAF SHR GASLIMIT 0x28 0xC9 EQ 0x28 0xAF SLT 0xF6 0x23 0xDB SLT PUSH8 0x7B09081BF3F91C5C MSTORE PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "144:854:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012bd526358220f2f4aaf1c4528c91428af12f623db12677b09081bf3f91c5c5264736f6c63430007060033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xBD MSTORE PUSH4 0x58220F2F 0x4A 0xAF SHR GASLIMIT 0x28 0xC9 EQ 0x28 0xAF SLT 0xF6 0x23 0xDB SLT PUSH8 0x7B09081BF3F91C5C MSTORE PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "144:854:8:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "97",
                "totalCost": "17297"
              },
              "internal": {
                "getMethodSig(bytes memory)": "infinite",
                "getParam(bytes memory,uint256)": "infinite",
                "revertWithData(bytes memory)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/utils/GsnUtils.sol\":\"GsnUtils\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/utils/GsnUtils.sol\":{\"content\":\"/* solhint-disable no-inline-assembly */\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\nimport \\\"../utils/MinLibBytes.sol\\\";\\n\\nlibrary GsnUtils {\\n\\n    /**\\n     * extract method sig from encoded function call\\n     */\\n    function getMethodSig(bytes memory msgData) internal pure returns (bytes4) {\\n        return MinLibBytes.readBytes4(msgData, 0);\\n    }\\n\\n    /**\\n     * extract parameter from encoded-function block.\\n     * see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\\n     * the return value should be casted to the right type (uintXXX/bytesXXX/address/bool/enum)\\n     */\\n    function getParam(bytes memory msgData, uint index) internal pure returns (uint) {\\n        return MinLibBytes.readUint256(msgData, 4 + index * 32);\\n    }\\n\\n    //re-throw revert with the same revert data.\\n    function revertWithData(bytes memory data) internal pure {\\n        assembly {\\n            revert(add(data,32), mload(data))\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0xeb0c5992c7c2648e414a14605a72e773e09c554036e9c9cd9aca34e292b195d7\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// minimal bytes manipulation required by GSN\\n// a minimal subset from 0x/LibBytes\\n/* solhint-disable no-inline-assembly */\\npragma solidity >=0.7.6;\\n\\nlibrary MinLibBytes {\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\\n        if (data.length > maxlen) {\\n            assembly { mstore(data, maxlen) }\\n        }\\n    }\\n\\n    /// @dev Reads an address from a position in a byte array.\\n    /// @param b Byte array containing an address.\\n    /// @param index Index in byte array of address.\\n    /// @return result address from byte array.\\n    function readAddress(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (address result)\\n    {\\n        require (b.length >= index + 20, \\\"readAddress: data too short\\\");\\n\\n        // Add offset to index:\\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\\n        index += 20;\\n\\n        // Read address from array memory\\n        assembly {\\n            // 1. Add index to address of bytes array\\n            // 2. Load 32-byte word from memory\\n            // 3. Apply 20-byte mask to obtain address\\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n        return result;\\n    }\\n\\n    function readBytes32(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes32 result)\\n    {\\n        require(b.length >= index + 32, \\\"readBytes32: data too short\\\" );\\n\\n        // Read the bytes32 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n        }\\n        return result;\\n    }\\n\\n    /// @dev Reads a uint256 value from a position in a byte array.\\n    /// @param b Byte array containing a uint256 value.\\n    /// @param index Index in byte array of uint256 value.\\n    /// @return result uint256 value from byte array.\\n    function readUint256(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        result = uint256(readBytes32(b, index));\\n        return result;\\n    }\\n\\n    function readBytes4(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes4 result)\\n    {\\n        require(b.length >= index + 4, \\\"readBytes4: data too short\\\");\\n\\n        // Read the bytes4 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n            // Solidity does not require us to clean the trailing bytes.\\n            // We do it anyway\\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x73c837126ff5369c63b7a71828b6d5c9e5bc8a6477f8d4fc97f8e28142380cd9\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol": {
        "MinLibBytes": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207e870f98ff86760325ebe81ededb5260a01cb0d64d127df9023f459ba5e56b7a64736f6c63430007060033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x870F98FF86760325EBE81EDEDB5260A01CB0D64D127DF9023F459BA5E56B7A PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "182:2874:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207e870f98ff86760325ebe81ededb5260a01cb0d64d127df9023f459ba5e56b7a64736f6c63430007060033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x870F98FF86760325EBE81EDEDB5260A01CB0D64D127DF9023F459BA5E56B7A PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "182:2874:9:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "97",
                "totalCost": "17297"
              },
              "internal": {
                "readAddress(bytes memory,uint256)": "infinite",
                "readBytes32(bytes memory,uint256)": "infinite",
                "readBytes4(bytes memory,uint256)": "infinite",
                "readUint256(bytes memory,uint256)": "infinite",
                "truncateInPlace(bytes memory,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/utils/MinLibBytes.sol\":\"MinLibBytes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// minimal bytes manipulation required by GSN\\n// a minimal subset from 0x/LibBytes\\n/* solhint-disable no-inline-assembly */\\npragma solidity >=0.7.6;\\n\\nlibrary MinLibBytes {\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\\n        if (data.length > maxlen) {\\n            assembly { mstore(data, maxlen) }\\n        }\\n    }\\n\\n    /// @dev Reads an address from a position in a byte array.\\n    /// @param b Byte array containing an address.\\n    /// @param index Index in byte array of address.\\n    /// @return result address from byte array.\\n    function readAddress(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (address result)\\n    {\\n        require (b.length >= index + 20, \\\"readAddress: data too short\\\");\\n\\n        // Add offset to index:\\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\\n        index += 20;\\n\\n        // Read address from array memory\\n        assembly {\\n            // 1. Add index to address of bytes array\\n            // 2. Load 32-byte word from memory\\n            // 3. Apply 20-byte mask to obtain address\\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n        return result;\\n    }\\n\\n    function readBytes32(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes32 result)\\n    {\\n        require(b.length >= index + 32, \\\"readBytes32: data too short\\\" );\\n\\n        // Read the bytes32 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n        }\\n        return result;\\n    }\\n\\n    /// @dev Reads a uint256 value from a position in a byte array.\\n    /// @param b Byte array containing a uint256 value.\\n    /// @param index Index in byte array of uint256 value.\\n    /// @return result uint256 value from byte array.\\n    function readUint256(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        result = uint256(readBytes32(b, index));\\n        return result;\\n    }\\n\\n    function readBytes4(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes4 result)\\n    {\\n        require(b.length >= index + 4, \\\"readBytes4: data too short\\\");\\n\\n        // Read the bytes4 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n            // Solidity does not require us to clean the trailing bytes.\\n            // We do it anyway\\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x73c837126ff5369c63b7a71828b6d5c9e5bc8a6477f8d4fc97f8e28142380cd9\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
            "kind": "dev",
            "methods": {
              "constructor": {
                "details": "Initializes the contract setting the deployer as the initial owner."
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1367,
                "contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/drafts/IERC20Permit.sol": {
        "IERC20Permit": {
          "abi": [
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
            "kind": "dev",
            "methods": {
              "DOMAIN_SEPARATOR()": {
                "details": "Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}."
              },
              "nonces(address)": {
                "details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
              },
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
                "details": "Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/drafts/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/drafts/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\\n     * given `owner`'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/math/SafeMath.sol": {
        "SafeMath": {
          "abi": [],
          "devdoc": {
            "details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004d1f400257962ef1aaab8119178c66941d9c104b33ad62a7fe3f4e5d23f0a0264736f6c63430007060033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xD1 DELEGATECALL STOP 0x25 PUSH26 0x62EF1AAAB8119178C66941D9C104B33AD62A7FE3F4E5D23F0A02 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "630:6594:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004d1f400257962ef1aaab8119178c66941d9c104b33ad62a7fe3f4e5d23f0a0264736f6c63430007060033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xD1 DELEGATECALL STOP 0x25 PUSH26 0x62EF1AAAB8119178C66941D9C104B33AD62A7FE3F4E5D23F0A02 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "630:6594:12:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "97",
                "totalCost": "17297"
              },
              "internal": {
                "add(uint256,uint256)": "infinite",
                "div(uint256,uint256)": "infinite",
                "div(uint256,uint256,string memory)": "infinite",
                "mod(uint256,uint256)": "infinite",
                "mod(uint256,uint256,string memory)": "infinite",
                "mul(uint256,uint256)": "infinite",
                "sub(uint256,uint256)": "infinite",
                "sub(uint256,uint256,string memory)": "infinite",
                "tryAdd(uint256,uint256)": "infinite",
                "tryDiv(uint256,uint256)": "infinite",
                "tryMod(uint256,uint256)": "infinite",
                "tryMul(uint256,uint256)": "infinite",
                "trySub(uint256,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC20 standard as defined in the EIP.",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/gsn/IUniswap.sol": {
        "IUniswap": {
          "abi": [
            {
              "inputs": [],
              "name": "WETH",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsIn",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsOut",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForETH",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "WETH()": "ad5c4648",
              "getAmountsIn(uint256,address[])": "1f00ca74",
              "getAmountsOut(uint256,address[])": "d06ca61f",
              "swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gsn/IUniswap.sol\":\"IUniswap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/gsn/IUniswap.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity >=0.7.6;\\n\\ninterface IUniswap {\\n\\n    function swapExactTokensForETH(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    )\\n    external\\n    returns (uint[] memory amounts);\\n\\n\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n\\n    function WETH() external pure returns (address);\\n}\\n\",\"keccak256\":\"0x6d4995f39a3293070c8a8e38914f30546b646df8afa9181dd2374a2b0082dfc1\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/gsn/TokenPaymasterPermitPaymaster.sol": {
        "TokenPaymasterPermitPaymaster": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "eth",
                  "type": "uint256"
                }
              ],
              "name": "Received",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "gasUseWithoutPost",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "gasUsedByPost",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "ethActualCharge",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tokenActualCharge",
                  "type": "uint256"
                }
              ],
              "name": "TokensCharged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tokenPrecharge",
                  "type": "uint256"
                }
              ],
              "name": "TokensPrecharged",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "CALLDATA_SIZE_LIMIT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "FORWARDER_HUB_OVERHEAD",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PAYMASTER_ACCEPTANCE_BUDGET",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "POST_RELAYED_CALL_GAS_LIMIT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PRE_RELAYED_CALL_GAS_LIMIT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "paymasterData",
                  "type": "bytes"
                }
              ],
              "name": "_getToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "contract IUniswap",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gas",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "validUntil",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IForwarder.ForwardRequest",
                      "name": "request",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "gasPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "pctRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "relayWorker",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "paymaster",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "forwarder",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "paymasterData",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "clientId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct GsnTypes.RelayData",
                      "name": "relayData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayRequest",
                  "name": "relayRequest",
                  "type": "tuple"
                }
              ],
              "name": "_verifyForwarder",
              "outputs": [],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "address[]",
                  "name": "routers",
                  "type": "address[]"
                }
              ],
              "name": "addBatchTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                }
              ],
              "name": "addToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "contract IUniswap",
                  "name": "router",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gas",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "validUntil",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IForwarder.ForwardRequest",
                      "name": "request",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "gasPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "pctRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "relayWorker",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "paymaster",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "forwarder",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "paymasterData",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "clientId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct GsnTypes.RelayData",
                      "name": "relayData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayRequest",
                  "name": "relayRequest",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPossibleGas",
                  "type": "uint256"
                }
              ],
              "name": "calculatePreCharge",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "payer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenPreCharge",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "gasUsedByPost",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGasAndDataLimits",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "acceptanceBudget",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "preRelayedCallGasLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "postRelayedCallGasLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "calldataSizeLimit",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IPaymaster.GasAndDataLimits",
                  "name": "limits",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHubAddr",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gas",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "validUntil",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IForwarder.ForwardRequest",
                      "name": "request",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "gasPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "pctRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "relayWorker",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "paymaster",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "forwarder",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "paymasterData",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "clientId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct GsnTypes.RelayData",
                      "name": "relayData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayRequest",
                  "name": "relayRequest",
                  "type": "tuple"
                }
              ],
              "name": "getPayer",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRelayHubDeposit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "getTokenBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "context",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "gasUseWithoutPost",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "gasPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pctRelayFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseRelayFee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "relayWorker",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "paymaster",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "forwarder",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "paymasterData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "clientId",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayData",
                  "name": "relayData",
                  "type": "tuple"
                }
              ],
              "name": "postRelayedCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gas",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "validUntil",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IForwarder.ForwardRequest",
                      "name": "request",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "gasPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "pctRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseRelayFee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "relayWorker",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "paymaster",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "forwarder",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "paymasterData",
                          "type": "bytes"
                        },
                        {
                          "internalType": "uint256",
                          "name": "clientId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct GsnTypes.RelayData",
                      "name": "relayData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct GsnTypes.RelayRequest",
                  "name": "relayRequest",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "approvalData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPossibleGas",
                  "type": "uint256"
                }
              ],
              "name": "preRelayedCall",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "context",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "revertOnRecipientRevert",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "routersMap",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_gasUsedByPost",
                  "type": "uint256"
                }
              ],
              "name": "setPostGasUsage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IRelayHub",
                  "name": "hub",
                  "type": "address"
                }
              ],
              "name": "setRelayHub",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IForwarder",
                  "name": "forwarder",
                  "type": "address"
                }
              ],
              "name": "setTrustedForwarder",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "trustedForwarder",
              "outputs": [
                {
                  "internalType": "contract IForwarder",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "versionPaymaster",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "withdrawRelayHubDepositTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
                "params": {
                  "context": "- the call context, as returned by the preRelayedCall",
                  "gasUseWithoutPost": "- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.",
                  "relayData": "- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.",
                  "success": "- true if the relayed call succeeded, false if it reverted"
                }
              },
              "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
                "params": {
                  "approvalData": "- extra dapp-specific data (e.g. signature from trusted party)",
                  "maxPossibleGas": "- based on values returned from {@link getGasAndDataLimits},         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.         In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"  return:      a context to be passed to postRelayedCall      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).",
                  "relayRequest": "- the full relay request structure",
                  "signature": "- user's EIP712-compatible signature of the {@link relayRequest}.              Note that in most cases the paymaster shouldn't try use it at all. It is always checked              by the forwarder immediately after preRelayedCall returns."
                }
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0xC8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0xD0 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4347 DUP1 PUSH3 0xE0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BB05264 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB90B41CF GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDF463A66 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDF463A66 EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0xEF1A830E EQ PUSH2 0x69D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xF9C002F7 EQ PUSH2 0x703 JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0xB90B41CF EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xBBDAA3C9 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xDA742228 EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0xDB3F831E EQ PUSH2 0x649 JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0x921276EA GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x921276EA EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xA5DCD07B EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xAD12E50E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xB039A88F EQ PUSH2 0x59F JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0x7BB05264 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4F5 JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0x5476BD72 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x6D7C3E2B GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x6D7C3E2B EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x74E861D6 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x76FA01C3 EQ PUSH2 0x478 JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0x5476BD72 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x59D3901F EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x5C5E3DB1 EQ PUSH2 0x3E2 JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0x2D14C4B7 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x2D14C4B7 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x2F4B3C5C EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x3AECD0E3 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x41BBB7CA EQ PUSH2 0x33E JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH3 0xBE5DD4 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x1E33667 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x2AFE31C1 EQ PUSH2 0x26F JUMPI PUSH2 0x203 JUMP JUMPDEST CALLDATASIZE PUSH2 0x203 JUMPI PUSH32 0xA8142743F8F70A4C26F3691CF4ED59718381FB2F18070EC52BE1F1022D855557 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x2FF5 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP3 SWAP2 SWAP1 PUSH2 0x3A6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x30FA JUMP JUMPDEST PUSH2 0xC97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x2E2E JUMP JUMPDEST PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP3 SWAP2 SWAP1 PUSH2 0x3A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x2E6F JUMP JUMPDEST PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x2FB4 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x2C84 JUMP JUMPDEST PUSH2 0xF91 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x2EE7 JUMP JUMPDEST PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x30A8 JUMP JUMPDEST PUSH2 0x1310 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x13C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH2 0x1560 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH2 0x160D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DF PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x3AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50A PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x3ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x572 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x2FB4 JUMP JUMPDEST PUSH2 0x178C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x589 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B4 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DF PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60A PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x2F62 JUMP JUMPDEST PUSH2 0x1895 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x670 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x2CC0 JUMP JUMPDEST PUSH2 0x1988 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x687 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x701 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH2 0x1B37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x718 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x73A PUSH2 0x1536 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP1 PUSH2 0x3C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x814 DUP11 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7BD SWAP2 SWAP1 PUSH2 0x3E1C JUMP JUMPDEST DUP1 PUSH1 0xC0 ADD SWAP1 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x3DA1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDD8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH2 0x827 DUP5 DUP5 DUP15 DUP11 PUSH2 0x10C2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP15 DUP15 DUP2 ADD SWAP1 PUSH2 0x843 SWAP2 SWAP1 PUSH2 0x2BFB JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF DUP8 ADDRESS DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3957 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP10 ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x903 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3920 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x931 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST POP PUSH32 0xE9731C78E6C09448D873967301D14A46FFE6276AE410C52AD99F5C8B1B47FAF0 DUP11 DUP11 DUP10 PUSH1 0x40 MLOAD PUSH2 0x989 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP8 DUP8 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9A8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x0 SWAP12 POP SWAP12 POP POP POP POP POP POP POP POP POP POP POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9DA PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9F8 PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP2 SWAP1 PUSH2 0x3905 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP1 PUSH2 0x3B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8C SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x3905 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCBD PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xF714CE DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA2 SWAP3 SWAP2 SWAP1 PUSH2 0x3C79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDF1 SWAP2 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBE SWAP1 PUSH2 0x3B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP2 SWAP1 PUSH2 0x3905 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xF78 SWAP2 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF99 PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFB7 PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1040 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41BBB7CA DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x3C3C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x112A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x114E SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E53548B DUP6 DUP8 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x11A1 SWAP2 SWAP1 PUSH2 0x3E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BE SWAP3 SWAP2 SWAP1 PUSH2 0x3CD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP DUP5 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1220 SWAP2 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST PUSH1 0x40 ADD CALLDATALOAD DUP2 ADD SWAP1 POP PUSH2 0x1233 DUP2 DUP9 DUP9 PUSH2 0x1D38 JUMP JUMPDEST SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126E SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x129A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12BE SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1300 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F7 SWAP1 PUSH2 0x3BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2904 DUP2 JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1336 PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13EF PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1568 PUSH2 0x1536 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15CC SWAP1 PUSH2 0x3C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP9 DUP9 DUP2 ADD SWAP1 PUSH2 0x15EA SWAP2 SWAP1 PUSH2 0x2B98 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x1602 DUP5 DUP5 PUSH1 0x0 DUP10 DUP10 DUP8 DUP8 PUSH2 0x1F46 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1615 PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1633 PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x322E322E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x179C SWAP2 SWAP1 PUSH2 0x3E1C JUMP JUMPDEST PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x17AE SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x183D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1834 SWAP1 PUSH2 0x3BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1846 DUP2 PUSH2 0x20A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1857 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x3D090 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x30D40 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x33450 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2904 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC350 DUP2 JUMP JUMPDEST PUSH3 0x1ADB0 DUP2 JUMP JUMPDEST PUSH2 0x189D PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18BB PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1990 PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19AE PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1AF4 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1A4F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A67 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC350 PUSH3 0x186A0 ADD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B3F PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B5D PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x42EC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1D53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D82 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D93 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E4B SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1E58 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1F00CA74 DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ECF SWAP3 SWAP2 SWAP1 PUSH2 0x3CA2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F24 SWAP2 SWAP1 PUSH2 0x2D2C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1F33 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E53548B PUSH2 0x1F9B PUSH1 0x4 SLOAD DUP9 PUSH2 0x22A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB9 SWAP3 SWAP2 SWAP1 PUSH2 0x3CD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2009 SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x202A PUSH2 0x2023 DUP4 DUP10 PUSH2 0x22A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1D38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2041 DUP3 DUP11 PUSH2 0x232D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x204E DUP11 DUP7 DUP4 PUSH2 0x23B0 JUMP JUMPDEST PUSH2 0x205A DUP4 DUP4 DUP8 DUP8 PUSH2 0x2481 JUMP JUMPDEST PUSH32 0xB3D69FF8981E297B4AB7FB9BA8E8A080FFEBBEE9F273BFA2D10116A823683045 DUP8 PUSH1 0x4 SLOAD DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2091 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x20B8 SWAP2 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x20CA SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x572B6C05 PUSH1 0xE0 SHL DUP5 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x20F8 SWAP2 SWAP1 PUSH2 0x3E1C JUMP JUMPDEST PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x210A SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x211A SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x2184 SWAP2 SWAP1 PUSH2 0x38D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x21BF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2200 SWAP1 PUSH2 0x3B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MLOAD EQ PUSH2 0x224D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2244 SWAP1 PUSH2 0x3BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2261 SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST PUSH2 0x22A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2297 SWAP1 PUSH2 0x3B01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2323 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x23A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23EB SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x243D SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST PUSH2 0x247C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2473 SWAP1 PUSH2 0x3B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x249B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x24CA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x255B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2593 SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x25A0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2635 SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x264F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2663 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2687 SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18CBAFE5 DUP6 DUP8 DUP5 ADDRESS PUSH2 0x384 TIMESTAMP ADD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26CD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2724 SWAP2 SWAP1 PUSH2 0x2D2C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA67C919 DUP7 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2781 SWAP2 SWAP1 PUSH2 0x3905 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x279A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F5 PUSH2 0x27F0 DUP5 PUSH2 0x3E72 JUMP JUMPDEST PUSH2 0x3E41 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2844 JUMPI DUP2 PUSH2 0x282A DUP9 DUP3 PUSH2 0x28F8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2817 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2861 PUSH2 0x285C DUP5 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x3E41 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x28B0 JUMPI DUP2 PUSH2 0x2896 DUP9 DUP3 PUSH2 0x2AF3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2883 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28CD PUSH2 0x28C8 DUP5 PUSH2 0x3ECA JUMP JUMPDEST PUSH2 0x3E41 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x28E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28F0 DUP5 DUP3 DUP6 PUSH2 0x41B0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2907 DUP2 PUSH2 0x4205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x291C DUP2 PUSH2 0x4205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2931 DUP2 PUSH2 0x421C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2946 DUP2 PUSH2 0x421C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x295D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x296D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x27E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2997 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x284E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29AF DUP2 PUSH2 0x4233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29C4 DUP2 PUSH2 0x4233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29D9 DUP2 PUSH2 0x424A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x29F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A4A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A62 DUP2 PUSH2 0x4261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A77 DUP2 PUSH2 0x4278 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A8C DUP2 PUSH2 0x428F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AA1 DUP2 PUSH2 0x42A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AED DUP2 PUSH2 0x42BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B02 DUP2 PUSH2 0x42BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B17 DUP2 PUSH2 0x42D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B3D DUP5 DUP3 DUP6 ADD PUSH2 0x28F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B66 DUP5 DUP3 DUP6 ADD PUSH2 0x290D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B8F DUP5 DUP3 DUP6 ADD PUSH2 0x2937 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BBC DUP8 DUP3 DUP9 ADD PUSH2 0x2922 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2BCD DUP8 DUP3 DUP9 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2BDE DUP8 DUP3 DUP9 ADD PUSH2 0x2A53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2BEF DUP8 DUP3 DUP9 ADD PUSH2 0x2A92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2C14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP10 DUP3 DUP11 ADD PUSH2 0x2922 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2C33 DUP10 DUP3 DUP11 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2C44 DUP10 DUP3 DUP11 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2C55 DUP10 DUP3 DUP11 ADD PUSH2 0x2B08 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2C66 DUP10 DUP3 DUP11 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2C77 DUP10 DUP3 DUP11 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CA5 DUP6 DUP3 DUP7 ADD PUSH2 0x28F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CB6 DUP6 DUP3 DUP7 ADD PUSH2 0x28F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CF9 DUP6 DUP3 DUP7 ADD PUSH2 0x294C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D22 DUP6 DUP3 DUP7 ADD PUSH2 0x294C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D64 DUP5 DUP3 DUP6 ADD PUSH2 0x2976 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D8D DUP5 DUP3 DUP6 ADD PUSH2 0x29B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2DAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DD4 DUP9 DUP3 DUP10 ADD PUSH2 0x29DF JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x2DE7 DUP9 DUP3 DUP10 ADD PUSH2 0x29A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2DF8 DUP9 DUP3 DUP10 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E21 DUP9 DUP3 DUP10 ADD PUSH2 0x2AA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E66 DUP5 DUP3 DUP6 ADD PUSH2 0x2A29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E8F DUP5 DUP3 DUP6 ADD PUSH2 0x2A53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2EBB DUP7 DUP3 DUP8 ADD PUSH2 0x2A53 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2ECC DUP7 DUP3 DUP8 ADD PUSH2 0x28F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2EDD DUP7 DUP3 DUP8 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2EFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F0B DUP8 DUP3 DUP9 ADD PUSH2 0x2A53 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2F1C DUP8 DUP3 DUP9 ADD PUSH2 0x2A92 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F45 DUP8 DUP3 DUP9 ADD PUSH2 0x2AC3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2F56 DUP8 DUP3 DUP9 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F82 DUP5 DUP3 DUP6 ADD PUSH2 0x2A68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2FAB DUP5 DUP3 DUP6 ADD PUSH2 0x2A7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FEC DUP5 DUP3 DUP6 ADD PUSH2 0x2AC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x300E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3034 DUP10 DUP3 DUP11 ADD PUSH2 0x2AC3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x305D DUP10 DUP3 DUP11 ADD PUSH2 0x29DF JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x307C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3088 DUP10 DUP3 DUP11 ADD PUSH2 0x29DF JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x60 PUSH2 0x309B DUP10 DUP3 DUP11 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30C8 DUP5 DUP3 DUP6 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30F1 DUP5 DUP3 DUP6 ADD PUSH2 0x2AF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x310D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x311B DUP6 DUP3 DUP7 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x312C DUP6 DUP3 DUP7 ADD PUSH2 0x2922 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3142 DUP4 DUP4 PUSH2 0x316C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3157 DUP2 PUSH2 0x410E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3166 DUP2 PUSH2 0x4067 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3175 DUP2 PUSH2 0x4055 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3184 DUP2 PUSH2 0x4055 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3195 DUP3 PUSH2 0x3F0A JUMP JUMPDEST PUSH2 0x319F DUP2 DUP6 PUSH2 0x3F38 JUMP JUMPDEST SWAP4 POP PUSH2 0x31AA DUP4 PUSH2 0x3EFA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31DB JUMPI DUP2 MLOAD PUSH2 0x31C2 DUP9 DUP3 PUSH2 0x3136 JUMP JUMPDEST SWAP8 POP PUSH2 0x31CD DUP4 PUSH2 0x3F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x31AE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x31F1 DUP2 PUSH2 0x4079 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3200 DUP2 PUSH2 0x4085 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3212 DUP4 DUP6 PUSH2 0x3F49 JUMP JUMPDEST SWAP4 POP PUSH2 0x321F DUP4 DUP6 DUP5 PUSH2 0x41B0 JUMP JUMPDEST PUSH2 0x3228 DUP4 PUSH2 0x41F4 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x323E DUP3 PUSH2 0x3F15 JUMP JUMPDEST PUSH2 0x3248 DUP2 DUP6 PUSH2 0x3F5A JUMP JUMPDEST SWAP4 POP PUSH2 0x3258 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x41BF JUMP JUMPDEST PUSH2 0x3261 DUP2 PUSH2 0x41F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3277 DUP3 PUSH2 0x3F15 JUMP JUMPDEST PUSH2 0x3281 DUP2 DUP6 PUSH2 0x3F6B JUMP JUMPDEST SWAP4 POP PUSH2 0x3291 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x41BF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32A6 DUP2 PUSH2 0x4120 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x32B5 DUP2 PUSH2 0x4144 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x32C4 DUP2 PUSH2 0x4168 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D5 DUP3 PUSH2 0x3F20 JUMP JUMPDEST PUSH2 0x32DF DUP2 DUP6 PUSH2 0x3F76 JUMP JUMPDEST SWAP4 POP PUSH2 0x32EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x41BF JUMP JUMPDEST PUSH2 0x32F8 DUP2 PUSH2 0x41F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3310 PUSH1 0x1F DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x696E76616C696420666F7277617264657220666F7220726563697069656E7400 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3350 PUSH1 0x1F DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x5468697320746F6B656E206E6F7420737570706F727465642061732066656500 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3390 PUSH1 0x1C DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x697354727573746564466F727761726465723A20726576657274656400000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D0 PUSH1 0x1E DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E5061796D61737465722F42616C616E636520746F206C6F772E0000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3410 PUSH1 0xD DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x6661696C656420726566756E6400000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3450 PUSH1 0x18 DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x466F72776172646572206973206E6F7420747275737465640000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3490 PUSH1 0x20 DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x697354727573746564466F727761726465723A2062616420726573706F6E7365 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34D0 PUSH1 0x15 DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x746F6B656E2062616C616E636520746F6F206C6F770000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3510 PUSH1 0x1E DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x63616E206F6E6C792062652063616C6C65642062792052656C61794875620000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH2 0x3556 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x3563 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x3571 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x357E PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x358C PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x3599 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x35A7 PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x35B4 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x35C2 PUSH1 0x80 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x35CF PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x35DD PUSH1 0xA0 DUP5 ADD DUP5 PUSH2 0x3F9E JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x35F0 DUP4 DUP3 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x3601 PUSH1 0xC0 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x360E PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x362F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3642 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3655 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3668 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 ADD PUSH2 0x3682 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x368F PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x369D PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x36AA PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x36B8 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x36C5 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x36D3 PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x36E0 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x36EE PUSH1 0x80 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x36FB PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x3709 PUSH1 0xA0 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x3716 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x3724 PUSH1 0xC0 DUP5 ADD DUP5 PUSH2 0x3F9E JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x3737 DUP4 DUP3 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x3748 PUSH1 0xE0 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x3755 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 ADD PUSH2 0x3774 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x3781 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x378F PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x379C PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x37AA PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x37B7 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x37C5 PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x37D2 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x37E0 PUSH1 0x80 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x37ED PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x37FB PUSH1 0xA0 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x3808 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x3816 PUSH1 0xC0 DUP5 ADD DUP5 PUSH2 0x3F9E JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x3829 DUP4 DUP3 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x383A PUSH1 0xE0 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x3847 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH2 0x3865 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x3FF5 JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x3877 DUP3 DUP3 PUSH2 0x3543 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3887 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x4019 JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x3899 DUP3 DUP3 PUSH2 0x366E JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x38AF DUP2 PUSH2 0x40F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x38BE DUP2 PUSH2 0x40F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x38CD DUP2 PUSH2 0x4101 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38DF DUP3 DUP5 PUSH2 0x326C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x317B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x391A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x314E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3935 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x3942 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x394F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x396C PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x3979 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3986 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3993 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x39A0 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x38C4 JUMP JUMPDEST PUSH2 0x39AD PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x31F7 JUMP JUMPDEST PUSH2 0x39BA PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x31F7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x39DB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x39E8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x39F5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A12 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x3A1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3A3B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x3A48 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3A55 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x329D JUMP JUMPDEST PUSH2 0x3A62 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A85 DUP2 DUP6 PUSH2 0x3233 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A94 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3AB0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x329D JUMP JUMPDEST PUSH2 0x3ABD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AF9 DUP2 DUP5 PUSH2 0x32CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B1A DUP2 PUSH2 0x3303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B3A DUP2 PUSH2 0x3343 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B5A DUP2 PUSH2 0x3383 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B7A DUP2 PUSH2 0x33C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B9A DUP2 PUSH2 0x3403 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BBA DUP2 PUSH2 0x3443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BDA DUP2 PUSH2 0x3483 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BFA DUP2 PUSH2 0x34C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C1A DUP2 PUSH2 0x3503 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3619 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C56 DUP2 DUP5 PUSH2 0x3852 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C73 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C8E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3C9B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x315D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CB7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x38B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3CC9 DUP2 DUP5 PUSH2 0x318A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CE7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x38B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3CF9 DUP2 DUP5 PUSH2 0x3760 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3D17 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3D24 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x38B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3D36 DUP2 DUP7 PUSH2 0x318A JUMP JUMPDEST SWAP1 POP PUSH2 0x3D45 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3D52 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3D71 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3D7E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3D8B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3D98 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3DBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3DD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x3DF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH2 0x100 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3E35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3E68 JUMPI PUSH2 0x3E67 PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3E8D JUMPI PUSH2 0x3E8C PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EB9 JUMPI PUSH2 0x3EB8 PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EE5 JUMPI PUSH2 0x3EE4 PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F96 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x28F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP2 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3FDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP5 SGT ISZERO PUSH2 0x3FED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x400D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH2 0x100 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4032 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404D PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x2ADE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4060 DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4072 DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409A DUP3 PUSH2 0x4055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40AC DUP3 PUSH2 0x4055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40BE DUP3 PUSH2 0x4055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D0 DUP3 PUSH2 0x4055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4119 DUP3 PUSH2 0x418C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412B DUP3 PUSH2 0x4132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x413D DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x414F DUP3 PUSH2 0x4156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4161 DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4173 DUP3 PUSH2 0x417A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4185 DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4197 DUP3 PUSH2 0x419E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A9 DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x41DD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x41C2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x41EC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST INVALID JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x420E DUP2 PUSH2 0x4055 JUMP JUMPDEST DUP2 EQ PUSH2 0x4219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4225 DUP2 PUSH2 0x4067 JUMP JUMPDEST DUP2 EQ PUSH2 0x4230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x423C DUP2 PUSH2 0x4079 JUMP JUMPDEST DUP2 EQ PUSH2 0x4247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4253 DUP2 PUSH2 0x4085 JUMP JUMPDEST DUP2 EQ PUSH2 0x425E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x426A DUP2 PUSH2 0x408F JUMP JUMPDEST DUP2 EQ PUSH2 0x4275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4281 DUP2 PUSH2 0x40A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x428C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4298 DUP2 PUSH2 0x40B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x42A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x42AF DUP2 PUSH2 0x40C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x42BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x42C6 DUP2 PUSH2 0x40F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x42D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x42DD DUP2 PUSH2 0x4101 JUMP JUMPDEST DUP2 EQ PUSH2 0x42E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220577EA31B146A SWAP5 PUSH21 0x56167F832097E860663ADF5F25FCA588D7279C4A64 DUP16 OR PUSH5 0x64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
              "sourceMap": "656:6739:16:-:0;;;955:28;;;;;;;;;;884:17:10;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;656:6739:16;;598:104:14;651:15;685:10;678:17;;598:104;:::o;656:6739:16:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:53533:17",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "126:520:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "136:89:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "217:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "160:56:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "160:64:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocateMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "145:14:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "145:80:17"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "136:5:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "234:16:17",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "245:5:17"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "238:3:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "266:5:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "273:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "259:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "259:21:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "259:21:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "281:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "292:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "299:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "288:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "288:16:17"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "281:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "313:17:17",
                              "value": {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "324:6:17"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "317:3:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "379:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "388:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "391:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "381:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "381:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "381:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "349:3:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "358:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "366:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "354:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "354:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "345:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "345:27:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "374:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "342:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "342:36:17"
                              },
                              "nodeType": "YulIf",
                              "src": "339:2:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "464:176:17",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "478:21:17",
                                    "value": {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "496:3:17"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementPos",
                                        "nodeType": "YulTypedName",
                                        "src": "482:10:17",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "519:3:17"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPos",
                                              "nodeType": "YulIdentifier",
                                              "src": "545:10:17"
                                            },
                                            {
                                              "name": "end",
                                              "nodeType": "YulIdentifier",
                                              "src": "557:3:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_t_address",
                                            "nodeType": "YulIdentifier",
                                            "src": "524:20:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "524:37:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "512:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "512:50:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "512:50:17"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "575:21:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "586:3:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "591:4:17",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "582:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "582:14:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "575:3:17"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "609:21:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "620:3:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "625:4:17",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "616:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "616:14:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "609:3:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "426:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "429:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "423:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "423:13:17"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "437:18:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "439:14:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "448:1:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "451:1:17",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "444:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "444:9:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "439:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "408:14:17",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "410:10:17",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "419:1:17",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "414:1:17",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "404:236:17"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "96:6:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "104:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "112:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "120:5:17",
                            "type": ""
                          }
                        ],
                        "src": "24:622:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "782:531:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "792:89:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "873:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "816:56:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "816:64:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocateMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "801:14:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "801:80:17"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "792:5:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "890:16:17",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "901:5:17"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "894:3:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "922:5:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "929:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "915:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "915:21:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "915:21:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "937:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "948:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "955:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "944:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "944:16:17"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "937:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "969:17:17",
                              "value": {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "980:6:17"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "973:3:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1035:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1044:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1047:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1037:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1037:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1037:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1005:3:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "1014:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1022:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "1010:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1010:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1001:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1001:27:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1030:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "998:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "998:36:17"
                              },
                              "nodeType": "YulIf",
                              "src": "995:2:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1120:187:17",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1134:21:17",
                                    "value": {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1152:3:17"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementPos",
                                        "nodeType": "YulTypedName",
                                        "src": "1138:10:17",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1175:3:17"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPos",
                                              "nodeType": "YulIdentifier",
                                              "src": "1212:10:17"
                                            },
                                            {
                                              "name": "end",
                                              "nodeType": "YulIdentifier",
                                              "src": "1224:3:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_t_uint256_fromMemory",
                                            "nodeType": "YulIdentifier",
                                            "src": "1180:31:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1180:48:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1168:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1168:61:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1168:61:17"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1242:21:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1253:3:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1258:4:17",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1249:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1249:14:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "1242:3:17"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1276:21:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "1287:3:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1292:4:17",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1283:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1283:14:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1276:3:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1082:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1085:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1079:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1079:13:17"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1093:18:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1095:14:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1104:1:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1107:1:17",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1100:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1100:9:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1095:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1064:14:17",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1066:10:17",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1075:1:17",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "1070:1:17",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "1060:247:17"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "752:6:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "760:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "768:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "776:5:17",
                            "type": ""
                          }
                        ],
                        "src": "669:644:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1402:259:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1412:73:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1477:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1436:40:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1436:48:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocateMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1421:14:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1421:64:17"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1412:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "1501:5:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1508:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1494:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1494:21:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1494:21:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1524:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "1539:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1546:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1535:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1535:16:17"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "1528:3:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1589:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1598:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1601:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1591:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1591:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1591:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1570:3:17"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1575:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1566:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1566:16:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1584:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1563:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1563:25:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1560:2:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "1638:3:17"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1643:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1648:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1614:23:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1614:41:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1614:41:17"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "1375:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1380:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1388:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1396:5:17",
                            "type": ""
                          }
                        ],
                        "src": "1319:342:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1719:87:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1729:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1751:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1738:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1738:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1729:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1794:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1767:26:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1767:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1767:33:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1697:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1705:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1713:5:17",
                            "type": ""
                          }
                        ],
                        "src": "1667:139:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1875:80:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1885:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1900:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1894:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1894:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1885:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1943:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1916:26:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1916:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1916:33:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1853:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1861:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1869:5:17",
                            "type": ""
                          }
                        ],
                        "src": "1812:143:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2021:95:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2031:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2053:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2040:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2040:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2031:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2104:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "2069:34:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2069:41:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2069:41:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1999:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2007:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2015:5:17",
                            "type": ""
                          }
                        ],
                        "src": "1961:155:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2193:88:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2203:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2218:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2212:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2212:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2203:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2269:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "2234:34:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2234:41:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2234:41:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_payable_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2171:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2179:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2187:5:17",
                            "type": ""
                          }
                        ],
                        "src": "2122:159:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2381:226:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2430:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2439:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2442:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2432:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2432:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2432:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2409:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2417:4:17",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2405:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2405:17:17"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "2424:3:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2401:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2401:27:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2394:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2394:35:17"
                              },
                              "nodeType": "YulIf",
                              "src": "2391:2:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2455:34:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2482:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2469:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2469:20:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2459:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2498:103:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2574:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2582:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2570:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2570:17:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2589:6:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2597:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2507:62:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2507:94:17"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "2498:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2359:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2367:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "2375:5:17",
                            "type": ""
                          }
                        ],
                        "src": "2304:303:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2718:230:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2767:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2776:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2779:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2769:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2769:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2769:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2746:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2754:4:17",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2742:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2742:17:17"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "2761:3:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2738:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2738:27:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2731:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2731:35:17"
                              },
                              "nodeType": "YulIf",
                              "src": "2728:2:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2792:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2812:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2806:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2806:13:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2796:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2828:114:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2915:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2923:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2911:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2911:17:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2930:6:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2938:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2837:73:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2837:105:17"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "2828:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2696:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2704:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "2712:5:17",
                            "type": ""
                          }
                        ],
                        "src": "2630:318:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3003:84:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3013:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3035:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3022:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3022:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3013:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3075:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "3051:23:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3051:30:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3051:30:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2981:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2989:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2997:5:17",
                            "type": ""
                          }
                        ],
                        "src": "2954:133:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3153:77:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3163:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3178:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3172:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3172:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3163:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3218:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "3194:23:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3194:30:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3194:30:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "3131:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3139:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3147:5:17",
                            "type": ""
                          }
                        ],
                        "src": "3093:137:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3288:87:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3298:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3320:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3307:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3307:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3298:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3363:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bytes32",
                                  "nodeType": "YulIdentifier",
                                  "src": "3336:26:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3336:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3336:33:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "3266:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3274:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3282:5:17",
                            "type": ""
                          }
                        ],
                        "src": "3236:139:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3468:277:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3517:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3526:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3529:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3519:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3519:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3519:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3496:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3504:4:17",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3492:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3492:17:17"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "3511:3:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3488:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3488:27:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3481:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3481:35:17"
                              },
                              "nodeType": "YulIf",
                              "src": "3478:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3542:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3565:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3552:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3552:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3542:6:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3615:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3624:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3627:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3617:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3617:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3617:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3587:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3595:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3584:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3584:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "3581:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3640:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3656:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3664:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3652:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3652:17:17"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3640:8:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3723:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3732:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3735:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3725:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3725:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3725:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "arrayPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3688:8:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "3702:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3710:4:17",
                                            "type": "",
                                            "value": "0x01"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "3698:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3698:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3684:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3684:32:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "3718:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3681:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3681:41:17"
                              },
                              "nodeType": "YulIf",
                              "src": "3678:2:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "3435:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3443:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "3451:8:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3461:6:17",
                            "type": ""
                          }
                        ],
                        "src": "3394:351:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3825:210:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3874:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3883:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3886:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3876:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3876:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3876:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3853:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3861:4:17",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3849:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3849:17:17"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "3868:3:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3845:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3845:27:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3838:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3838:35:17"
                              },
                              "nodeType": "YulIf",
                              "src": "3835:2:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3899:34:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3926:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3913:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3913:20:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3903:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3942:87:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4002:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4010:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3998:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3998:17:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4017:6:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "4025:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3951:46:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3951:78:17"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "3942:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "3803:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3811:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "3819:5:17",
                            "type": ""
                          }
                        ],
                        "src": "3764:271:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4108:102:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4118:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4140:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4127:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4127:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4118:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4198:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_IERC20_$1938",
                                  "nodeType": "YulIdentifier",
                                  "src": "4156:41:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4156:48:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4156:48:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_IERC20_$1938",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "4086:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4094:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4102:5:17",
                            "type": ""
                          }
                        ],
                        "src": "4041:169:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4286:105:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4296:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4318:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4305:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4305:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4296:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4379:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_IForwarder_$273",
                                  "nodeType": "YulIdentifier",
                                  "src": "4334:44:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4334:51:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4334:51:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_IForwarder_$273",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "4264:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4272:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4280:5:17",
                            "type": ""
                          }
                        ],
                        "src": "4216:175:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4466:104:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4476:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4498:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4485:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4485:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4476:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4558:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_IRelayHub_$611",
                                  "nodeType": "YulIdentifier",
                                  "src": "4514:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4514:50:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4514:50:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_IRelayHub_$611",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "4444:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4452:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4460:5:17",
                            "type": ""
                          }
                        ],
                        "src": "4397:173:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4645:104:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4655:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4677:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4664:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4664:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4655:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4737:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_IUniswap_$2008",
                                  "nodeType": "YulIdentifier",
                                  "src": "4693:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4693:50:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4693:50:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_IUniswap_$2008",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "4623:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4631:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4639:5:17",
                            "type": ""
                          }
                        ],
                        "src": "4576:173:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4869:86:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4909:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4918:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4921:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4911:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4911:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4911:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "4890:3:17"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4895:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4886:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4886:16:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4904:3:17",
                                    "type": "",
                                    "value": "256"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4882:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4882:26:17"
                              },
                              "nodeType": "YulIf",
                              "src": "4879:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4934:15:17",
                              "value": {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4943:6:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4934:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_struct$_RelayData_$1191_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "4847:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4855:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4863:5:17",
                            "type": ""
                          }
                        ],
                        "src": "4788:167:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5081:85:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5120:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5129:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5132:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5122:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5122:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5122:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "5102:3:17"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5107:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5098:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5098:16:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5116:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5094:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5094:25:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5091:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5145:15:17",
                              "value": {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5154:6:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5145:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_struct$_RelayRequest_$1196_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "5059:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5067:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5075:5:17",
                            "type": ""
                          }
                        ],
                        "src": "4997:169:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5224:87:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5234:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5256:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5243:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5243:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5234:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5299:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "5272:26:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5272:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5272:33:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "5202:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5210:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5218:5:17",
                            "type": ""
                          }
                        ],
                        "src": "5172:139:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5380:80:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5390:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5405:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5399:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5399:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5390:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5448:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "5421:26:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5421:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5421:33:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "5358:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5366:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5374:5:17",
                            "type": ""
                          }
                        ],
                        "src": "5317:143:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5516:85:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5526:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5548:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5535:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5535:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5526:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5589:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "5564:24:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5564:31:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5564:31:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "5494:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5502:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5510:5:17",
                            "type": ""
                          }
                        ],
                        "src": "5466:135:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5673:196:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5719:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5728:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5731:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5721:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5721:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5721:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5694:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5703:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5690:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5690:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5715:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5686:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5686:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5683:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5745:117:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5760:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5774:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5764:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5789:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5824:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5835:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5820:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5820:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5844:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5799:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5799:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5789:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5643:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5654:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5666:6:17",
                            "type": ""
                          }
                        ],
                        "src": "5607:262:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5952:207:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5998:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6007:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6010:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6000:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6000:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6000:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5973:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5982:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5969:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5969:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5994:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5965:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5965:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5962:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6024:128:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6039:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6053:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "6043:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6068:74:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6114:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6125:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6110:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6110:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6134:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "6078:31:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6078:64:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "6068:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5922:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5933:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5945:6:17",
                            "type": ""
                          }
                        ],
                        "src": "5875:284:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6250:215:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6296:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6305:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6308:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6298:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6298:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6298:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6271:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6280:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6267:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6267:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6292:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6263:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6263:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "6260:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6322:136:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6337:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6351:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "6341:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6366:82:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6420:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6431:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6416:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6416:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6440:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_payable_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "6376:39:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6376:72:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "6366:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payable_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6220:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6231:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6243:6:17",
                            "type": ""
                          }
                        ],
                        "src": "6165:300:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6628:621:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6675:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6684:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6687:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6677:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6677:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6677:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6649:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6658:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6645:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6645:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6670:3:17",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6641:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6641:33:17"
                              },
                              "nodeType": "YulIf",
                              "src": "6638:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6701:125:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6716:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6730:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "6720:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6745:71:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6788:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6799:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6784:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6784:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6808:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "6755:28:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6755:61:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "6745:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6836:118:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6851:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6865:2:17",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "6855:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6881:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6916:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6927:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6912:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6912:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6936:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6891:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6891:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "6881:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6964:133:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6979:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6993:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "6983:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7009:78:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7059:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "7070:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7055:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7055:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7079:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IERC20_$1938",
                                      "nodeType": "YulIdentifier",
                                      "src": "7019:35:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7019:68:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "7009:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7107:135:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7122:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7136:2:17",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "7126:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7152:80:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7204:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "7215:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7200:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7200:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7224:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IUniswap_$2008",
                                      "nodeType": "YulIdentifier",
                                      "src": "7162:37:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7162:70:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "7152:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payablet_uint256t_contract$_IERC20_$1938t_contract$_IUniswap_$2008",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6574:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6585:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6597:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6605:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6613:6:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "6621:6:17",
                            "type": ""
                          }
                        ],
                        "src": "6471:778:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7412:845:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7459:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7468:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7471:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7461:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7461:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7461:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7433:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7442:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7429:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7429:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7454:3:17",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7425:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7425:33:17"
                              },
                              "nodeType": "YulIf",
                              "src": "7422:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7485:125:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7500:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7514:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "7504:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7529:71:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7572:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "7583:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7568:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7568:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7592:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "7539:28:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7539:61:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "7529:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7620:118:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7635:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7649:2:17",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "7639:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7665:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7700:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "7711:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7696:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7696:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7720:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7675:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7675:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "7665:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7748:118:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7763:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7777:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "7767:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7793:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7828:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "7839:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7824:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7824:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7848:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7803:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7803:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "7793:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7876:116:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7891:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7905:2:17",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "7895:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7921:61:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7954:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "7965:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7950:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7950:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7974:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "7931:18:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7931:51:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "7921:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8002:119:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8017:17:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8031:3:17",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "8021:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8048:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "8083:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8094:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8079:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8079:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8103:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "8058:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8058:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "8048:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8131:119:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8146:17:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8160:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "8150:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8177:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "8212:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8223:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8208:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8208:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8232:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "8187:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8187:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value5",
                                      "nodeType": "YulIdentifier",
                                      "src": "8177:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint8t_bytes32t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7342:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "7353:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7365:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7373:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "7381:6:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "7389:6:17",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "7397:6:17",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "7405:6:17",
                            "type": ""
                          }
                        ],
                        "src": "7255:1002:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8346:324:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8392:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8401:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8404:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8394:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8394:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8394:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8367:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8376:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8363:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8363:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8388:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8359:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8359:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "8356:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8418:117:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8433:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8447:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "8437:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8462:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "8497:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8508:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8493:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8493:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8517:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "8472:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8472:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "8462:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8545:118:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8560:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8574:2:17",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "8564:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8590:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "8625:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8636:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8621:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8621:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8645:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "8600:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8600:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "8590:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8308:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "8319:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8331:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8339:6:17",
                            "type": ""
                          }
                        ],
                        "src": "8263:407:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8809:560:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8855:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8864:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8867:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8857:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8857:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8857:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8830:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8839:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8826:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8826:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8851:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8822:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8822:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "8819:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8881:235:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8896:45:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "8927:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8938:1:17",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8923:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8923:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "8910:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8910:31:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "8900:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "8988:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "8997:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "9000:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "8990:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8990:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "8990:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8960:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8968:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "8957:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8957:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "8954:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9018:88:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9078:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9089:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9074:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9074:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9098:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "9028:45:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9028:78:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "9018:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9126:236:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9141:46:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9172:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9183:2:17",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9168:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9168:18:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9155:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9155:32:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9145:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "9234:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "9243:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "9246:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "9236:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9236:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "9236:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9206:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9214:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "9203:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9203:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "9200:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9264:88:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9324:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9335:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9320:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9320:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9344:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "9274:45:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9274:78:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "9264:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8771:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "8782:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8794:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8802:6:17",
                            "type": ""
                          }
                        ],
                        "src": "8676:693:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9477:318:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9523:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9532:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9535:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9525:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9525:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9525:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9498:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9507:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9494:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9494:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9519:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9490:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9490:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "9487:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9549:239:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9564:38:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9588:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9599:1:17",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9584:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9584:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9578:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9578:24:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9568:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "9649:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "9658:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "9661:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "9651:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9651:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "9651:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9621:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9629:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "9618:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9618:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "9615:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9679:99:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9750:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9761:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9746:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9746:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9770:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "9689:56:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9689:89:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "9679:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9447:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "9458:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9470:6:17",
                            "type": ""
                          }
                        ],
                        "src": "9375:420:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9875:204:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9921:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9930:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9933:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9923:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9923:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9923:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9896:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9905:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9892:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9892:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9917:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9888:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9888:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "9885:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9947:125:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9962:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9976:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9966:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9991:71:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10034:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10045:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10030:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10030:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10054:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "10001:28:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10001:61:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "9991:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9845:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "9856:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9868:6:17",
                            "type": ""
                          }
                        ],
                        "src": "9801:278:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10247:812:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10294:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10303:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10306:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "10296:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10296:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10296:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10268:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10277:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10264:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10264:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10289:3:17",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10260:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10260:33:17"
                              },
                              "nodeType": "YulIf",
                              "src": "10257:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "10320:229:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "10335:45:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10366:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "10377:1:17",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10362:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10362:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "10349:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10349:31:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "10339:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "10427:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "10436:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "10439:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "10429:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10429:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "10429:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "10399:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10407:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "10396:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10396:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "10393:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10457:82:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10511:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10522:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10507:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10507:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10531:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "10475:31:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10475:64:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "10457:6:17"
                                    },
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "10465:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "10559:115:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "10574:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10588:2:17",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "10578:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10604:60:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10636:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10647:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10632:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10632:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10656:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "10614:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10614:50:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "10604:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "10684:118:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "10699:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10713:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "10703:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10729:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10764:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10775:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10760:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10760:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10784:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "10739:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10739:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "10729:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "10812:240:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "10827:46:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10858:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "10869:2:17",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10854:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10854:18:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "10841:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10841:32:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "10831:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "10920:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "10929:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "10932:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "10922:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10922:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "10922:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "10892:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10900:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "10889:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10889:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "10886:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10950:92:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "11014:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "11025:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "11010:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11010:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11034:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_struct$_RelayData_$1191_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "10960:49:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10960:82:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "10950:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes_calldata_ptrt_boolt_uint256t_struct$_RelayData_$1191_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10185:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "10196:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10208:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10216:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "10224:6:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "10232:6:17",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "10240:6:17",
                            "type": ""
                          }
                        ],
                        "src": "10085:974:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11140:298:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11186:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11195:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11198:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "11188:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11188:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11188:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11161:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11170:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11157:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11157:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11182:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11153:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11153:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "11150:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "11212:219:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "11227:45:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "11258:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "11269:1:17",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "11254:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11254:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "11241:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11241:31:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "11231:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "11319:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "11328:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "11331:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "11321:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11321:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "11321:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "11291:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11299:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "11288:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11288:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "11285:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "11349:72:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "11393:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "11404:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "11389:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11389:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11413:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "11359:29:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11359:62:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "11349:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11110:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "11121:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11133:6:17",
                            "type": ""
                          }
                        ],
                        "src": "11065:373:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11525:211:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11571:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11580:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11583:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "11573:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11573:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11573:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11546:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11555:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11542:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11542:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11567:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11538:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11538:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "11535:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "11597:132:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "11612:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11626:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "11616:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "11641:78:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "11691:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "11702:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "11687:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11687:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11711:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IERC20_$1938",
                                      "nodeType": "YulIdentifier",
                                      "src": "11651:35:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11651:68:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "11641:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IERC20_$1938",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11495:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "11506:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11518:6:17",
                            "type": ""
                          }
                        ],
                        "src": "11444:292:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11857:467:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11903:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11912:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11915:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "11905:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11905:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11905:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11878:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11887:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11874:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11874:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11899:2:17",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11870:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11870:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "11867:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "11929:132:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "11944:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11958:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "11948:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "11973:78:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "12023:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "12034:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "12019:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12019:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "12043:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IERC20_$1938",
                                      "nodeType": "YulIdentifier",
                                      "src": "11983:35:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11983:68:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "11973:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "12071:118:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "12086:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12100:2:17",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "12090:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "12116:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "12151:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "12162:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "12147:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12147:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "12171:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "12126:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12126:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "12116:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "12199:118:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "12214:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12228:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "12218:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "12244:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "12279:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "12290:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "12275:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12275:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "12299:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "12254:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12254:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "12244:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IERC20_$1938t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11811:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "11822:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11834:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11842:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "11850:6:17",
                            "type": ""
                          }
                        ],
                        "src": "11742:582:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12511:738:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12558:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12567:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12570:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12560:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12560:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12560:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "12532:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12541:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "12528:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12528:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12553:3:17",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "12524:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12524:33:17"
                              },
                              "nodeType": "YulIf",
                              "src": "12521:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "12584:132:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "12599:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12613:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "12603:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "12628:78:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "12678:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "12689:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "12674:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12674:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "12698:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IERC20_$1938",
                                      "nodeType": "YulIdentifier",
                                      "src": "12638:35:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12638:68:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "12628:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "12726:135:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "12741:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12755:2:17",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "12745:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "12771:80:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "12823:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "12834:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "12819:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12819:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "12843:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IUniswap_$2008",
                                      "nodeType": "YulIdentifier",
                                      "src": "12781:37:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12781:70:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "12771:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "12871:243:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "12886:46:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "12917:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "12928:2:17",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "12913:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12913:18:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "12900:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12900:32:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "12890:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "12979:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "12988:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "12991:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "12981:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12981:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "12981:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "12951:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12959:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "12948:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12948:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "12945:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "13009:95:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "13076:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "13087:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13072:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13072:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "13096:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_struct$_RelayRequest_$1196_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "13019:52:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13019:85:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "13009:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13124:118:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13139:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13153:2:17",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "13143:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "13169:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "13204:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "13215:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13200:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13200:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "13224:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "13179:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13179:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "13169:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IERC20_$1938t_contract$_IUniswap_$2008t_struct$_RelayRequest_$1196_calldata_ptrt_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12457:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "12468:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12480:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "12488:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "12496:6:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "12504:6:17",
                            "type": ""
                          }
                        ],
                        "src": "12330:919:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13339:214:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13385:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13394:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13397:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "13387:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13387:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13387:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "13360:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13369:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13356:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13356:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13381:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "13352:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13352:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "13349:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13411:135:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13426:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13440:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "13430:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "13455:81:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "13508:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "13519:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13504:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13504:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "13528:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IForwarder_$273",
                                      "nodeType": "YulIdentifier",
                                      "src": "13465:38:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13465:71:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "13455:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IForwarder_$273",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13309:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "13320:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13332:6:17",
                            "type": ""
                          }
                        ],
                        "src": "13255:298:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13642:213:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13688:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13697:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13700:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "13690:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13690:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13690:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "13663:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13672:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13659:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13659:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13684:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "13655:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13655:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "13652:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13714:134:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13729:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13743:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "13733:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "13758:80:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "13810:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "13821:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13806:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13806:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "13830:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IRelayHub_$611",
                                      "nodeType": "YulIdentifier",
                                      "src": "13768:37:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13768:70:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "13758:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IRelayHub_$611",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13612:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "13623:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13635:6:17",
                            "type": ""
                          }
                        ],
                        "src": "13559:296:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13959:321:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14005:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14014:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14017:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14007:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14007:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14007:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "13980:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13989:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13976:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13976:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14001:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "13972:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13972:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "13969:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14031:242:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14046:45:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "14077:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14088:1:17",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14073:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14073:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14060:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14060:31:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "14050:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "14138:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14147:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14150:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "14140:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14140:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "14140:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "14110:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14118:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "14107:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14107:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "14104:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "14168:95:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "14235:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "14246:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14231:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14231:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "14255:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_struct$_RelayRequest_$1196_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "14178:52:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14178:85:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "14168:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_struct$_RelayRequest_$1196_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13929:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "13940:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13952:6:17",
                            "type": ""
                          }
                        ],
                        "src": "13861:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14473:930:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14520:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14529:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14532:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14522:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14522:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14522:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "14494:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14503:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14490:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14490:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14515:3:17",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14486:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14486:33:17"
                              },
                              "nodeType": "YulIf",
                              "src": "14483:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14546:242:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14561:45:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "14592:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14603:1:17",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14588:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14588:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14575:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14575:31:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "14565:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "14653:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14662:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14665:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "14655:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14655:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "14655:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "14625:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14633:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "14622:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14622:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "14619:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "14683:95:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "14750:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "14761:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14746:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14746:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "14770:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_struct$_RelayRequest_$1196_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "14693:52:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14693:85:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "14683:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14798:230:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14813:46:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "14844:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14855:2:17",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14840:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14840:18:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "14827:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14827:32:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "14817:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "14906:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14915:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14918:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "14908:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14908:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "14908:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "14878:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14886:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "14875:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14875:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "14872:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "14936:82:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "14990:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "15001:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14986:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14986:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "15010:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "14954:31:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14954:64:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "14936:6:17"
                                    },
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "14944:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15038:230:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15053:46:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "15084:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15095:2:17",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15080:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15080:18:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "15067:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15067:32:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "15057:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "15146:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "15155:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "15158:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "15148:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15148:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "15148:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "15118:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15126:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "15115:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15115:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "15112:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "15176:82:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "15230:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "15241:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15226:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15226:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "15250:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "15194:31:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15194:64:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "15176:6:17"
                                    },
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "15184:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15278:118:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15293:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15307:2:17",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "15297:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "15323:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "15358:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "15369:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15354:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15354:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "15378:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "15333:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15333:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value5",
                                      "nodeType": "YulIdentifier",
                                      "src": "15323:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_struct$_RelayRequest_$1196_calldata_ptrt_bytes_calldata_ptrt_bytes_calldata_ptrt_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14403:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "14414:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14426:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "14434:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "14442:6:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "14450:6:17",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "14458:6:17",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "14466:6:17",
                            "type": ""
                          }
                        ],
                        "src": "14286:1117:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15475:196:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15521:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15530:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15533:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15523:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15523:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15523:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "15496:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15505:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15492:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15492:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15517:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15488:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15488:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "15485:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15547:117:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15562:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15576:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "15566:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "15591:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "15626:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "15637:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15622:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15622:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "15646:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "15601:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15601:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "15591:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15445:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "15456:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "15468:6:17",
                            "type": ""
                          }
                        ],
                        "src": "15409:262:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15754:207:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15800:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15809:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15812:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15802:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15802:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15802:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "15775:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15784:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15771:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15771:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15796:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15767:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15767:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "15764:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15826:128:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15841:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15855:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "15845:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "15870:74:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "15916:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "15927:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15912:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15912:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "15936:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "15880:31:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15880:64:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "15870:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15724:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "15735:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "15747:6:17",
                            "type": ""
                          }
                        ],
                        "src": "15677:284:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16058:332:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16104:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16113:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16116:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "16106:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16106:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16106:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "16079:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16088:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16075:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16075:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16100:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "16071:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16071:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "16068:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16130:117:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16145:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16159:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "16149:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "16174:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "16209:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "16220:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16205:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16205:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "16229:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "16184:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16184:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "16174:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16257:126:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16272:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16286:2:17",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "16276:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "16302:71:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "16345:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "16356:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16341:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16341:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "16365:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "16312:28:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16312:61:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "16302:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16020:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "16031:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "16043:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "16051:6:17",
                            "type": ""
                          }
                        ],
                        "src": "15967:423:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16476:99:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "16520:6:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16528:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "16486:33:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16486:46:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16486:46:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16541:28:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16559:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16564:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16555:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16555:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "16541:10:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "16449:6:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16457:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "16465:10:17",
                            "type": ""
                          }
                        ],
                        "src": "16396:179:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16654:74:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16671:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "16715:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_address_payable_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "16676:38:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16676:45:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16664:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16664:58:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16664:58:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16642:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16649:3:17",
                            "type": ""
                          }
                        ],
                        "src": "16581:147:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16815:61:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16832:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "16863:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "16837:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16837:32:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16825:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16825:45:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16825:45:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16803:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16810:3:17",
                            "type": ""
                          }
                        ],
                        "src": "16734:142:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16937:53:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16954:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "16977:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "16959:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16959:24:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16947:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16947:37:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16947:37:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16925:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16932:3:17",
                            "type": ""
                          }
                        ],
                        "src": "16882:108:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17061:53:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17078:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "17101:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "17083:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17083:24:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17071:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17071:37:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17071:37:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17049:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17056:3:17",
                            "type": ""
                          }
                        ],
                        "src": "16996:118:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17274:608:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17284:68:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17346:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "17298:47:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17298:54:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "17288:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17361:93:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17442:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17447:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17368:73:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17368:86:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "17361:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17463:71:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17528:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "17478:49:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17478:56:17"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "17467:7:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17543:21:17",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "17557:7:17"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "17547:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17633:224:17",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "17647:34:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "17674:6:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "17668:5:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17668:13:17"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "17651:13:17",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "17694:70:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "17745:13:17"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "17760:3:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "17701:43:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17701:63:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "17694:3:17"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "17777:70:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "17840:6:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "17787:52:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17787:60:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "17777:6:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "17595:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17598:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "17592:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17592:13:17"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "17606:18:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "17608:14:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "17617:1:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17620:1:17",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "17613:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17613:9:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "17608:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "17577:14:17",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "17579:10:17",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "17588:1:17",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "17583:1:17",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "17573:284:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17866:10:17",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17873:3:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "17866:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17253:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17260:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "17269:3:17",
                            "type": ""
                          }
                        ],
                        "src": "17150:732:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17947:50:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17964:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "17984:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "17969:14:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17969:21:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17957:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17957:34:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17957:34:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17935:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17942:3:17",
                            "type": ""
                          }
                        ],
                        "src": "17888:109:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18068:53:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18085:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "18108:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "18090:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18090:24:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18078:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18078:37:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18078:37:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18056:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "18063:3:17",
                            "type": ""
                          }
                        ],
                        "src": "18003:118:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18239:191:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18249:67:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18304:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "18309:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "18256:47:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18256:60:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "18249:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "18350:5:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18357:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "18362:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "18326:23:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18326:43:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18326:43:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18378:46:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18389:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "18416:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "18394:21:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18394:29:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18385:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18385:39:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "18378:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "18212:5:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "18219:6:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "18227:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "18235:3:17",
                            "type": ""
                          }
                        ],
                        "src": "18149:281:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18526:270:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18536:52:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18582:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "18550:31:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18550:38:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "18540:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18597:77:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18662:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "18667:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18604:57:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18604:70:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "18597:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "18709:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18716:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18705:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18705:16:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18723:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "18728:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "18683:21:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18683:52:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18683:52:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18744:46:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18755:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "18782:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "18760:21:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18760:29:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18751:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18751:39:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "18744:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18507:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "18514:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "18522:3:17",
                            "type": ""
                          }
                        ],
                        "src": "18436:360:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18910:265:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18920:52:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18966:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "18934:31:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18934:38:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "18924:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18981:95:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19064:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "19069:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18988:75:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18988:88:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "18981:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "19111:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19118:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19107:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19107:16:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19125:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "19130:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "19085:21:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19085:52:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19085:52:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19146:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19157:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "19162:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19153:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19153:16:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "19146:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18891:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "18898:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "18906:3:17",
                            "type": ""
                          }
                        ],
                        "src": "18802:373:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19261:81:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19278:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "19329:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IERC20_$1938_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "19283:45:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19283:52:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19271:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19271:65:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19271:65:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IERC20_$1938_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "19249:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19256:3:17",
                            "type": ""
                          }
                        ],
                        "src": "19181:161:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19431:84:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19448:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "19502:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IForwarder_$273_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "19453:48:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19453:55:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19441:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19441:68:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19441:68:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IForwarder_$273_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "19419:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19426:3:17",
                            "type": ""
                          }
                        ],
                        "src": "19348:167:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19603:83:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19620:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "19673:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IUniswap_$2008_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "19625:47:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19625:54:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19613:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19613:67:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19613:67:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IUniswap_$2008_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "19591:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19598:3:17",
                            "type": ""
                          }
                        ],
                        "src": "19521:165:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19784:272:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "19794:53:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "19841:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "19808:32:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19808:39:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "19798:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19856:78:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19922:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "19927:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19863:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19863:71:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "19856:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "19969:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19976:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19965:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19965:16:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19983:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "19988:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "19943:21:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19943:52:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19943:52:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20004:46:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "20015:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "20042:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "20020:21:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20020:29:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20011:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20011:39:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "20004:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "19765:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19772:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "19780:3:17",
                            "type": ""
                          }
                        ],
                        "src": "19692:364:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20208:183:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20218:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "20284:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20289:2:17",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20225:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20225:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "20218:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "20313:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20318:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20309:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20309:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20322:33:17",
                                    "type": "",
                                    "value": "invalid forwarder for recipient"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20302:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20302:54:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20302:54:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20366:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "20377:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20382:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20373:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20373:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "20366:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "20196:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "20204:3:17",
                            "type": ""
                          }
                        ],
                        "src": "20062:329:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20543:183:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20553:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "20619:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20624:2:17",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20560:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20560:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "20553:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "20648:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20653:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20644:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20644:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20657:33:17",
                                    "type": "",
                                    "value": "This token not supported as fee"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20637:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20637:54:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20637:54:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20701:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "20712:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20717:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20708:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20708:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "20701:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_25c4d1a3ff99c020f0e9e83e8b3e3d05dfaddd2b987303f9cd57adb34433792d_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "20531:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "20539:3:17",
                            "type": ""
                          }
                        ],
                        "src": "20397:329:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20878:180:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20888:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "20954:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20959:2:17",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20895:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20895:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "20888:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "20983:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20988:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20979:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20979:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20992:30:17",
                                    "type": "",
                                    "value": "isTrustedForwarder: reverted"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20972:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20972:51:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20972:51:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21033:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21044:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21049:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21040:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21040:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "21033:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "20866:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "20874:3:17",
                            "type": ""
                          }
                        ],
                        "src": "20732:326:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21210:182:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21220:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21286:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21291:2:17",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21227:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21227:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "21220:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "21315:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21320:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21311:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21311:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21324:32:17",
                                    "type": "",
                                    "value": "TokenPaymaster/Balance to low."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21304:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21304:53:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21304:53:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21367:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21378:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21383:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21374:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21374:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "21367:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_2dff411ca9110b5bbd8f89e6e9bb7e3a9da30fd96d434a60138f3395d1135730_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "21198:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "21206:3:17",
                            "type": ""
                          }
                        ],
                        "src": "21064:328:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21544:165:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21554:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21620:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21625:2:17",
                                    "type": "",
                                    "value": "13"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21561:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21561:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "21554:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "21649:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21654:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21645:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21645:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21658:15:17",
                                    "type": "",
                                    "value": "failed refund"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21638:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21638:36:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21638:36:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21684:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21695:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21700:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21691:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21691:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "21684:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_313f2c731b040432382b587b0cf65ba7b6e869f03bb701593151aa9a51d2bdd8_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "21532:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "21540:3:17",
                            "type": ""
                          }
                        ],
                        "src": "21398:311:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21861:176:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21871:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21937:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21942:2:17",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21878:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21878:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "21871:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "21966:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21971:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21962:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21962:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21975:26:17",
                                    "type": "",
                                    "value": "Forwarder is not trusted"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21955:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21955:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21955:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22012:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22023:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22028:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22019:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22019:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "22012:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "21849:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "21857:3:17",
                            "type": ""
                          }
                        ],
                        "src": "21715:322:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22189:184:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22199:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22265:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22270:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22206:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22206:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "22199:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "22294:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22299:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22290:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22290:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22303:34:17",
                                    "type": "",
                                    "value": "isTrustedForwarder: bad response"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22283:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22283:55:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22283:55:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22348:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22359:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22364:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22355:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22355:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "22348:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "22177:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "22185:3:17",
                            "type": ""
                          }
                        ],
                        "src": "22043:330:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22525:173:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22535:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22601:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22606:2:17",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22542:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22542:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "22535:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "22630:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22635:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22626:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22626:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22639:23:17",
                                    "type": "",
                                    "value": "token balance too low"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22619:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22619:44:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22619:44:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22673:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22684:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22689:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22680:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22680:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "22673:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_b436a453104c967d5dda2f161596a8ee581041d16cd34aefe6d327b6e586ba3c_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "22513:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "22521:3:17",
                            "type": ""
                          }
                        ],
                        "src": "22379:319:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22850:182:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22860:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22926:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22931:2:17",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22867:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22867:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "22860:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "22955:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22960:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22951:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22951:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22964:32:17",
                                    "type": "",
                                    "value": "can only be called by RelayHub"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22944:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22944:53:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22944:53:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23007:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "23018:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23023:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23014:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23014:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "23007:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "22838:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "22846:3:17",
                            "type": ""
                          }
                        ],
                        "src": "22704:328:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23242:1585:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "23252:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "23268:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23273:4:17",
                                    "type": "",
                                    "value": "0xe0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23264:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23264:14:17"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "23256:4:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "23288:191:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "23323:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "23369:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "23380:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23387:4:17",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "23376:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23376:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "23343:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23343:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "23327:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "23440:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "23458:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23463:4:17",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "23454:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23454:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "23406:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23406:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "23406:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "23489:189:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "23522:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "23568:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "23579:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23586:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "23575:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23575:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "23542:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23542:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "23526:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "23639:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "23657:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23662:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "23653:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23653:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "23605:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23605:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "23605:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "23688:192:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "23724:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "23770:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "23781:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23788:4:17",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "23777:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23777:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "23744:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23744:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "23728:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "23841:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "23859:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23864:4:17",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "23855:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23855:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "23807:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23807:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "23807:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "23890:190:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "23924:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "23970:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "23981:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23988:4:17",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "23977:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23977:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "23944:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23944:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "23928:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "24041:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "24059:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24064:4:17",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "24055:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24055:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "24007:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24007:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "24007:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "24090:192:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "24126:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "24172:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "24183:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24190:4:17",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "24179:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24179:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "24146:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24146:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "24130:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "24243:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "24261:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24266:4:17",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "24257:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24257:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "24209:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24209:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "24209:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "24292:301:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "24327:95:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "24398:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "24409:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24416:4:17",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "24405:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24405:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_bytes_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "24361:36:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24361:61:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "24331:12:17",
                                      "type": ""
                                    },
                                    {
                                      "name": "memberValue1",
                                      "nodeType": "YulTypedName",
                                      "src": "24345:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "24447:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24452:4:17",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "24443:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24443:14:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "tail",
                                            "nodeType": "YulIdentifier",
                                            "src": "24463:4:17"
                                          },
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "24469:3:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "24459:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24459:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "24436:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24436:38:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "24436:38:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "24487:95:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "24549:12:17"
                                      },
                                      {
                                        "name": "memberValue1",
                                        "nodeType": "YulIdentifier",
                                        "src": "24563:12:17"
                                      },
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "24577:4:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "24495:53:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24495:87:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nodeType": "YulIdentifier",
                                      "src": "24487:4:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "24603:197:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "24644:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "24690:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "24701:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24708:4:17",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "24697:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24697:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "24664:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24664:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "24648:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "24761:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "24779:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24784:4:17",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "24775:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24775:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "24727:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24727:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "24727:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24810:11:17",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "24817:4:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "24810:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_ForwardRequest_$205_calldata_ptr_to_t_struct$_ForwardRequest_$205_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23221:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "23228:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "23237:3:17",
                            "type": ""
                          }
                        ],
                        "src": "23114:1713:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25045:801:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "25055:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "25071:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25076:4:17",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25067:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25067:14:17"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "25059:4:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "25091:176:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "25138:43:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "25168:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "25175:4:17",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "25164:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25164:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "25158:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25158:23:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "25142:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "25228:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "25246:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "25251:4:17",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "25242:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25242:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "25194:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25194:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "25194:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "25277:182:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "25330:43:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "25360:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "25367:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "25356:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25356:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "25350:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25350:23:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "25334:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "25420:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "25438:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "25443:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "25434:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25434:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "25386:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25386:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "25386:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "25469:183:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "25523:43:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "25553:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "25560:4:17",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "25549:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25549:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "25543:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25543:23:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "25527:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "25613:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "25631:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "25636:4:17",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "25627:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25627:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "25579:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25579:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "25579:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "25662:177:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "25710:43:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "25740:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "25747:4:17",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "25736:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25736:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "25730:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25730:23:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "25714:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "25800:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "25818:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "25823:4:17",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "25814:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "25814:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "25766:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25766:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "25766:63:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_GasAndDataLimits_$286_memory_ptr_to_t_struct$_GasAndDataLimits_$286_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "25032:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "25039:3:17",
                            "type": ""
                          }
                        ],
                        "src": "24913:933:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26034:1832:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "26044:28:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "26060:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26065:6:17",
                                    "type": "",
                                    "value": "0x0100"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26056:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26056:16:17"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "26048:4:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "26082:195:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "26121:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "26167:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "26178:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "26185:4:17",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "26174:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26174:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "26141:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26141:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "26125:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "26238:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "26256:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "26261:4:17",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "26252:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26252:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "26204:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26204:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "26204:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "26287:198:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "26329:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "26375:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "26386:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "26393:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "26382:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26382:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "26349:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26349:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "26333:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "26446:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "26464:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "26469:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "26460:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26460:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "26412:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26412:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "26412:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "26495:199:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "26538:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "26584:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "26595:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "26602:4:17",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "26591:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26591:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "26558:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26558:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "26542:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "26655:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "26673:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "26678:4:17",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "26669:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26669:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "26621:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26621:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "26621:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "26704:198:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "26746:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "26792:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "26803:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "26810:4:17",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "26799:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26799:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "26766:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26766:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "26750:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "26863:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "26881:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "26886:4:17",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "26877:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26877:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "26829:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26829:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "26829:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "26912:196:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "26952:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "26998:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "27009:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "27016:4:17",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "27005:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27005:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "26972:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26972:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "26956:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "27069:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "27087:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "27092:4:17",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "27083:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27083:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "27035:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27035:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "27035:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "27118:196:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "27158:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "27204:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "27215:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "27222:4:17",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "27211:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27211:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "27178:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27178:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "27162:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "27275:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "27293:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "27298:4:17",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "27289:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27289:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "27241:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27241:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "27241:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "27324:310:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "27368:95:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "27439:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "27450:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "27457:4:17",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "27446:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27446:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_bytes_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "27402:36:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27402:61:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "27372:12:17",
                                      "type": ""
                                    },
                                    {
                                      "name": "memberValue1",
                                      "nodeType": "YulTypedName",
                                      "src": "27386:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "27488:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "27493:4:17",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "27484:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27484:14:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "tail",
                                            "nodeType": "YulIdentifier",
                                            "src": "27504:4:17"
                                          },
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "27510:3:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "27500:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27500:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "27477:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27477:38:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "27477:38:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "27528:95:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "27590:12:17"
                                      },
                                      {
                                        "name": "memberValue1",
                                        "nodeType": "YulIdentifier",
                                        "src": "27604:12:17"
                                      },
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "27618:4:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "27536:53:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27536:87:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nodeType": "YulIdentifier",
                                      "src": "27528:4:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "27644:195:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "27683:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "27729:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "27740:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "27747:4:17",
                                            "type": "",
                                            "value": "0xe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "27736:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27736:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "27703:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27703:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "27687:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "27800:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "27818:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "27823:4:17",
                                            "type": "",
                                            "value": "0xe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "27814:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27814:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "27766:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27766:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "27766:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27849:11:17",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "27856:4:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "27849:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_RelayData_$1191_calldata_ptr_to_t_struct$_RelayData_$1191_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26013:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "26020:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "26029:3:17",
                            "type": ""
                          }
                        ],
                        "src": "25914:1952:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28064:1832:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "28074:28:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "28090:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28095:6:17",
                                    "type": "",
                                    "value": "0x0100"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "28086:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28086:16:17"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "28078:4:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "28112:195:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "28151:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "28197:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "28208:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "28215:4:17",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "28204:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "28204:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "28171:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28171:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "28155:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "28268:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "28286:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "28291:4:17",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "28282:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "28282:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "28234:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28234:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "28234:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "28317:198:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "28359:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "28405:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "28416:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "28423:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "28412:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "28412:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "28379:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28379:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "28363:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "28476:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "28494:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "28499:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "28490:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "28490:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "28442:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28442:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "28442:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "28525:199:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "28568:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "28614:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "28625:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "28632:4:17",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "28621:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "28621:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "28588:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28588:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "28572:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "28685:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "28703:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "28708:4:17",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "28699:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "28699:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "28651:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28651:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "28651:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "28734:198:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "28776:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "28822:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "28833:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "28840:4:17",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "28829:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "28829:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "28796:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28796:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "28780:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "28893:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "28911:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "28916:4:17",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "28907:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "28907:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "28859:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28859:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "28859:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "28942:196:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "28982:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "29028:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "29039:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "29046:4:17",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "29035:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29035:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "29002:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29002:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "28986:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "29099:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "29117:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "29122:4:17",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "29113:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29113:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "29065:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29065:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "29065:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "29148:196:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "29188:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "29234:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "29245:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "29252:4:17",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "29241:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29241:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "29208:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29208:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "29192:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "29305:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "29323:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "29328:4:17",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "29319:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29319:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "29271:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29271:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "29271:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "29354:310:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "29398:95:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "29469:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "29480:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "29487:4:17",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "29476:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29476:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_bytes_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "29432:36:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29432:61:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "29402:12:17",
                                      "type": ""
                                    },
                                    {
                                      "name": "memberValue1",
                                      "nodeType": "YulTypedName",
                                      "src": "29416:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "29518:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "29523:4:17",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "29514:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29514:14:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "tail",
                                            "nodeType": "YulIdentifier",
                                            "src": "29534:4:17"
                                          },
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "29540:3:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "29530:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29530:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "29507:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29507:38:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "29507:38:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "29558:95:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "29620:12:17"
                                      },
                                      {
                                        "name": "memberValue1",
                                        "nodeType": "YulIdentifier",
                                        "src": "29634:12:17"
                                      },
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "29648:4:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "29566:53:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29566:87:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nodeType": "YulIdentifier",
                                      "src": "29558:4:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "29674:195:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "29713:70:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "29759:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "29770:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "29777:4:17",
                                            "type": "",
                                            "value": "0xe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "29766:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29766:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "29733:25:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29733:50:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "29717:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "29830:12:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "29848:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "29853:4:17",
                                            "type": "",
                                            "value": "0xe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "29844:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29844:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "29796:33:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29796:63:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "29796:63:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "29879:11:17",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "29886:4:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "29879:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_RelayData_$1191_calldata_ptr_to_t_struct$_RelayData_$1191_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "28043:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "28050:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "28059:3:17",
                            "type": ""
                          }
                        ],
                        "src": "27934:1962:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30106:757:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "30116:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30132:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30137:4:17",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30128:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30128:14:17"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "30120:4:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "30152:342:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "30190:103:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "30269:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "30280:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "30287:4:17",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "30276:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "30276:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_struct$_ForwardRequest_$205_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "30210:58:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30210:83:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "30194:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "30318:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "30323:4:17",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "30314:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "30314:14:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "tail",
                                            "nodeType": "YulIdentifier",
                                            "src": "30334:4:17"
                                          },
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "30340:3:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "30330:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "30330:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "30307:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30307:38:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "30307:38:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "30358:125:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "30464:12:17"
                                      },
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "30478:4:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_struct$_ForwardRequest_$205_calldata_ptr_to_t_struct$_ForwardRequest_$205_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "30366:97:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30366:117:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nodeType": "YulIdentifier",
                                      "src": "30358:4:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "30504:332:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "30544:99:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "30619:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "30630:5:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "30637:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "30626:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "30626:16:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldata_access_t_struct$_RelayData_$1191_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "30564:54:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30564:79:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "30548:12:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "30668:3:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "30673:4:17",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "30664:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "30664:14:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "tail",
                                            "nodeType": "YulIdentifier",
                                            "src": "30684:4:17"
                                          },
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "30690:3:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "30680:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "30680:14:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "30657:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30657:38:17"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "30657:38:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "30708:117:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "30806:12:17"
                                      },
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "30820:4:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_struct$_RelayData_$1191_calldata_ptr_to_t_struct$_RelayData_$1191_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "30716:89:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30716:109:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "tail",
                                      "nodeType": "YulIdentifier",
                                      "src": "30708:4:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30846:11:17",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "30853:4:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "30846:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_RelayRequest_$1196_calldata_ptr_to_t_struct$_RelayRequest_$1196_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "30085:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "30092:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "30101:3:17",
                            "type": ""
                          }
                        ],
                        "src": "29970:893:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30924:53:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30941:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "30964:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "30946:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30946:24:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30934:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30934:37:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30934:37:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "30912:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "30919:3:17",
                            "type": ""
                          }
                        ],
                        "src": "30869:108:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31048:53:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "31065:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "31088:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "31070:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31070:24:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "31058:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31058:37:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "31058:37:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "31036:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "31043:3:17",
                            "type": ""
                          }
                        ],
                        "src": "30983:118:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31168:51:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "31185:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "31206:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "31190:15:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31190:22:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "31178:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31178:35:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "31178:35:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "31156:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "31163:3:17",
                            "type": ""
                          }
                        ],
                        "src": "31107:112:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31359:137:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31370:100:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "31457:6:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "31466:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "31377:79:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31377:93:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "31370:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31480:10:17",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "31487:3:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "31480:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "31338:3:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "31344:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "31355:3:17",
                            "type": ""
                          }
                        ],
                        "src": "31225:271:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31600:124:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31610:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "31622:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "31633:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "31618:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31618:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "31610:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "31690:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "31703:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "31714:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "31699:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31699:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "31646:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31646:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "31646:71:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "31572:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "31584:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "31595:4:17",
                            "type": ""
                          }
                        ],
                        "src": "31502:222:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31836:132:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31846:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "31858:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "31869:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "31854:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31854:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "31846:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "31934:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "31947:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "31958:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "31943:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31943:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "31882:51:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31882:79:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "31882:79:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "31808:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "31820:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "31831:4:17",
                            "type": ""
                          }
                        ],
                        "src": "31730:238:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32136:296:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32146:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "32158:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32169:2:17",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32154:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32154:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "32146:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "32226:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32239:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "32250:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "32235:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32235:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "32182:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32182:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32182:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "32315:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32328:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "32339:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "32324:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32324:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "32263:51:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32263:80:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32263:80:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "32397:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32410:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "32421:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "32406:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32406:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "32353:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32353:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32353:72:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "32092:9:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "32104:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "32112:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "32120:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "32131:4:17",
                            "type": ""
                          }
                        ],
                        "src": "31974:458:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32708:624:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32718:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "32730:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32741:3:17",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32726:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32726:19:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "32718:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "32799:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32812:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "32823:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "32808:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32808:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "32755:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32755:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32755:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "32888:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32901:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "32912:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "32897:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32897:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "32836:51:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32836:80:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32836:80:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "32970:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32983:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "32994:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "32979:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32979:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "32926:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32926:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32926:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "33052:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33065:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33076:2:17",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33061:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33061:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33008:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33008:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33008:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "33130:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33143:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33154:3:17",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33139:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33139:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33090:39:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33090:69:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33090:69:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "33213:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33226:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33237:3:17",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33222:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33222:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33169:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33169:73:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33169:73:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "33296:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33309:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33320:3:17",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33305:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33305:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33252:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33252:73:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33252:73:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "32632:9:17",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "32644:6:17",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "32652:6:17",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "32660:6:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "32668:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "32676:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "32684:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "32692:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "32703:4:17",
                            "type": ""
                          }
                        ],
                        "src": "32438:894:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33492:288:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33502:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "33514:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33525:2:17",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33510:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33510:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "33502:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "33582:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33595:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33606:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33591:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33591:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33538:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33538:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33538:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "33663:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33676:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33687:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33672:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33672:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33619:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33619:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33619:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "33745:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33758:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33769:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33754:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33754:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33701:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33701:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33701:72:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "33448:9:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "33460:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "33468:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "33476:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "33487:4:17",
                            "type": ""
                          }
                        ],
                        "src": "33338:442:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33912:206:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33922:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "33934:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33945:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33930:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33930:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "33922:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "34002:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34015:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34026:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "34011:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34011:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33958:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33958:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33958:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "34083:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34096:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34107:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "34092:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34092:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "34039:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34039:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "34039:72:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "33876:9:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "33888:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "33896:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "33907:4:17",
                            "type": ""
                          }
                        ],
                        "src": "33786:332:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34338:403:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34348:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "34360:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34371:3:17",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "34356:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34356:19:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "34348:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "34429:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34442:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34453:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "34438:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34438:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "34385:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34385:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "34385:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "34510:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34523:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34534:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "34519:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34519:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "34466:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34466:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "34466:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "34607:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34620:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34631:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "34616:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34616:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IERC20_$1938_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "34548:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34548:87:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "34548:87:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "34706:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34719:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34730:2:17",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "34715:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34715:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IUniswap_$2008_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "34645:60:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34645:89:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "34645:89:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_contract$_IERC20_$1938_t_contract$_IUniswap_$2008__to_t_address_t_uint256_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "34286:9:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "34298:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "34306:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "34314:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "34322:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "34333:4:17",
                            "type": ""
                          }
                        ],
                        "src": "34124:617:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34885:269:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34895:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "34907:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34918:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "34903:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34903:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "34895:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34942:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34953:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "34938:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34938:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "34961:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34967:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "34957:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34957:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "34931:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34931:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "34931:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "34987:84:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "35057:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "35066:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "34995:61:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34995:76:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "34987:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "35119:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "35132:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "35143:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "35128:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35128:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "35081:37:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35081:66:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35081:66:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_memory_ptr_t_bool__to_t_bytes_memory_ptr_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "34849:9:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "34861:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "34869:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "34880:4:17",
                            "type": ""
                          }
                        ],
                        "src": "34747:407:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35318:238:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35328:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "35340:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35351:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "35336:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35336:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "35328:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "35423:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "35436:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "35447:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "35432:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35432:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IERC20_$1938_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "35364:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35364:86:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35364:86:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "35521:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "35534:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "35545:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "35530:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35530:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IUniswap_$2008_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "35460:60:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35460:89:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35460:89:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$1938_t_contract$_IUniswap_$2008__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "35282:9:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "35294:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "35302:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "35313:4:17",
                            "type": ""
                          }
                        ],
                        "src": "35160:396:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35678:142:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35688:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "35700:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35711:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "35696:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35696:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "35688:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "35786:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "35799:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "35810:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "35795:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35795:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IForwarder_$273_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "35724:61:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35724:89:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35724:89:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IForwarder_$273__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "35650:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "35662:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "35673:4:17",
                            "type": ""
                          }
                        ],
                        "src": "35562:258:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35944:195:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35954:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "35966:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35977:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "35962:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35962:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "35954:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "36001:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36012:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "35997:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35997:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "36020:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "36026:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "36016:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36016:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "35990:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35990:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35990:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "36046:86:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "36118:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "36127:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "36054:63:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36054:78:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "36046:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "35916:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "35928:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "35939:4:17",
                            "type": ""
                          }
                        ],
                        "src": "35826:313:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36316:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "36326:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "36338:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36349:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "36334:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36334:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "36326:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "36373:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36384:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36369:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36369:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "36392:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "36398:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "36388:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36388:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36362:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36362:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36362:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "36418:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "36552:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "36426:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36426:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "36418:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "36296:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "36311:4:17",
                            "type": ""
                          }
                        ],
                        "src": "36145:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "36741:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "36751:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "36763:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "36774:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "36759:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36759:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "36751:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "36798:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "36809:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "36794:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36794:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "36817:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "36823:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "36813:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "36813:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "36787:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36787:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "36787:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "36843:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "36977:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_25c4d1a3ff99c020f0e9e83e8b3e3d05dfaddd2b987303f9cd57adb34433792d_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "36851:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "36851:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "36843:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_25c4d1a3ff99c020f0e9e83e8b3e3d05dfaddd2b987303f9cd57adb34433792d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "36721:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "36736:4:17",
                            "type": ""
                          }
                        ],
                        "src": "36570:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37166:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "37176:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "37188:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "37199:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "37184:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37184:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "37176:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "37223:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37234:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37219:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37219:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "37242:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "37248:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "37238:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37238:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37212:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37212:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37212:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "37268:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "37402:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "37276:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37276:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "37268:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "37146:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "37161:4:17",
                            "type": ""
                          }
                        ],
                        "src": "36995:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "37591:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "37601:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "37613:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "37624:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "37609:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37609:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "37601:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "37648:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "37659:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "37644:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37644:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "37667:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "37673:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "37663:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "37663:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "37637:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37637:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "37637:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "37693:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "37827:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_2dff411ca9110b5bbd8f89e6e9bb7e3a9da30fd96d434a60138f3395d1135730_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "37701:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "37701:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "37693:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_2dff411ca9110b5bbd8f89e6e9bb7e3a9da30fd96d434a60138f3395d1135730__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "37571:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "37586:4:17",
                            "type": ""
                          }
                        ],
                        "src": "37420:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38016:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "38026:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "38038:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "38049:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "38034:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38034:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "38026:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "38073:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38084:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38069:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38069:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "38092:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "38098:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "38088:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38088:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38062:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38062:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38062:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "38118:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "38252:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_313f2c731b040432382b587b0cf65ba7b6e869f03bb701593151aa9a51d2bdd8_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "38126:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38126:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "38118:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_313f2c731b040432382b587b0cf65ba7b6e869f03bb701593151aa9a51d2bdd8__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "37996:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "38011:4:17",
                            "type": ""
                          }
                        ],
                        "src": "37845:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38441:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "38451:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "38463:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "38474:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "38459:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38459:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "38451:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "38498:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38509:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38494:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38494:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "38517:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "38523:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "38513:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38513:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38487:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38487:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38487:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "38543:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "38677:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "38551:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38551:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "38543:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "38421:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "38436:4:17",
                            "type": ""
                          }
                        ],
                        "src": "38270:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "38866:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "38876:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "38888:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "38899:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "38884:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38884:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "38876:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "38923:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "38934:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "38919:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38919:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "38942:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "38948:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "38938:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38938:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "38912:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38912:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "38912:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "38968:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "39102:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "38976:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38976:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "38968:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "38846:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "38861:4:17",
                            "type": ""
                          }
                        ],
                        "src": "38695:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39291:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "39301:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "39313:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "39324:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "39309:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39309:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "39301:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "39348:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "39359:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "39344:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39344:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "39367:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "39373:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "39363:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39363:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "39337:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39337:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "39337:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "39393:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "39527:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_b436a453104c967d5dda2f161596a8ee581041d16cd34aefe6d327b6e586ba3c_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "39401:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39401:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "39393:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b436a453104c967d5dda2f161596a8ee581041d16cd34aefe6d327b6e586ba3c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "39271:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "39286:4:17",
                            "type": ""
                          }
                        ],
                        "src": "39120:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "39716:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "39726:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "39738:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "39749:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "39734:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39734:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "39726:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "39773:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "39784:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "39769:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39769:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "39792:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "39798:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "39788:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "39788:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "39762:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39762:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "39762:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "39818:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "39952:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "39826:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "39826:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "39818:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "39696:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "39711:4:17",
                            "type": ""
                          }
                        ],
                        "src": "39545:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "40134:191:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "40144:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "40156:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "40167:3:17",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "40152:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40152:19:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "40144:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "40291:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "40304:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "40315:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "40300:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "40300:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_GasAndDataLimits_$286_memory_ptr_to_t_struct$_GasAndDataLimits_$286_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "40181:109:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40181:137:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "40181:137:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_GasAndDataLimits_$286_memory_ptr__to_t_struct$_GasAndDataLimits_$286_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "40106:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "40118:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "40129:4:17",
                            "type": ""
                          }
                        ],
                        "src": "39970:355:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "40491:237:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "40501:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "40513:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "40524:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "40509:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40509:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "40501:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "40548:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "40559:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "40544:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "40544:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "40567:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "40573:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "40563:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "40563:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "40537:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40537:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "40537:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "40593:128:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "40707:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "40716:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_RelayRequest_$1196_calldata_ptr_to_t_struct$_RelayRequest_$1196_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "40601:105:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40601:120:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "40593:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_RelayRequest_$1196_calldata_ptr__to_t_struct$_RelayRequest_$1196_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "40463:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "40475:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "40486:4:17",
                            "type": ""
                          }
                        ],
                        "src": "40331:397:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "40832:124:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "40842:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "40854:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "40865:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "40850:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40850:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "40842:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "40922:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "40935:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "40946:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "40931:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "40931:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "40878:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40878:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "40878:71:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "40804:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "40816:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "40827:4:17",
                            "type": ""
                          }
                        ],
                        "src": "40734:222:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "41104:222:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "41114:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "41126:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "41137:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "41122:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41122:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "41114:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "41194:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "41207:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "41218:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "41203:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "41203:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "41150:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41150:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "41150:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "41291:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "41304:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "41315:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "41300:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "41300:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "41231:59:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41231:88:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "41231:88:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address_payable__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "41068:9:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "41080:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "41088:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "41099:4:17",
                            "type": ""
                          }
                        ],
                        "src": "40962:364:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "41508:307:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "41518:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "41530:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "41541:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "41526:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41526:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "41518:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "41598:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "41611:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "41622:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "41607:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "41607:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "41554:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41554:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "41554:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "41646:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "41657:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "41642:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "41642:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "41666:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "41672:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "41662:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "41662:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "41635:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41635:48:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "41635:48:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "41692:116:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "41794:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "41803:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "41700:93:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41700:108:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "41692:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "41472:9:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "41484:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "41492:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "41503:4:17",
                            "type": ""
                          }
                        ],
                        "src": "41332:483:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "42003:313:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "42013:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "42025:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42036:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "42021:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42021:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "42013:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "42093:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "42106:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "42117:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "42102:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "42102:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "42049:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42049:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42049:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "42141:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "42152:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "42137:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "42137:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "42161:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "42167:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "42157:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "42157:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "42130:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42130:48:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42130:48:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "42187:122:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "42295:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "42304:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_RelayData_$1191_calldata_ptr_to_t_struct$_RelayData_$1191_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "42195:99:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42195:114:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "42187:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_struct$_RelayData_$1191_calldata_ptr__to_t_uint256_t_struct$_RelayData_$1191_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "41967:9:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "41979:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "41987:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "41998:4:17",
                            "type": ""
                          }
                        ],
                        "src": "41821:495:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "42590:563:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "42600:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "42612:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "42623:3:17",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "42608:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42608:19:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "42600:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "42681:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "42694:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "42705:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "42690:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "42690:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "42637:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42637:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42637:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "42762:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "42775:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "42786:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "42771:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "42771:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "42718:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42718:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42718:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "42811:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "42822:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "42807:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "42807:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "42831:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "42837:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "42827:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "42827:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "42800:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42800:48:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42800:48:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "42857:116:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "42959:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "42968:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "42865:93:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42865:108:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "42857:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "43035:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "43048:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43059:2:17",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "43044:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43044:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "42983:51:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "42983:80:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "42983:80:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "43117:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "43130:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43141:3:17",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "43126:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43126:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "43073:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43073:73:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43073:73:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_payable_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "42530:9:17",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "42542:6:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "42550:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "42558:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "42566:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "42574:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "42585:4:17",
                            "type": ""
                          }
                        ],
                        "src": "42322:831:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "43341:371:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "43351:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "43363:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43374:3:17",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "43359:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43359:19:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "43351:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "43432:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "43445:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43456:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "43441:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43441:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "43388:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43388:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43388:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "43513:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "43526:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43537:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "43522:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43522:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "43469:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43469:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43469:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "43595:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "43608:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43619:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "43604:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43604:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "43551:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43551:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43551:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "43677:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "43690:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43701:2:17",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "43686:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43686:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "43633:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43633:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "43633:72:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "43289:9:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "43301:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "43309:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "43317:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "43325:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "43336:4:17",
                            "type": ""
                          }
                        ],
                        "src": "43159:553:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "43808:433:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "43818:51:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr_to_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "43857:11:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "43844:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43844:25:17"
                              },
                              "variables": [
                                {
                                  "name": "rel_offset_of_tail",
                                  "nodeType": "YulTypedName",
                                  "src": "43822:18:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "43963:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "43972:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "43975:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "43965:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "43965:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "43965:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "rel_offset_of_tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "43892:18:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "calldatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "43920:12:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "43920:14:17"
                                              },
                                              {
                                                "name": "base_ref",
                                                "nodeType": "YulIdentifier",
                                                "src": "43936:8:17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "43916:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "43916:29:17"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "43951:4:17",
                                                "type": "",
                                                "value": "0x20"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "43957:1:17",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "43947:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "43947:12:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "43912:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "43912:48:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "43888:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43888:73:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "43881:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43881:81:17"
                              },
                              "nodeType": "YulIf",
                              "src": "43878:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "43988:41:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "44000:8:17"
                                  },
                                  {
                                    "name": "rel_offset_of_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "44010:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "43996:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43996:33:17"
                              },
                              "variableNames": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "43988:4:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "44039:28:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "addr",
                                    "nodeType": "YulIdentifier",
                                    "src": "44062:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "44049:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44049:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "44039:6:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "44110:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "44119:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "44122:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "44112:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "44112:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "44112:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "44082:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "44090:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "44079:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44079:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "44076:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "44135:21:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "addr",
                                    "nodeType": "YulIdentifier",
                                    "src": "44147:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "44153:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "44143:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44143:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "44135:4:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "44218:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "44227:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "44230:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "44220:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "44220:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "44220:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "addr",
                                    "nodeType": "YulIdentifier",
                                    "src": "44172:4:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "calldatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "44182:12:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "44182:14:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "44202:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "44210:4:17",
                                            "type": "",
                                            "value": "0x01"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "44198:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "44198:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "44178:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44178:38:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "sgt",
                                  "nodeType": "YulIdentifier",
                                  "src": "44168:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44168:49:17"
                              },
                              "nodeType": "YulIf",
                              "src": "44165:2:17"
                            }
                          ]
                        },
                        "name": "access_calldata_tail_t_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base_ref",
                            "nodeType": "YulTypedName",
                            "src": "43769:8:17",
                            "type": ""
                          },
                          {
                            "name": "ptr_to_tail",
                            "nodeType": "YulTypedName",
                            "src": "43779:11:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "addr",
                            "nodeType": "YulTypedName",
                            "src": "43795:4:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "43801:6:17",
                            "type": ""
                          }
                        ],
                        "src": "43718:523:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "44351:228:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "44361:51:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr_to_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "44400:11:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "44387:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44387:25:17"
                              },
                              "variables": [
                                {
                                  "name": "rel_offset_of_tail",
                                  "nodeType": "YulTypedName",
                                  "src": "44365:18:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "44506:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "44515:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "44518:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "44508:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "44508:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "44508:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "rel_offset_of_tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "44435:18:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "calldatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "44463:12:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "44463:14:17"
                                              },
                                              {
                                                "name": "base_ref",
                                                "nodeType": "YulIdentifier",
                                                "src": "44479:8:17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "44459:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "44459:29:17"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "44494:4:17",
                                                "type": "",
                                                "value": "0xe0"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "44500:1:17",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "44490:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "44490:12:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "44455:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "44455:48:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "44431:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44431:73:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "44424:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44424:81:17"
                              },
                              "nodeType": "YulIf",
                              "src": "44421:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "44531:41:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "44543:8:17"
                                  },
                                  {
                                    "name": "rel_offset_of_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "44553:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "44539:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44539:33:17"
                              },
                              "variableNames": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "44531:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "access_calldata_tail_t_struct$_ForwardRequest_$205_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base_ref",
                            "nodeType": "YulTypedName",
                            "src": "44320:8:17",
                            "type": ""
                          },
                          {
                            "name": "ptr_to_tail",
                            "nodeType": "YulTypedName",
                            "src": "44330:11:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "addr",
                            "nodeType": "YulTypedName",
                            "src": "44346:4:17",
                            "type": ""
                          }
                        ],
                        "src": "44247:332:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "44685:230:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "44695:51:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr_to_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "44734:11:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "44721:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44721:25:17"
                              },
                              "variables": [
                                {
                                  "name": "rel_offset_of_tail",
                                  "nodeType": "YulTypedName",
                                  "src": "44699:18:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "44842:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "44851:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "44854:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "44844:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "44844:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "44844:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "rel_offset_of_tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "44769:18:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "calldatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "44797:12:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "44797:14:17"
                                              },
                                              {
                                                "name": "base_ref",
                                                "nodeType": "YulIdentifier",
                                                "src": "44813:8:17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "44793:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "44793:29:17"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "44828:6:17",
                                                "type": "",
                                                "value": "0x0100"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "44836:1:17",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "44824:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "44824:14:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "44789:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "44789:50:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "44765:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "44765:75:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "44758:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44758:83:17"
                              },
                              "nodeType": "YulIf",
                              "src": "44755:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "44867:41:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "44879:8:17"
                                  },
                                  {
                                    "name": "rel_offset_of_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "44889:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "44875:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44875:33:17"
                              },
                              "variableNames": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "44867:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "access_calldata_tail_t_struct$_RelayData_$1191_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base_ref",
                            "nodeType": "YulTypedName",
                            "src": "44654:8:17",
                            "type": ""
                          },
                          {
                            "name": "ptr_to_tail",
                            "nodeType": "YulTypedName",
                            "src": "44664:11:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "addr",
                            "nodeType": "YulTypedName",
                            "src": "44680:4:17",
                            "type": ""
                          }
                        ],
                        "src": "44585:330:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "44961:238:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "44971:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "44987:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "44981:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "44981:9:17"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "44971:6:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "44999:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "45021:6:17"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "45029:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "45017:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45017:17:17"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "45003:10:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "45145:17:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error",
                                        "nodeType": "YulIdentifier",
                                        "src": "45147:11:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "45147:13:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "45147:13:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45088:10:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "45100:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "45085:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45085:34:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45124:10:17"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "45136:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "45121:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "45121:22:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "45082:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45082:62:17"
                              },
                              "nodeType": "YulIf",
                              "src": "45079:2:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "45178:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "45182:10:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45171:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45171:22:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45171:22:17"
                            }
                          ]
                        },
                        "name": "allocateMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "44945:4:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "44954:6:17",
                            "type": ""
                          }
                        ],
                        "src": "44921:278:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "45287:224:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "45392:17:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error",
                                        "nodeType": "YulIdentifier",
                                        "src": "45394:11:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "45394:13:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "45394:13:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "45364:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "45372:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "45361:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45361:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "45358:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "45419:25:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "45431:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "45439:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "45427:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45427:17:17"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "45419:4:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "45481:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "45493:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "45499:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "45489:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45489:15:17"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "45481:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "45271:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "45282:4:17",
                            "type": ""
                          }
                        ],
                        "src": "45205:306:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "45599:224:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "45704:17:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error",
                                        "nodeType": "YulIdentifier",
                                        "src": "45706:11:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "45706:13:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "45706:13:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "45676:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "45684:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "45673:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45673:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "45670:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "45731:25:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "45743:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "45751:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "45739:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45739:17:17"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "45731:4:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "45793:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "45805:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "45811:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "45801:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45801:15:17"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "45793:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "45583:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "45594:4:17",
                            "type": ""
                          }
                        ],
                        "src": "45517:306:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "45895:260:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "46000:17:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error",
                                        "nodeType": "YulIdentifier",
                                        "src": "46002:11:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "46002:13:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "46002:13:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "45972:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "45980:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "45969:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45969:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "45966:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "46047:41:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "46063:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "46071:4:17",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "46059:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46059:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "46082:4:17",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "46078:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "46078:9:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "46055:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46055:33:17"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "46047:4:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "46125:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "46137:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "46143:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "46133:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46133:15:17"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "46125:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "45879:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "45890:4:17",
                            "type": ""
                          }
                        ],
                        "src": "45829:326:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46233:60:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "46243:11:17",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "46251:3:17"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "46243:4:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "46264:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "46276:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "46281:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "46272:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46272:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "46264:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "46220:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "46228:4:17",
                            "type": ""
                          }
                        ],
                        "src": "46161:132:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46373:40:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "46384:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "46400:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "46394:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46394:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "46384:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "46356:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "46366:6:17",
                            "type": ""
                          }
                        ],
                        "src": "46299:114:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46477:40:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "46488:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "46504:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "46498:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46498:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "46488:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "46460:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "46470:6:17",
                            "type": ""
                          }
                        ],
                        "src": "46419:98:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46582:40:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "46593:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "46609:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "46603:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46603:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "46593:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "46565:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "46575:6:17",
                            "type": ""
                          }
                        ],
                        "src": "46523:99:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46703:38:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "46713:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "46725:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "46730:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "46721:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46721:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "46713:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "46690:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "46698:4:17",
                            "type": ""
                          }
                        ],
                        "src": "46628:113:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46858:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "46875:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "46880:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "46868:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46868:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "46868:19:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "46896:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "46915:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "46920:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "46911:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "46911:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "46896:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "46830:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "46835:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "46846:11:17",
                            "type": ""
                          }
                        ],
                        "src": "46747:184:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47022:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "47039:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "47044:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "47032:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47032:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "47032:19:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "47060:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "47079:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "47084:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "47075:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47075:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "47060:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "46994:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "46999:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "47010:11:17",
                            "type": ""
                          }
                        ],
                        "src": "46937:158:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47196:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "47213:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "47218:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "47206:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47206:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "47206:19:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "47234:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "47253:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "47258:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "47249:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47249:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "47234:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "47168:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "47173:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "47184:11:17",
                            "type": ""
                          }
                        ],
                        "src": "47101:168:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47388:34:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "47398:18:17",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "47413:3:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "47398:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "47360:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "47365:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "47376:11:17",
                            "type": ""
                          }
                        ],
                        "src": "47275:147:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47524:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "47541:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "47546:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "47534:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47534:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "47534:19:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "47562:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "47581:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "47586:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "47577:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47577:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "47562:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "47496:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "47501:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "47512:11:17",
                            "type": ""
                          }
                        ],
                        "src": "47428:169:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47661:64:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "47671:48:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "47701:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "47710:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "47715:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "47706:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47706:12:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "47680:20:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47680:39:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "47671:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "calldata_access_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "baseRef",
                            "nodeType": "YulTypedName",
                            "src": "47638:7:17",
                            "type": ""
                          },
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "47647:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "47655:5:17",
                            "type": ""
                          }
                        ],
                        "src": "47603:122:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47809:435:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "47819:43:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "47858:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "47845:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47845:17:17"
                              },
                              "variables": [
                                {
                                  "name": "rel_offset_of_tail",
                                  "nodeType": "YulTypedName",
                                  "src": "47823:18:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "47956:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "47965:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "47968:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "47958:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "47958:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "47958:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "rel_offset_of_tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "47885:18:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "calldatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "47913:12:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "47913:14:17"
                                              },
                                              {
                                                "name": "base_ref",
                                                "nodeType": "YulIdentifier",
                                                "src": "47929:8:17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "47909:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "47909:29:17"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "47944:4:17",
                                                "type": "",
                                                "value": "0x20"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "47950:1:17",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "47940:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "47940:12:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "47905:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "47905:48:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "47881:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "47881:73:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "47874:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47874:81:17"
                              },
                              "nodeType": "YulIf",
                              "src": "47871:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "47981:42:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "rel_offset_of_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "47994:18:17"
                                  },
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "48014:8:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "47990:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "47990:33:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "47981:5:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "48033:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "48056:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "48043:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48043:19:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "48033:6:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "48071:25:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "48084:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "48091:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "48080:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48080:16:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "48071:5:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "48139:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "48148:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "48151:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "48141:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "48141:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "48141:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "48111:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "48119:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "48108:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48108:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "48105:2:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "48221:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "48230:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "48233:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "48223:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "48223:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "48223:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "48171:8:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "calldatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "48185:12:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48185:14:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "48205:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "48213:4:17",
                                            "type": "",
                                            "value": "0x01"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "48201:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48201:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "48181:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48181:38:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "sgt",
                                  "nodeType": "YulIdentifier",
                                  "src": "48167:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48167:53:17"
                              },
                              "nodeType": "YulIf",
                              "src": "48164:2:17"
                            }
                          ]
                        },
                        "name": "calldata_access_t_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base_ref",
                            "nodeType": "YulTypedName",
                            "src": "47777:8:17",
                            "type": ""
                          },
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "47787:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "47795:5:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "47802:6:17",
                            "type": ""
                          }
                        ],
                        "src": "47731:513:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "48342:221:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "48352:43:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "48391:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "48378:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48378:17:17"
                              },
                              "variables": [
                                {
                                  "name": "rel_offset_of_tail",
                                  "nodeType": "YulTypedName",
                                  "src": "48356:18:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "48489:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "48498:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "48501:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "48491:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "48491:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "48491:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "rel_offset_of_tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "48418:18:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "calldatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "48446:12:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "48446:14:17"
                                              },
                                              {
                                                "name": "base_ref",
                                                "nodeType": "YulIdentifier",
                                                "src": "48462:8:17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "48442:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "48442:29:17"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "48477:4:17",
                                                "type": "",
                                                "value": "0xe0"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "48483:1:17",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "48473:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "48473:12:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "48438:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48438:48:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "48414:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48414:73:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "48407:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48407:81:17"
                              },
                              "nodeType": "YulIf",
                              "src": "48404:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "48514:42:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "rel_offset_of_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "48527:18:17"
                                  },
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "48547:8:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "48523:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48523:33:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "48514:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "calldata_access_t_struct$_ForwardRequest_$205_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base_ref",
                            "nodeType": "YulTypedName",
                            "src": "48318:8:17",
                            "type": ""
                          },
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "48328:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "48336:5:17",
                            "type": ""
                          }
                        ],
                        "src": "48250:313:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "48657:223:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "48667:43:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "48706:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "48693:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48693:17:17"
                              },
                              "variables": [
                                {
                                  "name": "rel_offset_of_tail",
                                  "nodeType": "YulTypedName",
                                  "src": "48671:18:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "48806:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "48815:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "48818:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "48808:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "48808:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "48808:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "rel_offset_of_tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "48733:18:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "calldatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "48761:12:17"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "48761:14:17"
                                              },
                                              {
                                                "name": "base_ref",
                                                "nodeType": "YulIdentifier",
                                                "src": "48777:8:17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "48757:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "48757:29:17"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "48792:6:17",
                                                "type": "",
                                                "value": "0x0100"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "48800:1:17",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "48788:3:17"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "48788:14:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "48753:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "48753:50:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "48729:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48729:75:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "48722:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48722:83:17"
                              },
                              "nodeType": "YulIf",
                              "src": "48719:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "48831:42:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "rel_offset_of_tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "48844:18:17"
                                  },
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "48864:8:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "48840:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48840:33:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "48831:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "calldata_access_t_struct$_RelayData_$1191_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base_ref",
                            "nodeType": "YulTypedName",
                            "src": "48633:8:17",
                            "type": ""
                          },
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "48643:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "48651:5:17",
                            "type": ""
                          }
                        ],
                        "src": "48569:311:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "48944:64:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "48954:48:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "48984:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "48993:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "48998:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "48989:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "48989:12:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "48963:20:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "48963:39:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "48954:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "calldata_access_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "baseRef",
                            "nodeType": "YulTypedName",
                            "src": "48921:7:17",
                            "type": ""
                          },
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "48930:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "48938:5:17",
                            "type": ""
                          }
                        ],
                        "src": "48886:122:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49059:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "49069:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "49098:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "49080:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "49080:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "49069:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "49041:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "49051:7:17",
                            "type": ""
                          }
                        ],
                        "src": "49014:96:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49169:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "49179:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "49208:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "49190:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "49190:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "49179:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "49151:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "49161:7:17",
                            "type": ""
                          }
                        ],
                        "src": "49116:104:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49268:48:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "49278:32:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "49303:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "49296:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "49296:13:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "49289:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "49289:21:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "49278:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "49250:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "49260:7:17",
                            "type": ""
                          }
                        ],
                        "src": "49226:90:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49367:32:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "49377:16:17",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "49388:5:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "49377:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "49349:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "49359:7:17",
                            "type": ""
                          }
                        ],
                        "src": "49322:77:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49465:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "49475:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "49504:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "49486:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "49486:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "49475:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_IERC20_$1938",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "49447:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "49457:7:17",
                            "type": ""
                          }
                        ],
                        "src": "49405:111:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49585:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "49595:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "49624:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "49606:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "49606:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "49595:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_IForwarder_$273",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "49567:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "49577:7:17",
                            "type": ""
                          }
                        ],
                        "src": "49522:114:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49704:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "49714:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "49743:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "49725:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "49725:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "49714:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_IRelayHub_$611",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "49686:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "49696:7:17",
                            "type": ""
                          }
                        ],
                        "src": "49642:113:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49823:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "49833:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "49862:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "49844:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "49844:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "49833:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_IUniswap_$2008",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "49805:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "49815:7:17",
                            "type": ""
                          }
                        ],
                        "src": "49761:113:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49925:81:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "49935:65:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "49950:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "49957:42:17",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "49946:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "49946:54:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "49935:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "49907:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "49917:7:17",
                            "type": ""
                          }
                        ],
                        "src": "49880:126:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "50057:32:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "50067:16:17",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "50078:5:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "50067:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "50039:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "50049:7:17",
                            "type": ""
                          }
                        ],
                        "src": "50012:77:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "50138:43:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "50148:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "50163:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "50170:4:17",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "50159:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "50159:16:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "50148:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "50120:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "50130:7:17",
                            "type": ""
                          }
                        ],
                        "src": "50095:86:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "50255:66:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "50265:50:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "50309:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "50278:30:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "50278:37:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "50265:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_address_payable_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "50235:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "50245:9:17",
                            "type": ""
                          }
                        ],
                        "src": "50187:134:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "50402:81:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "50412:65:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "50471:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IERC20_$1938_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "50425:45:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "50425:52:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "50412:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$1938_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "50382:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "50392:9:17",
                            "type": ""
                          }
                        ],
                        "src": "50327:156:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "50564:53:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "50574:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "50605:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "50587:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "50587:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "50574:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$1938_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "50544:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "50554:9:17",
                            "type": ""
                          }
                        ],
                        "src": "50489:128:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "50701:84:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "50711:68:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "50773:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IForwarder_$273_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "50724:48:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "50724:55:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "50711:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IForwarder_$273_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "50681:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "50691:9:17",
                            "type": ""
                          }
                        ],
                        "src": "50623:162:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "50869:53:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "50879:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "50910:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "50892:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "50892:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "50879:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IForwarder_$273_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "50849:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "50859:9:17",
                            "type": ""
                          }
                        ],
                        "src": "50791:131:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "51005:83:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "51015:67:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "51076:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IUniswap_$2008_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "51028:47:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "51028:54:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "51015:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswap_$2008_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "50985:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "50995:9:17",
                            "type": ""
                          }
                        ],
                        "src": "50928:160:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "51171:53:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "51181:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "51212:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "51194:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "51194:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "51181:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswap_$2008_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "51151:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "51161:9:17",
                            "type": ""
                          }
                        ],
                        "src": "51094:130:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "51290:66:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "51300:50:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "51344:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "51313:30:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "51313:37:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "51300:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "51270:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "51280:9:17",
                            "type": ""
                          }
                        ],
                        "src": "51230:126:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "51422:53:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "51432:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "51463:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "51445:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "51445:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "51432:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "51402:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "51412:9:17",
                            "type": ""
                          }
                        ],
                        "src": "51362:113:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "51532:103:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "51555:3:17"
                                  },
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "51560:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "51565:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "51542:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "51542:30:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "51542:30:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "51613:3:17"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "51618:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "51609:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "51609:16:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "51627:1:17",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "51602:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "51602:27:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "51602:27:17"
                            }
                          ]
                        },
                        "name": "copy_calldata_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "51514:3:17",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "51519:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "51524:6:17",
                            "type": ""
                          }
                        ],
                        "src": "51481:154:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "51690:258:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "51700:10:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "51709:1:17",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "51704:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "51769:63:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "51794:3:17"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "51799:1:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "51790:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "51790:11:17"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "51813:3:17"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "51818:1:17"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "51809:3:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "51809:11:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "51803:5:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "51803:18:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "51783:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "51783:39:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "51783:39:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "51730:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "51733:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "51727:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "51727:13:17"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "51741:19:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "51743:15:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "51752:1:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "51755:2:17",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "51748:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "51748:10:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "51743:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "51723:3:17",
                                "statements": []
                              },
                              "src": "51719:113:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "51866:76:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "51916:3:17"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "51921:6:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "51912:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "51912:16:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "51930:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "51905:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "51905:27:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "51905:27:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "51847:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "51850:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "51844:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "51844:13:17"
                              },
                              "nodeType": "YulIf",
                              "src": "51841:2:17"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "51672:3:17",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "51677:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "51682:6:17",
                            "type": ""
                          }
                        ],
                        "src": "51641:307:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "51977:25:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "invalid",
                                  "nodeType": "YulIdentifier",
                                  "src": "51987:7:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "51987:9:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "51987:9:17"
                            }
                          ]
                        },
                        "name": "panic_error",
                        "nodeType": "YulFunctionDefinition",
                        "src": "51954:48:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52056:54:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "52066:38:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "52084:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "52091:2:17",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "52080:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "52080:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "52100:2:17",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "52096:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "52096:7:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "52076:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "52076:28:17"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "52066:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "52039:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "52049:6:17",
                            "type": ""
                          }
                        ],
                        "src": "52008:102:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52159:79:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "52216:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52225:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52228:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "52218:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "52218:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "52218:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "52182:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "52207:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "52189:17:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "52189:24:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "52179:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "52179:35:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "52172:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "52172:43:17"
                              },
                              "nodeType": "YulIf",
                              "src": "52169:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "52152:5:17",
                            "type": ""
                          }
                        ],
                        "src": "52116:122:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52295:87:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "52360:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52369:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52372:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "52362:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "52362:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "52362:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "52318:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "52351:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address_payable",
                                          "nodeType": "YulIdentifier",
                                          "src": "52325:25:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "52325:32:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "52315:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "52315:43:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "52308:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "52308:51:17"
                              },
                              "nodeType": "YulIf",
                              "src": "52305:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "52288:5:17",
                            "type": ""
                          }
                        ],
                        "src": "52244:138:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52428:76:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "52482:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52491:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52494:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "52484:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "52484:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "52484:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "52451:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "52473:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "52458:14:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "52458:21:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "52448:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "52448:32:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "52441:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "52441:40:17"
                              },
                              "nodeType": "YulIf",
                              "src": "52438:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "52421:5:17",
                            "type": ""
                          }
                        ],
                        "src": "52388:116:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52553:79:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "52610:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52619:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52622:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "52612:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "52612:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "52612:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "52576:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "52601:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bytes32",
                                          "nodeType": "YulIdentifier",
                                          "src": "52583:17:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "52583:24:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "52573:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "52573:35:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "52566:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "52566:43:17"
                              },
                              "nodeType": "YulIf",
                              "src": "52563:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "52546:5:17",
                            "type": ""
                          }
                        ],
                        "src": "52510:122:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52696:94:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "52768:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52777:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52780:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "52770:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "52770:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "52770:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "52719:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "52759:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_IERC20_$1938",
                                          "nodeType": "YulIdentifier",
                                          "src": "52726:32:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "52726:39:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "52716:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "52716:50:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "52709:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "52709:58:17"
                              },
                              "nodeType": "YulIf",
                              "src": "52706:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_IERC20_$1938",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "52689:5:17",
                            "type": ""
                          }
                        ],
                        "src": "52638:152:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52857:97:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "52932:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52941:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "52944:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "52934:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "52934:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "52934:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "52880:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "52923:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_IForwarder_$273",
                                          "nodeType": "YulIdentifier",
                                          "src": "52887:35:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "52887:42:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "52877:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "52877:53:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "52870:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "52870:61:17"
                              },
                              "nodeType": "YulIf",
                              "src": "52867:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_IForwarder_$273",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "52850:5:17",
                            "type": ""
                          }
                        ],
                        "src": "52796:158:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "53020:96:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "53094:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "53103:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "53106:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "53096:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "53096:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "53096:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "53043:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "53085:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_IRelayHub_$611",
                                          "nodeType": "YulIdentifier",
                                          "src": "53050:34:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "53050:41:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "53040:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "53040:52:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "53033:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "53033:60:17"
                              },
                              "nodeType": "YulIf",
                              "src": "53030:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_IRelayHub_$611",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53013:5:17",
                            "type": ""
                          }
                        ],
                        "src": "52960:156:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "53182:96:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "53256:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "53265:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "53268:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "53258:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "53258:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "53258:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "53205:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "53247:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_IUniswap_$2008",
                                          "nodeType": "YulIdentifier",
                                          "src": "53212:34:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "53212:41:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "53202:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "53202:52:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "53195:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "53195:60:17"
                              },
                              "nodeType": "YulIf",
                              "src": "53192:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_IUniswap_$2008",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53175:5:17",
                            "type": ""
                          }
                        ],
                        "src": "53122:156:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "53327:79:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "53384:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "53393:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "53396:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "53386:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "53386:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "53386:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "53350:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "53375:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "53357:17:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "53357:24:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "53347:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "53347:35:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "53340:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "53340:43:17"
                              },
                              "nodeType": "YulIf",
                              "src": "53337:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53320:5:17",
                            "type": ""
                          }
                        ],
                        "src": "53284:122:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "53453:77:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "53508:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "53517:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "53520:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "53510:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "53510:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "53510:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "53476:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "53499:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint8",
                                          "nodeType": "YulIdentifier",
                                          "src": "53483:15:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "53483:22:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "53473:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "53473:33:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "53466:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "53466:41:17"
                              },
                              "nodeType": "YulIf",
                              "src": "53463:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53446:5:17",
                            "type": ""
                          }
                        ],
                        "src": "53412:118:17"
                      }
                    ]
                  },
                  "contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$1938(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$1938(value)\n    }\n\n    function abi_decode_t_contract$_IForwarder_$273(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IForwarder_$273(value)\n    }\n\n    function abi_decode_t_contract$_IRelayHub_$611(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IRelayHub_$611(value)\n    }\n\n    function abi_decode_t_contract$_IUniswap_$2008(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IUniswap_$2008(value)\n    }\n\n    // struct GsnTypes.RelayData\n    function abi_decode_t_struct$_RelayData_$1191_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 256) { revert(0, 0) }\n        value := offset\n    }\n\n    // struct GsnTypes.RelayRequest\n    function abi_decode_t_struct$_RelayRequest_$1196_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 64) { revert(0, 0) }\n        value := offset\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256t_contract$_IERC20_$1938t_contract$_IUniswap_$2008(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$1938(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_IUniswap_$2008(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptrt_boolt_uint256t_struct$_RelayData_$1191_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value4 := abi_decode_t_struct$_RelayData_$1191_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1938(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1938(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1938t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1938(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1938t_contract$_IUniswap_$2008t_struct$_RelayRequest_$1196_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1938(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IUniswap_$2008(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2 := abi_decode_t_struct$_RelayRequest_$1196_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IForwarder_$273(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IForwarder_$273(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IRelayHub_$611(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IRelayHub_$611(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_RelayRequest_$1196_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_struct$_RelayRequest_$1196_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_RelayRequest_$1196_calldata_ptrt_bytes_calldata_ptrt_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_struct$_RelayRequest_$1196_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1938_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1938_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IForwarder_$273_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IForwarder_$273_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswap_$2008_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswap_$2008_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n\n        mstore(add(pos, 0), \"invalid forwarder for recipient\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_25c4d1a3ff99c020f0e9e83e8b3e3d05dfaddd2b987303f9cd57adb34433792d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n\n        mstore(add(pos, 0), \"This token not supported as fee\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n\n        mstore(add(pos, 0), \"isTrustedForwarder: reverted\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_2dff411ca9110b5bbd8f89e6e9bb7e3a9da30fd96d434a60138f3395d1135730_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n\n        mstore(add(pos, 0), \"TokenPaymaster/Balance to low.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_313f2c731b040432382b587b0cf65ba7b6e869f03bb701593151aa9a51d2bdd8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n\n        mstore(add(pos, 0), \"failed refund\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n\n        mstore(add(pos, 0), \"Forwarder is not trusted\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"isTrustedForwarder: bad response\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b436a453104c967d5dda2f161596a8ee581041d16cd34aefe6d327b6e586ba3c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n\n        mstore(add(pos, 0), \"token balance too low\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n\n        mstore(add(pos, 0), \"can only be called by RelayHub\")\n\n        end := add(pos, 32)\n    }\n\n    // struct IForwarder.ForwardRequest -> struct IForwarder.ForwardRequest\n    function abi_encode_t_struct$_ForwardRequest_$205_calldata_ptr_to_t_struct$_ForwardRequest_$205_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // from\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // to\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // value\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // gas\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // nonce\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // data\n\n            let memberValue0, memberValue1 := calldata_access_t_bytes_calldata_ptr(value, add(value, 0xa0))\n\n            mstore(add(pos, 0xa0), sub(tail, pos))\n            tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr(memberValue0, memberValue1, tail)\n\n        }\n\n        {\n            // validUntil\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        end := tail\n    }\n\n    // struct IPaymaster.GasAndDataLimits -> struct IPaymaster.GasAndDataLimits\n    function abi_encode_t_struct$_GasAndDataLimits_$286_memory_ptr_to_t_struct$_GasAndDataLimits_$286_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // acceptanceBudget\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // preRelayedCallGasLimit\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // postRelayedCallGasLimit\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // calldataSizeLimit\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    // struct GsnTypes.RelayData -> struct GsnTypes.RelayData\n    function abi_encode_t_struct$_RelayData_$1191_calldata_ptr_to_t_struct$_RelayData_$1191_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // gasPrice\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // pctRelayFee\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // baseRelayFee\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // relayWorker\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // paymaster\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // forwarder\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // paymasterData\n\n            let memberValue0, memberValue1 := calldata_access_t_bytes_calldata_ptr(value, add(value, 0xc0))\n\n            mstore(add(pos, 0xc0), sub(tail, pos))\n            tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr(memberValue0, memberValue1, tail)\n\n        }\n\n        {\n            // clientId\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        end := tail\n    }\n\n    // struct GsnTypes.RelayData -> struct GsnTypes.RelayData\n    function abi_encode_t_struct$_RelayData_$1191_calldata_ptr_to_t_struct$_RelayData_$1191_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // gasPrice\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // pctRelayFee\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // baseRelayFee\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // relayWorker\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // paymaster\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // forwarder\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // paymasterData\n\n            let memberValue0, memberValue1 := calldata_access_t_bytes_calldata_ptr(value, add(value, 0xc0))\n\n            mstore(add(pos, 0xc0), sub(tail, pos))\n            tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr(memberValue0, memberValue1, tail)\n\n        }\n\n        {\n            // clientId\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        end := tail\n    }\n\n    // struct GsnTypes.RelayRequest -> struct GsnTypes.RelayRequest\n    function abi_encode_t_struct$_RelayRequest_$1196_calldata_ptr_to_t_struct$_RelayRequest_$1196_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // request\n\n            let memberValue0 := calldata_access_t_struct$_ForwardRequest_$205_calldata_ptr(value, add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_struct$_ForwardRequest_$205_calldata_ptr_to_t_struct$_ForwardRequest_$205_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // relayData\n\n            let memberValue0 := calldata_access_t_struct$_RelayData_$1191_calldata_ptr(value, add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_struct$_RelayData_$1191_calldata_ptr_to_t_struct$_RelayData_$1191_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_contract$_IERC20_$1938_t_contract$_IUniswap_$2008__to_t_address_t_uint256_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_IERC20_$1938_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_contract$_IUniswap_$2008_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_bool__to_t_bytes_memory_ptr_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1938_t_contract$_IUniswap_$2008__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC20_$1938_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IUniswap_$2008_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IForwarder_$273__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IForwarder_$273_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_25c4d1a3ff99c020f0e9e83e8b3e3d05dfaddd2b987303f9cd57adb34433792d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25c4d1a3ff99c020f0e9e83e8b3e3d05dfaddd2b987303f9cd57adb34433792d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2dff411ca9110b5bbd8f89e6e9bb7e3a9da30fd96d434a60138f3395d1135730__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2dff411ca9110b5bbd8f89e6e9bb7e3a9da30fd96d434a60138f3395d1135730_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_313f2c731b040432382b587b0cf65ba7b6e869f03bb701593151aa9a51d2bdd8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_313f2c731b040432382b587b0cf65ba7b6e869f03bb701593151aa9a51d2bdd8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b436a453104c967d5dda2f161596a8ee581041d16cd34aefe6d327b6e586ba3c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b436a453104c967d5dda2f161596a8ee581041d16cd34aefe6d327b6e586ba3c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_GasAndDataLimits_$286_memory_ptr__to_t_struct$_GasAndDataLimits_$286_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_GasAndDataLimits_$286_memory_ptr_to_t_struct$_GasAndDataLimits_$286_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_RelayRequest_$1196_calldata_ptr__to_t_struct$_RelayRequest_$1196_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_RelayRequest_$1196_calldata_ptr_to_t_struct$_RelayRequest_$1196_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address_payable__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_struct$_RelayData_$1191_calldata_ptr__to_t_uint256_t_struct$_RelayData_$1191_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_struct$_RelayData_$1191_calldata_ptr_to_t_struct$_RelayData_$1191_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_payable_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert(0, 0) }\n\n    }\n\n    function access_calldata_tail_t_struct$_ForwardRequest_$205_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0xe0, 1)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function access_calldata_tail_t_struct$_RelayData_$1191_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x0100, 1)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function calldata_access_t_address(baseRef, ptr) -> value {\n        value := abi_decode_t_address(ptr, add(ptr, 32))\n    }\n\n    function calldata_access_t_bytes_calldata_ptr(base_ref, ptr) -> value, length {\n        let rel_offset_of_tail := calldataload(ptr)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert(0, 0) }\n        value := add(rel_offset_of_tail, base_ref)\n\n        length := calldataload(value)\n        value := add(value, 0x20)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if sgt(base_ref, sub(calldatasize(), mul(length, 0x01))) { revert(0, 0) }\n\n    }\n\n    function calldata_access_t_struct$_ForwardRequest_$205_calldata_ptr(base_ref, ptr) -> value {\n        let rel_offset_of_tail := calldataload(ptr)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0xe0, 1)))) { revert(0, 0) }\n        value := add(rel_offset_of_tail, base_ref)\n\n    }\n\n    function calldata_access_t_struct$_RelayData_$1191_calldata_ptr(base_ref, ptr) -> value {\n        let rel_offset_of_tail := calldataload(ptr)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x0100, 1)))) { revert(0, 0) }\n        value := add(rel_offset_of_tail, base_ref)\n\n    }\n\n    function calldata_access_t_uint256(baseRef, ptr) -> value {\n        value := abi_decode_t_uint256(ptr, add(ptr, 32))\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_contract$_IERC20_$1938(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IForwarder_$273(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IRelayHub_$611(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IUniswap_$2008(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC20_$1938_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$1938_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1938_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IForwarder_$273_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IForwarder_$273_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IForwarder_$273_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswap_$2008_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswap_$2008_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswap_$2008_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$1938(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1938(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IForwarder_$273(value) {\n        if iszero(eq(value, cleanup_t_contract$_IForwarder_$273(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IRelayHub_$611(value) {\n        if iszero(eq(value, cleanup_t_contract$_IRelayHub_$611(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IUniswap_$2008(value) {\n        if iszero(eq(value, cleanup_t_contract$_IUniswap_$2008(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 17,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106101c55760003560e01c80637bb05264116100f7578063b90b41cf11610095578063df463a6611610064578063df463a6614610672578063ef1a830e1461069d578063f2fde38b146106da578063f9c002f71461070357610203565b8063b90b41cf146105ca578063bbdaa3c9146105f5578063da74222814610620578063db3f831e1461064957610203565b8063921276ea116100d1578063921276ea14610520578063a5dcd07b1461054b578063ad12e50e14610574578063b039a88f1461059f57610203565b80637bb05264146104a15780637da0a877146104ca5780638da5cb5b146104f557610203565b80635476bd72116101645780636d7c3e2b1161013e5780636d7c3e2b1461040d578063715018a61461043657806374e861d61461044d57806376fa01c31461047857610203565b80635476bd721461037b57806359d3901f146103a45780635c5e3db1146103e257610203565b80632d14c4b7116101a05780632d14c4b71461029a5780632f4b3c5c146102c35780633aecd0e31461030157806341bbb7ca1461033e57610203565b8062be5dd41461020857806301e33667146102465780632afe31c11461026f57610203565b36610203577fa8142743f8f70a4c26f3691cf4ed59718381fb2f18070ec52be1f1022d855557346040516101f99190613c5e565b60405180910390a1005b600080fd5b34801561021457600080fd5b5061022f600480360381019061022a9190612ff5565b61072e565b60405161023d929190613a6b565b60405180910390f35b34801561025257600080fd5b5061026d60048036038101906102689190612e98565b6109d2565b005b34801561027b57600080fd5b50610284610be5565b6040516102919190613c5e565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc91906130fa565b610c97565b005b3480156102cf57600080fd5b506102ea60048036038101906102e59190612e2e565b610dd8565b6040516102f8929190613a9b565b60405180910390f35b34801561030d57600080fd5b5061032860048036038101906103239190612e6f565b610ed4565b6040516103359190613c5e565b60405180910390f35b34801561034a57600080fd5b5061036560048036038101906103609190612fb4565b610f66565b60405161037291906138ea565b60405180910390f35b34801561038757600080fd5b506103a2600480360381019061039d9190612c84565b610f91565b005b3480156103b057600080fd5b506103cb60048036038101906103c69190612ee7565b6110c2565b6040516103d99291906139fd565b60405180910390f35b3480156103ee57600080fd5b506103f761130a565b6040516104049190613c5e565b60405180910390f35b34801561041957600080fd5b50610434600480360381019061042f91906130a8565b611310565b005b34801561044257600080fd5b5061044b6113c9565b005b34801561045957600080fd5b50610462611536565b60405161046f91906138ea565b60405180910390f35b34801561048457600080fd5b5061049f600480360381019061049a9190612d96565b611560565b005b3480156104ad57600080fd5b506104c860048036038101906104c39190612f8b565b61160d565b005b3480156104d657600080fd5b506104df611700565b6040516104ec9190613ac4565b60405180910390f35b34801561050157600080fd5b5061050a611726565b60405161051791906138ea565b60405180910390f35b34801561052c57600080fd5b5061053561174f565b6040516105429190613adf565b60405180910390f35b34801561055757600080fd5b50610572600480360381019061056d9190612fb4565b61178c565b005b34801561058057600080fd5b50610589611849565b6040516105969190613c5e565b60405180910390f35b3480156105ab57600080fd5b506105b461184f565b6040516105c19190613c21565b60405180910390f35b3480156105d657600080fd5b506105df611888565b6040516105ec9190613c5e565b60405180910390f35b34801561060157600080fd5b5061060a61188e565b6040516106179190613c5e565b60405180910390f35b34801561062c57600080fd5b5061064760048036038101906106429190612f62565b611895565b005b34801561065557600080fd5b50610670600480360381019061066b9190612cc0565b611988565b005b34801561067e57600080fd5b50610687611af9565b6040516106949190613c5e565b60405180910390f35b3480156106a957600080fd5b506106c460048036038101906106bf9190612b1d565b611b04565b6040516106d191906138ea565b60405180910390f35b3480156106e657600080fd5b5061070160048036038101906106fc9190612b1d565b611b37565b005b34801561070f57600080fd5b50610718611d29565b6040516107259190613c5e565b60405180910390f35b6060600061073a611536565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e90613c01565b60405180910390fd5b6000806108148a80602001906107bd9190613e1c565b8060c001906107cc9190613da1565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dd8565b9150915060008061082784848e8a6110c2565b915091506000806000806000808e8e8101906108439190612bfb565b9550955095509550955095508973ffffffffffffffffffffffffffffffffffffffff1663d505accf873088888888886040518863ffffffff1660e01b81526004016108949796959493929190613957565b600060405180830381600087803b1580156108ae57600080fd5b505af11580156108c2573d6000803e3d6000fd5b505050508973ffffffffffffffffffffffffffffffffffffffff166323b872dd89308a6040518463ffffffff1660e01b815260040161090393929190613920565b602060405180830381600087803b15801561091d57600080fd5b505af1158015610931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109559190612d6d565b507fe9731c78e6c09448d873967301d14a46ffe6276ae410c52ad99f5c8b1b47faf08a8a89604051610989939291906139c6565b60405180910390a187878b8b6040516020016109a89493929190613a26565b60405160208183030381529060405260009b509b5050505050505050505050965096945050505050565b6109da611d30565b73ffffffffffffffffffffffffffffffffffffffff166109f8611726565b73ffffffffffffffffffffffffffffffffffffffff1614610a81576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610abc9190613905565b60206040518083038186803b158015610ad457600080fd5b505afa158015610ae8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0c91906130d1565b905080821115610b51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4890613b61565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610b8c9291906139fd565b602060405180830381600087803b158015610ba657600080fd5b505af1158015610bba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bde9190612d6d565b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c429190613905565b60206040518083038186803b158015610c5a57600080fd5b505afa158015610c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9291906130d1565b905090565b610c9f611d30565b73ffffffffffffffffffffffffffffffffffffffff16610cbd611726565b73ffffffffffffffffffffffffffffffffffffffff1614610d46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662f714ce83836040518363ffffffff1660e01b8152600401610da2929190613c79565b600060405180830381600087803b158015610dbc57600080fd5b505af1158015610dd0573d6000803e3d6000fd5b505050505050565b600080600083806020019051810190610df19190612b6f565b90506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ec7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebe90613b21565b60405180910390fd5b8181935093505050915091565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f0f9190613905565b60206040518083038186803b158015610f2757600080fd5b505afa158015610f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5f91906130d1565b9050919050565b6000818060000190610f789190613df8565b6000016020810190610f8a9190612b1d565b9050919050565b610f99611d30565b73ffffffffffffffffffffffffffffffffffffffff16610fb7611726565b73ffffffffffffffffffffffffffffffffffffffff1614611040576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000803073ffffffffffffffffffffffffffffffffffffffff166341bbb7ca856040518263ffffffff1660e01b81526004016110fe9190613c3c565b60206040518083038186803b15801561111657600080fd5b505afa15801561112a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114e9190612b46565b91506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e53548b858780602001906111a19190613e1c565b6040518363ffffffff1660e01b81526004016111be929190613cd2565b60206040518083038186803b1580156111d657600080fd5b505afa1580156111ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120e91906130d1565b90508480600001906112209190613df8565b6040013581019050611233818888611d38565b91508673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161126e91906138ea565b60206040518083038186803b15801561128657600080fd5b505afa15801561129a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112be91906130d1565b821115611300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f790613be1565b60405180910390fd5b5094509492505050565b61290481565b611318611d30565b73ffffffffffffffffffffffffffffffffffffffff16611336611726565b73ffffffffffffffffffffffffffffffffffffffff16146113bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8060048190555050565b6113d1611d30565b73ffffffffffffffffffffffffffffffffffffffff166113ef611726565b73ffffffffffffffffffffffffffffffffffffffff1614611478576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611568611536565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115cc90613c01565b60405180910390fd5b60008060008088888101906115ea9190612b98565b93509350935093506116028484600089898787611f46565b505050505050505050565b611615611d30565b73ffffffffffffffffffffffffffffffffffffffff16611633611726565b73ffffffffffffffffffffffffffffffffffffffff16146116bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606040518060400160405280600581526020017f322e322e30000000000000000000000000000000000000000000000000000000815250905090565b80806020019061179c9190613e1c565b60a00160208101906117ae9190612b1d565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461183d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183490613ba1565b60405180910390fd5b611846816120a5565b50565b60045481565b6118576127ba565b60405180608001604052806203d090815260200162030d408152602001620334508152602001612904815250905090565b61c35081565b6201adb081565b61189d611d30565b73ffffffffffffffffffffffffffffffffffffffff166118bb611726565b73ffffffffffffffffffffffffffffffffffffffff1614611944576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611990611d30565b73ffffffffffffffffffffffffffffffffffffffff166119ae611726565b73ffffffffffffffffffffffffffffffffffffffff1614611a37576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60005b8251811015611af457818181518110611a4f57fe5b602002602001015160036000858481518110611a6757fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080600101915050611a3a565b505050565b61c350620186a00181565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611b3f611d30565b73ffffffffffffffffffffffffffffffffffffffff16611b5d611726565b73ffffffffffffffffffffffffffffffffffffffff1614611be6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806142ec6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620186a081565b600033905090565b600080600267ffffffffffffffff81118015611d5357600080fd5b50604051908082528060200260200182016040528015611d825781602001602082028036833780820191505090505b5090508381600081518110611d9357fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015611e1357600080fd5b505afa158015611e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4b9190612b46565b81600181518110611e5857fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008373ffffffffffffffffffffffffffffffffffffffff16631f00ca7487846040518363ffffffff1660e01b8152600401611ecf929190613ca2565b60006040518083038186803b158015611ee757600080fd5b505afa158015611efb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611f249190612d2c565b905080600081518110611f3357fe5b6020026020010151925050509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e53548b611f9b600454886122a590919063ffffffff16565b866040518363ffffffff1660e01b8152600401611fb9929190613cd2565b60206040518083038186803b158015611fd157600080fd5b505afa158015611fe5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200991906130d1565b9050600061202a61202383896122a590919063ffffffff16565b8585611d38565b90506000612041828a61232d90919063ffffffff16565b905061204e8a86836123b0565b61205a83838787612481565b7fb3d69ff8981e297b4ab7fb9ba8e8a080ffebbee9f273bfa2d10116a8236830458760045485856040516120919493929190613d5c565b60405180910390a150505050505050505050565b6000808280600001906120b89190613df8565b60200160208101906120ca9190612b1d565b73ffffffffffffffffffffffffffffffffffffffff1663572b6c0560e01b8480602001906120f89190613e1c565b60a001602081019061210a9190612b1d565b60405160240161211a91906138ea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161218491906138d3565b600060405180830381855afa9150503d80600081146121bf576040519150601f19603f3d011682016040523d82523d6000602084013e6121c4565b606091505b509150915081612209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161220090613b41565b60405180910390fd5b602081511461224d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161224490613bc1565b60405180910390fd5b808060200190518101906122619190612d6d565b6122a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161229790613b01565b60405180910390fd5b505050565b600080828401905083811015612323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000828211156123a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b81526004016123eb9291906139fd565b602060405180830381600087803b15801561240557600080fd5b505af1158015612419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243d9190612d6d565b61247c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161247390613b81565b60405180910390fd5b505050565b6000600267ffffffffffffffff8111801561249b57600080fd5b506040519080825280602002602001820160405280156124ca5781602001602082028036833780820191505090505b50905082816000815181106124db57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561255b57600080fd5b505afa15801561256f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125939190612b46565b816001815181106125a057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016126359291906139fd565b602060405180830381600087803b15801561264f57600080fd5b505af1158015612663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126879190612d6d565b508173ffffffffffffffffffffffffffffffffffffffff166318cbafe58587843061038442016040518663ffffffff1660e01b81526004016126cd959493929190613d02565b600060405180830381600087803b1580156126e757600080fd5b505af11580156126fb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906127249190612d2c565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa67c91986306040518363ffffffff1660e01b81526004016127819190613905565b6000604051808303818588803b15801561279a57600080fd5b505af11580156127ae573d6000803e3d6000fd5b50505050505050505050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60006127f56127f084613e72565b613e41565b9050808382526020820190508285602086028201111561281457600080fd5b60005b85811015612844578161282a88826128f8565b845260208401935060208301925050600181019050612817565b5050509392505050565b600061286161285c84613e9e565b613e41565b9050808382526020820190508285602086028201111561288057600080fd5b60005b858110156128b057816128968882612af3565b845260208401935060208301925050600181019050612883565b5050509392505050565b60006128cd6128c884613eca565b613e41565b9050828152602081018484840111156128e557600080fd5b6128f08482856141b0565b509392505050565b60008135905061290781614205565b92915050565b60008151905061291c81614205565b92915050565b6000813590506129318161421c565b92915050565b6000815190506129468161421c565b92915050565b600082601f83011261295d57600080fd5b813561296d8482602086016127e2565b91505092915050565b600082601f83011261298757600080fd5b815161299784826020860161284e565b91505092915050565b6000813590506129af81614233565b92915050565b6000815190506129c481614233565b92915050565b6000813590506129d98161424a565b92915050565b60008083601f8401126129f157600080fd5b8235905067ffffffffffffffff811115612a0a57600080fd5b602083019150836001820283011115612a2257600080fd5b9250929050565b600082601f830112612a3a57600080fd5b8135612a4a8482602086016128ba565b91505092915050565b600081359050612a6281614261565b92915050565b600081359050612a7781614278565b92915050565b600081359050612a8c8161428f565b92915050565b600081359050612aa1816142a6565b92915050565b60006101008284031215612aba57600080fd5b81905092915050565b600060408284031215612ad557600080fd5b81905092915050565b600081359050612aed816142bd565b92915050565b600081519050612b02816142bd565b92915050565b600081359050612b17816142d4565b92915050565b600060208284031215612b2f57600080fd5b6000612b3d848285016128f8565b91505092915050565b600060208284031215612b5857600080fd5b6000612b668482850161290d565b91505092915050565b600060208284031215612b8157600080fd5b6000612b8f84828501612937565b91505092915050565b60008060008060808587031215612bae57600080fd5b6000612bbc87828801612922565b9450506020612bcd87828801612ade565b9350506040612bde87828801612a53565b9250506060612bef87828801612a92565b91505092959194509250565b60008060008060008060c08789031215612c1457600080fd5b6000612c2289828a01612922565b9650506020612c3389828a01612ade565b9550506040612c4489828a01612ade565b9450506060612c5589828a01612b08565b9350506080612c6689828a016129ca565b92505060a0612c7789828a016129ca565b9150509295509295509295565b60008060408385031215612c9757600080fd5b6000612ca5858286016128f8565b9250506020612cb6858286016128f8565b9150509250929050565b60008060408385031215612cd357600080fd5b600083013567ffffffffffffffff811115612ced57600080fd5b612cf98582860161294c565b925050602083013567ffffffffffffffff811115612d1657600080fd5b612d228582860161294c565b9150509250929050565b600060208284031215612d3e57600080fd5b600082015167ffffffffffffffff811115612d5857600080fd5b612d6484828501612976565b91505092915050565b600060208284031215612d7f57600080fd5b6000612d8d848285016129b5565b91505092915050565b600080600080600060808688031215612dae57600080fd5b600086013567ffffffffffffffff811115612dc857600080fd5b612dd4888289016129df565b95509550506020612de7888289016129a0565b9350506040612df888828901612ade565b925050606086013567ffffffffffffffff811115612e1557600080fd5b612e2188828901612aa7565b9150509295509295909350565b600060208284031215612e4057600080fd5b600082013567ffffffffffffffff811115612e5a57600080fd5b612e6684828501612a29565b91505092915050565b600060208284031215612e8157600080fd5b6000612e8f84828501612a53565b91505092915050565b600080600060608486031215612ead57600080fd5b6000612ebb86828701612a53565b9350506020612ecc868287016128f8565b9250506040612edd86828701612ade565b9150509250925092565b60008060008060808587031215612efd57600080fd5b6000612f0b87828801612a53565b9450506020612f1c87828801612a92565b935050604085013567ffffffffffffffff811115612f3957600080fd5b612f4587828801612ac3565b9250506060612f5687828801612ade565b91505092959194509250565b600060208284031215612f7457600080fd5b6000612f8284828501612a68565b91505092915050565b600060208284031215612f9d57600080fd5b6000612fab84828501612a7d565b91505092915050565b600060208284031215612fc657600080fd5b600082013567ffffffffffffffff811115612fe057600080fd5b612fec84828501612ac3565b91505092915050565b6000806000806000806080878903121561300e57600080fd5b600087013567ffffffffffffffff81111561302857600080fd5b61303489828a01612ac3565b965050602087013567ffffffffffffffff81111561305157600080fd5b61305d89828a016129df565b9550955050604087013567ffffffffffffffff81111561307c57600080fd5b61308889828a016129df565b9350935050606061309b89828a01612ade565b9150509295509295509295565b6000602082840312156130ba57600080fd5b60006130c884828501612ade565b91505092915050565b6000602082840312156130e357600080fd5b60006130f184828501612af3565b91505092915050565b6000806040838503121561310d57600080fd5b600061311b85828601612ade565b925050602061312c85828601612922565b9150509250929050565b6000613142838361316c565b60208301905092915050565b6131578161410e565b82525050565b61316681614067565b82525050565b61317581614055565b82525050565b61318481614055565b82525050565b600061319582613f0a565b61319f8185613f38565b93506131aa83613efa565b8060005b838110156131db5781516131c28882613136565b97506131cd83613f2b565b9250506001810190506131ae565b5085935050505092915050565b6131f181614079565b82525050565b61320081614085565b82525050565b60006132128385613f49565b935061321f8385846141b0565b613228836141f4565b840190509392505050565b600061323e82613f15565b6132488185613f5a565b93506132588185602086016141bf565b613261816141f4565b840191505092915050565b600061327782613f15565b6132818185613f6b565b93506132918185602086016141bf565b80840191505092915050565b6132a681614120565b82525050565b6132b581614144565b82525050565b6132c481614168565b82525050565b60006132d582613f20565b6132df8185613f76565b93506132ef8185602086016141bf565b6132f8816141f4565b840191505092915050565b6000613310601f83613f76565b91507f696e76616c696420666f7277617264657220666f7220726563697069656e74006000830152602082019050919050565b6000613350601f83613f76565b91507f5468697320746f6b656e206e6f7420737570706f7274656420617320666565006000830152602082019050919050565b6000613390601c83613f76565b91507f697354727573746564466f727761726465723a207265766572746564000000006000830152602082019050919050565b60006133d0601e83613f76565b91507f546f6b656e5061796d61737465722f42616c616e636520746f206c6f772e00006000830152602082019050919050565b6000613410600d83613f76565b91507f6661696c656420726566756e64000000000000000000000000000000000000006000830152602082019050919050565b6000613450601883613f76565b91507f466f72776172646572206973206e6f74207472757374656400000000000000006000830152602082019050919050565b6000613490602083613f76565b91507f697354727573746564466f727761726465723a2062616420726573706f6e73656000830152602082019050919050565b60006134d0601583613f76565b91507f746f6b656e2062616c616e636520746f6f206c6f7700000000000000000000006000830152602082019050919050565b6000613510601e83613f76565b91507f63616e206f6e6c792062652063616c6c65642062792052656c617948756200006000830152602082019050919050565b600060e083016135566000840184613f87565b613563600086018261316c565b506135716020840184613f87565b61357e602086018261316c565b5061358c604084018461403e565b61359960408601826138a6565b506135a7606084018461403e565b6135b460608601826138a6565b506135c2608084018461403e565b6135cf60808601826138a6565b506135dd60a0840184613f9e565b85830360a08701526135f0838284613206565b9250505061360160c084018461403e565b61360e60c08601826138a6565b508091505092915050565b60808201600082015161362f60008501826138a6565b50602082015161364260208501826138a6565b50604082015161365560408501826138a6565b50606082015161366860608501826138a6565b50505050565b60006101008301613682600084018461403e565b61368f60008601826138a6565b5061369d602084018461403e565b6136aa60208601826138a6565b506136b8604084018461403e565b6136c560408601826138a6565b506136d36060840184613f87565b6136e0606086018261316c565b506136ee6080840184613f87565b6136fb608086018261316c565b5061370960a0840184613f87565b61371660a086018261316c565b5061372460c0840184613f9e565b85830360c0870152613737838284613206565b9250505061374860e084018461403e565b61375560e08601826138a6565b508091505092915050565b60006101008301613774600084018461403e565b61378160008601826138a6565b5061378f602084018461403e565b61379c60208601826138a6565b506137aa604084018461403e565b6137b760408601826138a6565b506137c56060840184613f87565b6137d2606086018261316c565b506137e06080840184613f87565b6137ed608086018261316c565b506137fb60a0840184613f87565b61380860a086018261316c565b5061381660c0840184613f9e565b85830360c0870152613829838284613206565b9250505061383a60e084018461403e565b61384760e08601826138a6565b508091505092915050565b6000604083016138656000840184613ff5565b84820360008601526138778282613543565b9150506138876020840184614019565b8482036020860152613899828261366e565b9150508091505092915050565b6138af816140f7565b82525050565b6138be816140f7565b82525050565b6138cd81614101565b82525050565b60006138df828461326c565b915081905092915050565b60006020820190506138ff600083018461317b565b92915050565b600060208201905061391a600083018461314e565b92915050565b6000606082019050613935600083018661317b565b613942602083018561314e565b61394f60408301846138b5565b949350505050565b600060e08201905061396c600083018a61317b565b613979602083018961314e565b61398660408301886138b5565b61399360608301876138b5565b6139a060808301866138c4565b6139ad60a08301856131f7565b6139ba60c08301846131f7565b98975050505050505050565b60006060820190506139db600083018661317b565b6139e8602083018561317b565b6139f560408301846138b5565b949350505050565b6000604082019050613a12600083018561317b565b613a1f60208301846138b5565b9392505050565b6000608082019050613a3b600083018761317b565b613a4860208301866138b5565b613a55604083018561329d565b613a6260608301846132bb565b95945050505050565b60006040820190508181036000830152613a858185613233565b9050613a9460208301846131e8565b9392505050565b6000604082019050613ab0600083018561329d565b613abd60208301846132bb565b9392505050565b6000602082019050613ad960008301846132ac565b92915050565b60006020820190508181036000830152613af981846132ca565b905092915050565b60006020820190508181036000830152613b1a81613303565b9050919050565b60006020820190508181036000830152613b3a81613343565b9050919050565b60006020820190508181036000830152613b5a81613383565b9050919050565b60006020820190508181036000830152613b7a816133c3565b9050919050565b60006020820190508181036000830152613b9a81613403565b9050919050565b60006020820190508181036000830152613bba81613443565b9050919050565b60006020820190508181036000830152613bda81613483565b9050919050565b60006020820190508181036000830152613bfa816134c3565b9050919050565b60006020820190508181036000830152613c1a81613503565b9050919050565b6000608082019050613c366000830184613619565b92915050565b60006020820190508181036000830152613c568184613852565b905092915050565b6000602082019050613c7360008301846138b5565b92915050565b6000604082019050613c8e60008301856138b5565b613c9b602083018461315d565b9392505050565b6000604082019050613cb760008301856138b5565b8181036020830152613cc9818461318a565b90509392505050565b6000604082019050613ce760008301856138b5565b8181036020830152613cf98184613760565b90509392505050565b600060a082019050613d1760008301886138b5565b613d2460208301876138b5565b8181036040830152613d36818661318a565b9050613d45606083018561314e565b613d5260808301846138b5565b9695505050505050565b6000608082019050613d7160008301876138b5565b613d7e60208301866138b5565b613d8b60408301856138b5565b613d9860608301846138b5565b95945050505050565b60008083356001602003843603038112613dba57600080fd5b80840192508235915067ffffffffffffffff821115613dd857600080fd5b602083019250600182023603831315613df057600080fd5b509250929050565b60008235600160e003833603038112613e1057600080fd5b80830191505092915050565b60008235600161010003833603038112613e3557600080fd5b80830191505092915050565b6000604051905081810181811067ffffffffffffffff82111715613e6857613e676141f2565b5b8060405250919050565b600067ffffffffffffffff821115613e8d57613e8c6141f2565b5b602082029050602081019050919050565b600067ffffffffffffffff821115613eb957613eb86141f2565b5b602082029050602081019050919050565b600067ffffffffffffffff821115613ee557613ee46141f2565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000613f9660208401846128f8565b905092915050565b60008083356001602003843603038112613fb757600080fd5b83810192508235915060208301925067ffffffffffffffff821115613fdb57600080fd5b600182023603841315613fed57600080fd5b509250929050565b60008235600160e00383360303811261400d57600080fd5b82810191505092915050565b6000823560016101000383360303811261403257600080fd5b82810191505092915050565b600061404d6020840184612ade565b905092915050565b6000614060826140d7565b9050919050565b6000614072826140d7565b9050919050565b60008115159050919050565b6000819050919050565b600061409a82614055565b9050919050565b60006140ac82614055565b9050919050565b60006140be82614055565b9050919050565b60006140d082614055565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006141198261418c565b9050919050565b600061412b82614132565b9050919050565b600061413d826140d7565b9050919050565b600061414f82614156565b9050919050565b6000614161826140d7565b9050919050565b60006141738261417a565b9050919050565b6000614185826140d7565b9050919050565b60006141978261419e565b9050919050565b60006141a9826140d7565b9050919050565b82818337600083830152505050565b60005b838110156141dd5780820151818401526020810190506141c2565b838111156141ec576000848401525b50505050565bfe5b6000601f19601f8301169050919050565b61420e81614055565b811461421957600080fd5b50565b61422581614067565b811461423057600080fd5b50565b61423c81614079565b811461424757600080fd5b50565b61425381614085565b811461425e57600080fd5b50565b61426a8161408f565b811461427557600080fd5b50565b614281816140a1565b811461428c57600080fd5b50565b614298816140b3565b81146142a357600080fd5b50565b6142af816140c5565b81146142ba57600080fd5b50565b6142c6816140f7565b81146142d157600080fd5b50565b6142dd81614101565b81146142e857600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220577ea31b146a947456167f832097e860663adf5f25fca588d7279c4a648f176464736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BB05264 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB90B41CF GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDF463A66 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDF463A66 EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0xEF1A830E EQ PUSH2 0x69D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xF9C002F7 EQ PUSH2 0x703 JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0xB90B41CF EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xBBDAA3C9 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xDA742228 EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0xDB3F831E EQ PUSH2 0x649 JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0x921276EA GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x921276EA EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xA5DCD07B EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xAD12E50E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xB039A88F EQ PUSH2 0x59F JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0x7BB05264 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4F5 JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0x5476BD72 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x6D7C3E2B GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x6D7C3E2B EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x74E861D6 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x76FA01C3 EQ PUSH2 0x478 JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0x5476BD72 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x59D3901F EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x5C5E3DB1 EQ PUSH2 0x3E2 JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH4 0x2D14C4B7 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x2D14C4B7 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x2F4B3C5C EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x3AECD0E3 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x41BBB7CA EQ PUSH2 0x33E JUMPI PUSH2 0x203 JUMP JUMPDEST DUP1 PUSH3 0xBE5DD4 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x1E33667 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x2AFE31C1 EQ PUSH2 0x26F JUMPI PUSH2 0x203 JUMP JUMPDEST CALLDATASIZE PUSH2 0x203 JUMPI PUSH32 0xA8142743F8F70A4C26F3691CF4ED59718381FB2F18070EC52BE1F1022D855557 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x2FF5 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP3 SWAP2 SWAP1 PUSH2 0x3A6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x30FA JUMP JUMPDEST PUSH2 0xC97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x2E2E JUMP JUMPDEST PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP3 SWAP2 SWAP1 PUSH2 0x3A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x2E6F JUMP JUMPDEST PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x2FB4 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x2C84 JUMP JUMPDEST PUSH2 0xF91 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x2EE7 JUMP JUMPDEST PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x30A8 JUMP JUMPDEST PUSH2 0x1310 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x13C9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH2 0x1560 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH2 0x160D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DF PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x3AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50A PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x535 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x3ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x572 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x2FB4 JUMP JUMPDEST PUSH2 0x178C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x589 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B4 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x3C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DF PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60A PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x2F62 JUMP JUMPDEST PUSH2 0x1895 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x670 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x2CC0 JUMP JUMPDEST PUSH2 0x1988 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x687 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x701 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH2 0x1B37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x718 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x73A PUSH2 0x1536 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP1 PUSH2 0x3C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x814 DUP11 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7BD SWAP2 SWAP1 PUSH2 0x3E1C JUMP JUMPDEST DUP1 PUSH1 0xC0 ADD SWAP1 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x3DA1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDD8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH2 0x827 DUP5 DUP5 DUP15 DUP11 PUSH2 0x10C2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP15 DUP15 DUP2 ADD SWAP1 PUSH2 0x843 SWAP2 SWAP1 PUSH2 0x2BFB JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF DUP8 ADDRESS DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3957 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP10 ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x903 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3920 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x931 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST POP PUSH32 0xE9731C78E6C09448D873967301D14A46FFE6276AE410C52AD99F5C8B1B47FAF0 DUP11 DUP11 DUP10 PUSH1 0x40 MLOAD PUSH2 0x989 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP8 DUP8 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9A8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x0 SWAP12 POP SWAP12 POP POP POP POP POP POP POP POP POP POP POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9DA PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9F8 PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP2 SWAP1 PUSH2 0x3905 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP1 PUSH2 0x3B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8C SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x3905 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCBD PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xF714CE DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA2 SWAP3 SWAP2 SWAP1 PUSH2 0x3C79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDF1 SWAP2 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBE SWAP1 PUSH2 0x3B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP2 SWAP1 PUSH2 0x3905 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xF78 SWAP2 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF99 PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFB7 PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1040 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41BBB7CA DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x3C3C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x112A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x114E SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E53548B DUP6 DUP8 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x11A1 SWAP2 SWAP1 PUSH2 0x3E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BE SWAP3 SWAP2 SWAP1 PUSH2 0x3CD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP DUP5 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1220 SWAP2 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST PUSH1 0x40 ADD CALLDATALOAD DUP2 ADD SWAP1 POP PUSH2 0x1233 DUP2 DUP9 DUP9 PUSH2 0x1D38 JUMP JUMPDEST SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126E SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x129A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12BE SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1300 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F7 SWAP1 PUSH2 0x3BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2904 DUP2 JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1336 PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13EF PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1568 PUSH2 0x1536 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15CC SWAP1 PUSH2 0x3C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP9 DUP9 DUP2 ADD SWAP1 PUSH2 0x15EA SWAP2 SWAP1 PUSH2 0x2B98 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x1602 DUP5 DUP5 PUSH1 0x0 DUP10 DUP10 DUP8 DUP8 PUSH2 0x1F46 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1615 PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1633 PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x322E322E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x179C SWAP2 SWAP1 PUSH2 0x3E1C JUMP JUMPDEST PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x17AE SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x183D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1834 SWAP1 PUSH2 0x3BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1846 DUP2 PUSH2 0x20A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1857 PUSH2 0x27BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x3D090 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x30D40 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x33450 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2904 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC350 DUP2 JUMP JUMPDEST PUSH3 0x1ADB0 DUP2 JUMP JUMPDEST PUSH2 0x189D PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18BB PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1990 PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19AE PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1AF4 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1A4F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A67 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC350 PUSH3 0x186A0 ADD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B3F PUSH2 0x1D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B5D PUSH2 0x1726 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x42EC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1D53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D82 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D93 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E4B SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1E58 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1F00CA74 DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ECF SWAP3 SWAP2 SWAP1 PUSH2 0x3CA2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F24 SWAP2 SWAP1 PUSH2 0x2D2C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1F33 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E53548B PUSH2 0x1F9B PUSH1 0x4 SLOAD DUP9 PUSH2 0x22A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB9 SWAP3 SWAP2 SWAP1 PUSH2 0x3CD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2009 SWAP2 SWAP1 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x202A PUSH2 0x2023 DUP4 DUP10 PUSH2 0x22A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1D38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2041 DUP3 DUP11 PUSH2 0x232D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x204E DUP11 DUP7 DUP4 PUSH2 0x23B0 JUMP JUMPDEST PUSH2 0x205A DUP4 DUP4 DUP8 DUP8 PUSH2 0x2481 JUMP JUMPDEST PUSH32 0xB3D69FF8981E297B4AB7FB9BA8E8A080FFEBBEE9F273BFA2D10116A823683045 DUP8 PUSH1 0x4 SLOAD DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2091 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x20B8 SWAP2 SWAP1 PUSH2 0x3DF8 JUMP JUMPDEST PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x20CA SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x572B6C05 PUSH1 0xE0 SHL DUP5 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x20F8 SWAP2 SWAP1 PUSH2 0x3E1C JUMP JUMPDEST PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x210A SWAP2 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x211A SWAP2 SWAP1 PUSH2 0x38EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x2184 SWAP2 SWAP1 PUSH2 0x38D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x21BF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2200 SWAP1 PUSH2 0x3B41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MLOAD EQ PUSH2 0x224D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2244 SWAP1 PUSH2 0x3BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2261 SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST PUSH2 0x22A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2297 SWAP1 PUSH2 0x3B01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2323 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x23A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23EB SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x243D SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST PUSH2 0x247C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2473 SWAP1 PUSH2 0x3B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x249B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x24CA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x255B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2593 SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x25A0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2635 SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x264F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2663 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2687 SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18CBAFE5 DUP6 DUP8 DUP5 ADDRESS PUSH2 0x384 TIMESTAMP ADD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26CD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2724 SWAP2 SWAP1 PUSH2 0x2D2C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA67C919 DUP7 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2781 SWAP2 SWAP1 PUSH2 0x3905 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x279A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F5 PUSH2 0x27F0 DUP5 PUSH2 0x3E72 JUMP JUMPDEST PUSH2 0x3E41 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2844 JUMPI DUP2 PUSH2 0x282A DUP9 DUP3 PUSH2 0x28F8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2817 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2861 PUSH2 0x285C DUP5 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x3E41 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x28B0 JUMPI DUP2 PUSH2 0x2896 DUP9 DUP3 PUSH2 0x2AF3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2883 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28CD PUSH2 0x28C8 DUP5 PUSH2 0x3ECA JUMP JUMPDEST PUSH2 0x3E41 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x28E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28F0 DUP5 DUP3 DUP6 PUSH2 0x41B0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2907 DUP2 PUSH2 0x4205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x291C DUP2 PUSH2 0x4205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2931 DUP2 PUSH2 0x421C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2946 DUP2 PUSH2 0x421C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x295D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x296D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x27E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2997 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x284E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29AF DUP2 PUSH2 0x4233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29C4 DUP2 PUSH2 0x4233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29D9 DUP2 PUSH2 0x424A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x29F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A4A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A62 DUP2 PUSH2 0x4261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A77 DUP2 PUSH2 0x4278 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A8C DUP2 PUSH2 0x428F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AA1 DUP2 PUSH2 0x42A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AED DUP2 PUSH2 0x42BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B02 DUP2 PUSH2 0x42BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B17 DUP2 PUSH2 0x42D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B3D DUP5 DUP3 DUP6 ADD PUSH2 0x28F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B66 DUP5 DUP3 DUP6 ADD PUSH2 0x290D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B8F DUP5 DUP3 DUP6 ADD PUSH2 0x2937 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BBC DUP8 DUP3 DUP9 ADD PUSH2 0x2922 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2BCD DUP8 DUP3 DUP9 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2BDE DUP8 DUP3 DUP9 ADD PUSH2 0x2A53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2BEF DUP8 DUP3 DUP9 ADD PUSH2 0x2A92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2C14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP10 DUP3 DUP11 ADD PUSH2 0x2922 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2C33 DUP10 DUP3 DUP11 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2C44 DUP10 DUP3 DUP11 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2C55 DUP10 DUP3 DUP11 ADD PUSH2 0x2B08 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2C66 DUP10 DUP3 DUP11 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2C77 DUP10 DUP3 DUP11 ADD PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CA5 DUP6 DUP3 DUP7 ADD PUSH2 0x28F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CB6 DUP6 DUP3 DUP7 ADD PUSH2 0x28F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CF9 DUP6 DUP3 DUP7 ADD PUSH2 0x294C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D22 DUP6 DUP3 DUP7 ADD PUSH2 0x294C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D64 DUP5 DUP3 DUP6 ADD PUSH2 0x2976 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D8D DUP5 DUP3 DUP6 ADD PUSH2 0x29B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2DAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DD4 DUP9 DUP3 DUP10 ADD PUSH2 0x29DF JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x2DE7 DUP9 DUP3 DUP10 ADD PUSH2 0x29A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2DF8 DUP9 DUP3 DUP10 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E21 DUP9 DUP3 DUP10 ADD PUSH2 0x2AA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E66 DUP5 DUP3 DUP6 ADD PUSH2 0x2A29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E8F DUP5 DUP3 DUP6 ADD PUSH2 0x2A53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2EBB DUP7 DUP3 DUP8 ADD PUSH2 0x2A53 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2ECC DUP7 DUP3 DUP8 ADD PUSH2 0x28F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2EDD DUP7 DUP3 DUP8 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2EFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F0B DUP8 DUP3 DUP9 ADD PUSH2 0x2A53 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2F1C DUP8 DUP3 DUP9 ADD PUSH2 0x2A92 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F45 DUP8 DUP3 DUP9 ADD PUSH2 0x2AC3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2F56 DUP8 DUP3 DUP9 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F82 DUP5 DUP3 DUP6 ADD PUSH2 0x2A68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2FAB DUP5 DUP3 DUP6 ADD PUSH2 0x2A7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FEC DUP5 DUP3 DUP6 ADD PUSH2 0x2AC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x300E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3034 DUP10 DUP3 DUP11 ADD PUSH2 0x2AC3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x305D DUP10 DUP3 DUP11 ADD PUSH2 0x29DF JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x307C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3088 DUP10 DUP3 DUP11 ADD PUSH2 0x29DF JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x60 PUSH2 0x309B DUP10 DUP3 DUP11 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30C8 DUP5 DUP3 DUP6 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30F1 DUP5 DUP3 DUP6 ADD PUSH2 0x2AF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x310D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x311B DUP6 DUP3 DUP7 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x312C DUP6 DUP3 DUP7 ADD PUSH2 0x2922 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3142 DUP4 DUP4 PUSH2 0x316C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3157 DUP2 PUSH2 0x410E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3166 DUP2 PUSH2 0x4067 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3175 DUP2 PUSH2 0x4055 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3184 DUP2 PUSH2 0x4055 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3195 DUP3 PUSH2 0x3F0A JUMP JUMPDEST PUSH2 0x319F DUP2 DUP6 PUSH2 0x3F38 JUMP JUMPDEST SWAP4 POP PUSH2 0x31AA DUP4 PUSH2 0x3EFA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31DB JUMPI DUP2 MLOAD PUSH2 0x31C2 DUP9 DUP3 PUSH2 0x3136 JUMP JUMPDEST SWAP8 POP PUSH2 0x31CD DUP4 PUSH2 0x3F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x31AE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x31F1 DUP2 PUSH2 0x4079 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3200 DUP2 PUSH2 0x4085 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3212 DUP4 DUP6 PUSH2 0x3F49 JUMP JUMPDEST SWAP4 POP PUSH2 0x321F DUP4 DUP6 DUP5 PUSH2 0x41B0 JUMP JUMPDEST PUSH2 0x3228 DUP4 PUSH2 0x41F4 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x323E DUP3 PUSH2 0x3F15 JUMP JUMPDEST PUSH2 0x3248 DUP2 DUP6 PUSH2 0x3F5A JUMP JUMPDEST SWAP4 POP PUSH2 0x3258 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x41BF JUMP JUMPDEST PUSH2 0x3261 DUP2 PUSH2 0x41F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3277 DUP3 PUSH2 0x3F15 JUMP JUMPDEST PUSH2 0x3281 DUP2 DUP6 PUSH2 0x3F6B JUMP JUMPDEST SWAP4 POP PUSH2 0x3291 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x41BF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32A6 DUP2 PUSH2 0x4120 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x32B5 DUP2 PUSH2 0x4144 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x32C4 DUP2 PUSH2 0x4168 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D5 DUP3 PUSH2 0x3F20 JUMP JUMPDEST PUSH2 0x32DF DUP2 DUP6 PUSH2 0x3F76 JUMP JUMPDEST SWAP4 POP PUSH2 0x32EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x41BF JUMP JUMPDEST PUSH2 0x32F8 DUP2 PUSH2 0x41F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3310 PUSH1 0x1F DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x696E76616C696420666F7277617264657220666F7220726563697069656E7400 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3350 PUSH1 0x1F DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x5468697320746F6B656E206E6F7420737570706F727465642061732066656500 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3390 PUSH1 0x1C DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x697354727573746564466F727761726465723A20726576657274656400000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D0 PUSH1 0x1E DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E5061796D61737465722F42616C616E636520746F206C6F772E0000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3410 PUSH1 0xD DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x6661696C656420726566756E6400000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3450 PUSH1 0x18 DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x466F72776172646572206973206E6F7420747275737465640000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3490 PUSH1 0x20 DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x697354727573746564466F727761726465723A2062616420726573706F6E7365 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34D0 PUSH1 0x15 DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x746F6B656E2062616C616E636520746F6F206C6F770000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3510 PUSH1 0x1E DUP4 PUSH2 0x3F76 JUMP JUMPDEST SWAP2 POP PUSH32 0x63616E206F6E6C792062652063616C6C65642062792052656C61794875620000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH2 0x3556 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x3563 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x3571 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x357E PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x358C PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x3599 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x35A7 PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x35B4 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x35C2 PUSH1 0x80 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x35CF PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x35DD PUSH1 0xA0 DUP5 ADD DUP5 PUSH2 0x3F9E JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x35F0 DUP4 DUP3 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x3601 PUSH1 0xC0 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x360E PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x362F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3642 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3655 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3668 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 ADD PUSH2 0x3682 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x368F PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x369D PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x36AA PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x36B8 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x36C5 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x36D3 PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x36E0 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x36EE PUSH1 0x80 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x36FB PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x3709 PUSH1 0xA0 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x3716 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x3724 PUSH1 0xC0 DUP5 ADD DUP5 PUSH2 0x3F9E JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x3737 DUP4 DUP3 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x3748 PUSH1 0xE0 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x3755 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 ADD PUSH2 0x3774 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x3781 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x378F PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x379C PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x37AA PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x37B7 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP PUSH2 0x37C5 PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x37D2 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x37E0 PUSH1 0x80 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x37ED PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x37FB PUSH1 0xA0 DUP5 ADD DUP5 PUSH2 0x3F87 JUMP JUMPDEST PUSH2 0x3808 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x316C JUMP JUMPDEST POP PUSH2 0x3816 PUSH1 0xC0 DUP5 ADD DUP5 PUSH2 0x3F9E JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x3829 DUP4 DUP3 DUP5 PUSH2 0x3206 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x383A PUSH1 0xE0 DUP5 ADD DUP5 PUSH2 0x403E JUMP JUMPDEST PUSH2 0x3847 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x38A6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH2 0x3865 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x3FF5 JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x3877 DUP3 DUP3 PUSH2 0x3543 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3887 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x4019 JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x3899 DUP3 DUP3 PUSH2 0x366E JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x38AF DUP2 PUSH2 0x40F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x38BE DUP2 PUSH2 0x40F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x38CD DUP2 PUSH2 0x4101 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38DF DUP3 DUP5 PUSH2 0x326C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x317B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x391A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x314E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3935 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x3942 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x394F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x396C PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x3979 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3986 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3993 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x39A0 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x38C4 JUMP JUMPDEST PUSH2 0x39AD PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x31F7 JUMP JUMPDEST PUSH2 0x39BA PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x31F7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x39DB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x39E8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x39F5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A12 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x3A1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3A3B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x317B JUMP JUMPDEST PUSH2 0x3A48 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3A55 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x329D JUMP JUMPDEST PUSH2 0x3A62 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A85 DUP2 DUP6 PUSH2 0x3233 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A94 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3AB0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x329D JUMP JUMPDEST PUSH2 0x3ABD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AF9 DUP2 DUP5 PUSH2 0x32CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B1A DUP2 PUSH2 0x3303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B3A DUP2 PUSH2 0x3343 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B5A DUP2 PUSH2 0x3383 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B7A DUP2 PUSH2 0x33C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B9A DUP2 PUSH2 0x3403 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BBA DUP2 PUSH2 0x3443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BDA DUP2 PUSH2 0x3483 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BFA DUP2 PUSH2 0x34C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C1A DUP2 PUSH2 0x3503 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3619 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C56 DUP2 DUP5 PUSH2 0x3852 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C73 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C8E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3C9B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x315D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CB7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x38B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3CC9 DUP2 DUP5 PUSH2 0x318A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CE7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x38B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3CF9 DUP2 DUP5 PUSH2 0x3760 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3D17 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3D24 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x38B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3D36 DUP2 DUP7 PUSH2 0x318A JUMP JUMPDEST SWAP1 POP PUSH2 0x3D45 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x3D52 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3D71 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3D7E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3D8B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x3D98 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x38B5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3DBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3DD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x3DF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH2 0x100 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3E35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3E68 JUMPI PUSH2 0x3E67 PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3E8D JUMPI PUSH2 0x3E8C PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EB9 JUMPI PUSH2 0x3EB8 PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EE5 JUMPI PUSH2 0x3EE4 PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F96 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x28F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP2 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3FDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP5 SGT ISZERO PUSH2 0x3FED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x400D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH2 0x100 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4032 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404D PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x2ADE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4060 DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4072 DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409A DUP3 PUSH2 0x4055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40AC DUP3 PUSH2 0x4055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40BE DUP3 PUSH2 0x4055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D0 DUP3 PUSH2 0x4055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4119 DUP3 PUSH2 0x418C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412B DUP3 PUSH2 0x4132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x413D DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x414F DUP3 PUSH2 0x4156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4161 DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4173 DUP3 PUSH2 0x417A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4185 DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4197 DUP3 PUSH2 0x419E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A9 DUP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x41DD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x41C2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x41EC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST INVALID JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x420E DUP2 PUSH2 0x4055 JUMP JUMPDEST DUP2 EQ PUSH2 0x4219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4225 DUP2 PUSH2 0x4067 JUMP JUMPDEST DUP2 EQ PUSH2 0x4230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x423C DUP2 PUSH2 0x4079 JUMP JUMPDEST DUP2 EQ PUSH2 0x4247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4253 DUP2 PUSH2 0x4085 JUMP JUMPDEST DUP2 EQ PUSH2 0x425E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x426A DUP2 PUSH2 0x408F JUMP JUMPDEST DUP2 EQ PUSH2 0x4275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4281 DUP2 PUSH2 0x40A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x428C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4298 DUP2 PUSH2 0x40B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x42A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x42AF DUP2 PUSH2 0x40C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x42BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x42C6 DUP2 PUSH2 0x40F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x42D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x42DD DUP2 PUSH2 0x4101 JUMP JUMPDEST DUP2 EQ PUSH2 0x42E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220577EA31B146A SWAP5 PUSH21 0x56167F832097E860663ADF5F25FCA588D7279C4A64 DUP16 OR PUSH5 0x64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
              "sourceMap": "656:6739:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1330:19;1339:9;1330:19;;;;;;:::i;:::-;;;;;;;;656:6739;;;;;1964:1068;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3649:277;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2524:139:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3073;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5649:326:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3518:125;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1107:166;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6014:111;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1362:595;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1158:51:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;989:112:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1717:145:10;;;;;;;;;;;;;:::i;:::-;;613:102:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3038:474:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2271:84:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;563:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1085:85:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;751:113:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1743:273:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;923:25:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6440:312;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;786:54:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;981:60;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2361:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6214:219:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1047:105:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;870:46:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2011:240:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;916:59:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1964:1068:16;2218:20;2240:28;2200:12:0;:10;:12::i;:::-;2186:26;;:10;:26;;;2178:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2347:12:16::1;2361:15:::0;2380:47:::1;2390:12;:22;;;;;;;;:::i;:::-;:36;;;;;;;;:::i;:::-;2380:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:47::i;:::-;2346:81;;;;2438:13;2453:22:::0;2479:63:::1;2498:5;2505:6;2513:12;2527:14;2479:18;:63::i;:::-;2437:105;;;;2553:13;2568::::0;2583:16:::1;2601:7:::0;2610:9:::1;2621::::0;2645:12:::1;;2634:78;;;;;;;:::i;:::-;2552:160;;;;;;;;;;;;2743:5;2722:35;;;2758:5;2773:4;2780:5;2787:8;2797:1;2800;2803;2722:83;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2815:5;:18;;;2834:5;2849:4;2856:14;2815:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2886:65;2911:5;2927:6;2936:14;2886:65;;;;;;;;:::i;:::-;;;;;;;;2980:5;2987:14;3003:5;3010:6;2969:48;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3019:5;2961:64;;;;;;;;;;;;;;1964:1068:::0;;;;;;;;;:::o;3649:277::-;1308:12:10;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3750:20:16::1;3773:5;:15;;;3797:4;3773:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3750:53;;3831:12;3821:6;:22;;3813:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3888:5;:14;;;3903:7;3912:6;3888:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1367:1:10;3649:277:16::0;;;:::o;2524:139:0:-;2600:4;2623:8;;;;;;;;;;;:18;;;2650:4;2623:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2616:40;;2524:139;:::o;3073:::-;1308:12:10;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3172:8:0::1;;;;;;;;;;;:17;;;3190:6;3198;3172:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3073:139:::0;;:::o;5649:326:16:-;5717:6;5725:8;5746:13;5774;5763:36;;;;;;;;;;;;:::i;:::-;5745:54;;5810:14;5828:10;:17;5839:5;5828:17;;;;;;;;;;;;;;;;;;;;;;;;;5809:36;;5880:1;5863:19;;:5;:19;;;;5855:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;5943:5;5960:6;5928:40;;;;;;5649:326;;;:::o;3518:125::-;3580:7;3606:5;:15;;;3630:4;3606:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3599:37;;3518:125;;;:::o;1107:166::-;1199:7;1241:12;:20;;;;;;;;:::i;:::-;:25;;;;;;;;;;:::i;:::-;1234:32;;1107:166;;;:::o;6014:111::-;1308:12:10;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6112:6:16::1;6092:10;:17;6103:5;6092:17;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;6014:111:::0;;:::o;1362:595::-;1556:13;1571:22;1613:4;:13;;;1627:12;1613:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1605:35;;1650:17;1670:8;;;;;;;;;;;:24;;;1695:14;1711:12;:22;;;;;;;;:::i;:::-;1670:64;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1650:84;;1760:12;:20;;;;;;;;:::i;:::-;:26;;;1744:42;;;;1813:53;1838:12;1852:5;1859:6;1813:24;:53::i;:::-;1796:70;;1902:5;:15;;;1918:5;1902:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1884:14;:40;;1876:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1362:595;;;;;;;;:::o;1158:51:0:-;1204:5;1158:51;:::o;989:112:16:-;1308:12:10;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1080:14:16::1;1064:13;:30;;;;989:112:::0;:::o;1717:145:10:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;613:102:0:-;665:7;699:8;;;;;;;;;;;684:24;;613:102;:::o;3038:474:16:-;2200:12:0;:10;:12::i;:::-;2186:26;;:10;:26;;;2178:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3271:13:16::1;3286:22:::0;3310:12:::1;3324:15:::0;3354:7:::1;;3343:57;;;;;;;:::i;:::-;3270:130;;;;;;;;3410:95;3435:5;3442:14;3458:1;3461:17;3480:9;3491:5;3498:6;3410:24;:95::i;:::-;2257:1:0;;;;3038:474:16::0;;;;;:::o;2271:84:0:-;1308:12:10;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2345:3:0::1;2334:8;;:14;;;;;;;;;;;;;;;;;;2271:84:::0;:::o;563:43::-;;;;;;;;;;;;;:::o;1085:85:10:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;751:113:16:-;819:13;843:14;;;;;;;;;;;;;;;;;;;751:113;:::o;1743:273:0:-;1885:12;:22;;;;;;;;:::i;:::-;:32;;;;;;;;;;:::i;:::-;1856:61;;1864:16;;;;;;;;;;;1856:61;;;1848:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;1956:53;1996:12;1956:39;:53::i;:::-;1743:273;:::o;923:25:16:-;;;;:::o;6440:312::-;6538:41;;:::i;:::-;6603:142;;;;;;;;6648:6;6603:142;;;;6672:6;6603:142;;;;6696:6;6603:142;;;;1204:5:0;6603:142:16;;;6596:149;;6440:312;:::o;786:54:0:-;835:5;786:54;:::o;981:60::-;1035:6;981:60;:::o;2361:113::-;1308:12:10;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:9:0::1;2439:16;;:28;;;;;;;;;;;;;;;;;;2361:113:::0;:::o;6214:219:16:-;1308:12:10;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6326:6:16::1;6322:105;6341:6;:13;6338:1;:16;6322:105;;;6402:7;6410:1;6402:10;;;;;;;;;;;;;;6378;:21;6389:6;6396:1;6389:9;;;;;;;;;;;;;;6378:21;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;6356:3;;;;;;;6322:105;;;;6214:219:::0;;:::o;1047:105:0:-;835:5;969:6;1101:51;1047:105;:::o;870:46:16:-;;;;;;;;;;;;;;;;;;;;;;:::o;2011:240:10:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;916:59:0:-;969:6;916:59;:::o;598:104:14:-;651:15;685:10;678:17;;598:104;:::o;6815:338:16:-;6918:7;6937:21;6975:1;6961:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6937:40;;7005:5;6987:4;6992:1;6987:7;;;;;;;;;;;;;:24;;;;;;;;;;;7031:6;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7021:4;7026:1;7021:7;;;;;;;;;;;;;:23;;;;;;;;;;;7054:24;7081:6;:19;;;7101:8;7111:4;7081:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7054:62;;7133:10;7144:1;7133:13;;;;;;;;;;;;;;7126:20;;;;6815:338;;;;;:::o;3932:793::-;4207:23;4233:8;;;;;;;;;;;:24;;;4258:36;4280:13;;4258:17;:21;;:36;;;;:::i;:::-;4296:9;4233:73;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4207:99;;4316:25;4344:76;4369:35;4388:15;4369:14;:18;;:35;;;;:::i;:::-;4406:5;4413:6;4344:24;:76::i;:::-;4316:104;;4430:19;4452:37;4471:17;4452:14;:18;;:37;;;;:::i;:::-;4430:59;;4499:39;4512:5;4519;4526:11;4499:12;:39::i;:::-;4548:72;4570:15;4587:17;4606:5;4613:6;4548:21;:72::i;:::-;4635:83;4649:17;4668:13;;4683:15;4700:17;4635:83;;;;;;;;;:::i;:::-;;;;;;;;3932:793;;;;;;;;;;:::o;2052:538:6:-;2154:12;2168:16;2188:12;:20;;;;;;;;:::i;:::-;:23;;;;;;;;;;:::i;:::-;:34;;2276:43;;;2321:12;:22;;;;;;;;:::i;:::-;:32;;;;;;;;;;:::i;:::-;2236:131;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:189;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:224;;;;2395:7;2387:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2467:2;2453:3;:10;:16;2445:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2535:3;2524:23;;;;;;;;;;;;:::i;:::-;2516:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2052:538;;;:::o;2690:175:12:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;4731:187:16:-;4859:5;:14;;;4874:5;4881:11;4859:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4851:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4731:187;;;:::o;4981:534::-;5148:21;5186:1;5172:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5148:40;;5216:5;5198:4;5203:1;5198:7;;;;;;;;;;;;;:24;;;;;;;;;;;5242:6;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5232:4;5237:1;5232:7;;;;;;;;;;;;;:23;;;;;;;;;;;5265:5;:13;;;5287:6;5300:2;5265:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5314:6;:28;;;5343:17;5362:15;5379:4;5392;5415:5;5399:15;:21;5314:107;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5449:8;;;;;;;;;;;5431:39;;;5477:15;5502:4;5431:77;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:534;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24:622:17:-;;145:80;160:64;217:6;160:64;:::i;:::-;145:80;:::i;:::-;136:89;;245:5;273:6;266:5;259:21;299:4;292:5;288:16;281:23;;324:6;374:3;366:4;358:6;354:17;349:3;345:27;342:36;339:2;;;391:1;388;381:12;339:2;419:1;404:236;429:6;426:1;423:13;404:236;;;496:3;524:37;557:3;545:10;524:37;:::i;:::-;519:3;512:50;591:4;586:3;582:14;575:21;;625:4;620:3;616:14;609:21;;464:176;451:1;448;444:9;439:14;;404:236;;;408:14;126:520;;;;;;;:::o;669:644::-;;801:80;816:64;873:6;816:64;:::i;:::-;801:80;:::i;:::-;792:89;;901:5;929:6;922:5;915:21;955:4;948:5;944:16;937:23;;980:6;1030:3;1022:4;1014:6;1010:17;1005:3;1001:27;998:36;995:2;;;1047:1;1044;1037:12;995:2;1075:1;1060:247;1085:6;1082:1;1079:13;1060:247;;;1152:3;1180:48;1224:3;1212:10;1180:48;:::i;:::-;1175:3;1168:61;1258:4;1253:3;1249:14;1242:21;;1292:4;1287:3;1283:14;1276:21;;1120:187;1107:1;1104;1100:9;1095:14;;1060:247;;;1064:14;782:531;;;;;;;:::o;1319:342::-;;1421:64;1436:48;1477:6;1436:48;:::i;:::-;1421:64;:::i;:::-;1412:73;;1508:6;1501:5;1494:21;1546:4;1539:5;1535:16;1584:3;1575:6;1570:3;1566:16;1563:25;1560:2;;;1601:1;1598;1591:12;1560:2;1614:41;1648:6;1643:3;1638;1614:41;:::i;:::-;1402:259;;;;;;:::o;1667:139::-;;1751:6;1738:20;1729:29;;1767:33;1794:5;1767:33;:::i;:::-;1719:87;;;;:::o;1812:143::-;;1900:6;1894:13;1885:22;;1916:33;1943:5;1916:33;:::i;:::-;1875:80;;;;:::o;1961:155::-;;2053:6;2040:20;2031:29;;2069:41;2104:5;2069:41;:::i;:::-;2021:95;;;;:::o;2122:159::-;;2218:6;2212:13;2203:22;;2234:41;2269:5;2234:41;:::i;:::-;2193:88;;;;:::o;2304:303::-;;2424:3;2417:4;2409:6;2405:17;2401:27;2391:2;;2442:1;2439;2432:12;2391:2;2482:6;2469:20;2507:94;2597:3;2589:6;2582:4;2574:6;2570:17;2507:94;:::i;:::-;2498:103;;2381:226;;;;;:::o;2630:318::-;;2761:3;2754:4;2746:6;2742:17;2738:27;2728:2;;2779:1;2776;2769:12;2728:2;2812:6;2806:13;2837:105;2938:3;2930:6;2923:4;2915:6;2911:17;2837:105;:::i;:::-;2828:114;;2718:230;;;;;:::o;2954:133::-;;3035:6;3022:20;3013:29;;3051:30;3075:5;3051:30;:::i;:::-;3003:84;;;;:::o;3093:137::-;;3178:6;3172:13;3163:22;;3194:30;3218:5;3194:30;:::i;:::-;3153:77;;;;:::o;3236:139::-;;3320:6;3307:20;3298:29;;3336:33;3363:5;3336:33;:::i;:::-;3288:87;;;;:::o;3394:351::-;;;3511:3;3504:4;3496:6;3492:17;3488:27;3478:2;;3529:1;3526;3519:12;3478:2;3565:6;3552:20;3542:30;;3595:18;3587:6;3584:30;3581:2;;;3627:1;3624;3617:12;3581:2;3664:4;3656:6;3652:17;3640:29;;3718:3;3710:4;3702:6;3698:17;3688:8;3684:32;3681:41;3678:2;;;3735:1;3732;3725:12;3678:2;3468:277;;;;;:::o;3764:271::-;;3868:3;3861:4;3853:6;3849:17;3845:27;3835:2;;3886:1;3883;3876:12;3835:2;3926:6;3913:20;3951:78;4025:3;4017:6;4010:4;4002:6;3998:17;3951:78;:::i;:::-;3942:87;;3825:210;;;;;:::o;4041:169::-;;4140:6;4127:20;4118:29;;4156:48;4198:5;4156:48;:::i;:::-;4108:102;;;;:::o;4216:175::-;;4318:6;4305:20;4296:29;;4334:51;4379:5;4334:51;:::i;:::-;4286:105;;;;:::o;4397:173::-;;4498:6;4485:20;4476:29;;4514:50;4558:5;4514:50;:::i;:::-;4466:104;;;;:::o;4576:173::-;;4677:6;4664:20;4655:29;;4693:50;4737:5;4693:50;:::i;:::-;4645:104;;;;:::o;4788:167::-;;4904:3;4895:6;4890:3;4886:16;4882:26;4879:2;;;4921:1;4918;4911:12;4879:2;4943:6;4934:15;;4869:86;;;;:::o;4997:169::-;;5116:2;5107:6;5102:3;5098:16;5094:25;5091:2;;;5132:1;5129;5122:12;5091:2;5154:6;5145:15;;5081:85;;;;:::o;5172:139::-;;5256:6;5243:20;5234:29;;5272:33;5299:5;5272:33;:::i;:::-;5224:87;;;;:::o;5317:143::-;;5405:6;5399:13;5390:22;;5421:33;5448:5;5421:33;:::i;:::-;5380:80;;;;:::o;5466:135::-;;5548:6;5535:20;5526:29;;5564:31;5589:5;5564:31;:::i;:::-;5516:85;;;;:::o;5607:262::-;;5715:2;5703:9;5694:7;5690:23;5686:32;5683:2;;;5731:1;5728;5721:12;5683:2;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5673:196;;;;:::o;5875:284::-;;5994:2;5982:9;5973:7;5969:23;5965:32;5962:2;;;6010:1;6007;6000:12;5962:2;6053:1;6078:64;6134:7;6125:6;6114:9;6110:22;6078:64;:::i;:::-;6068:74;;6024:128;5952:207;;;;:::o;6165:300::-;;6292:2;6280:9;6271:7;6267:23;6263:32;6260:2;;;6308:1;6305;6298:12;6260:2;6351:1;6376:72;6440:7;6431:6;6420:9;6416:22;6376:72;:::i;:::-;6366:82;;6322:136;6250:215;;;;:::o;6471:778::-;;;;;6670:3;6658:9;6649:7;6645:23;6641:33;6638:2;;;6687:1;6684;6677:12;6638:2;6730:1;6755:61;6808:7;6799:6;6788:9;6784:22;6755:61;:::i;:::-;6745:71;;6701:125;6865:2;6891:53;6936:7;6927:6;6916:9;6912:22;6891:53;:::i;:::-;6881:63;;6836:118;6993:2;7019:68;7079:7;7070:6;7059:9;7055:22;7019:68;:::i;:::-;7009:78;;6964:133;7136:2;7162:70;7224:7;7215:6;7204:9;7200:22;7162:70;:::i;:::-;7152:80;;7107:135;6628:621;;;;;;;:::o;7255:1002::-;;;;;;;7454:3;7442:9;7433:7;7429:23;7425:33;7422:2;;;7471:1;7468;7461:12;7422:2;7514:1;7539:61;7592:7;7583:6;7572:9;7568:22;7539:61;:::i;:::-;7529:71;;7485:125;7649:2;7675:53;7720:7;7711:6;7700:9;7696:22;7675:53;:::i;:::-;7665:63;;7620:118;7777:2;7803:53;7848:7;7839:6;7828:9;7824:22;7803:53;:::i;:::-;7793:63;;7748:118;7905:2;7931:51;7974:7;7965:6;7954:9;7950:22;7931:51;:::i;:::-;7921:61;;7876:116;8031:3;8058:53;8103:7;8094:6;8083:9;8079:22;8058:53;:::i;:::-;8048:63;;8002:119;8160:3;8187:53;8232:7;8223:6;8212:9;8208:22;8187:53;:::i;:::-;8177:63;;8131:119;7412:845;;;;;;;;:::o;8263:407::-;;;8388:2;8376:9;8367:7;8363:23;8359:32;8356:2;;;8404:1;8401;8394:12;8356:2;8447:1;8472:53;8517:7;8508:6;8497:9;8493:22;8472:53;:::i;:::-;8462:63;;8418:117;8574:2;8600:53;8645:7;8636:6;8625:9;8621:22;8600:53;:::i;:::-;8590:63;;8545:118;8346:324;;;;;:::o;8676:693::-;;;8851:2;8839:9;8830:7;8826:23;8822:32;8819:2;;;8867:1;8864;8857:12;8819:2;8938:1;8927:9;8923:17;8910:31;8968:18;8960:6;8957:30;8954:2;;;9000:1;8997;8990:12;8954:2;9028:78;9098:7;9089:6;9078:9;9074:22;9028:78;:::i;:::-;9018:88;;8881:235;9183:2;9172:9;9168:18;9155:32;9214:18;9206:6;9203:30;9200:2;;;9246:1;9243;9236:12;9200:2;9274:78;9344:7;9335:6;9324:9;9320:22;9274:78;:::i;:::-;9264:88;;9126:236;8809:560;;;;;:::o;9375:420::-;;9519:2;9507:9;9498:7;9494:23;9490:32;9487:2;;;9535:1;9532;9525:12;9487:2;9599:1;9588:9;9584:17;9578:24;9629:18;9621:6;9618:30;9615:2;;;9661:1;9658;9651:12;9615:2;9689:89;9770:7;9761:6;9750:9;9746:22;9689:89;:::i;:::-;9679:99;;9549:239;9477:318;;;;:::o;9801:278::-;;9917:2;9905:9;9896:7;9892:23;9888:32;9885:2;;;9933:1;9930;9923:12;9885:2;9976:1;10001:61;10054:7;10045:6;10034:9;10030:22;10001:61;:::i;:::-;9991:71;;9947:125;9875:204;;;;:::o;10085:974::-;;;;;;10289:3;10277:9;10268:7;10264:23;10260:33;10257:2;;;10306:1;10303;10296:12;10257:2;10377:1;10366:9;10362:17;10349:31;10407:18;10399:6;10396:30;10393:2;;;10439:1;10436;10429:12;10393:2;10475:64;10531:7;10522:6;10511:9;10507:22;10475:64;:::i;:::-;10457:82;;;;10320:229;10588:2;10614:50;10656:7;10647:6;10636:9;10632:22;10614:50;:::i;:::-;10604:60;;10559:115;10713:2;10739:53;10784:7;10775:6;10764:9;10760:22;10739:53;:::i;:::-;10729:63;;10684:118;10869:2;10858:9;10854:18;10841:32;10900:18;10892:6;10889:30;10886:2;;;10932:1;10929;10922:12;10886:2;10960:82;11034:7;11025:6;11014:9;11010:22;10960:82;:::i;:::-;10950:92;;10812:240;10247:812;;;;;;;;:::o;11065:373::-;;11182:2;11170:9;11161:7;11157:23;11153:32;11150:2;;;11198:1;11195;11188:12;11150:2;11269:1;11258:9;11254:17;11241:31;11299:18;11291:6;11288:30;11285:2;;;11331:1;11328;11321:12;11285:2;11359:62;11413:7;11404:6;11393:9;11389:22;11359:62;:::i;:::-;11349:72;;11212:219;11140:298;;;;:::o;11444:292::-;;11567:2;11555:9;11546:7;11542:23;11538:32;11535:2;;;11583:1;11580;11573:12;11535:2;11626:1;11651:68;11711:7;11702:6;11691:9;11687:22;11651:68;:::i;:::-;11641:78;;11597:132;11525:211;;;;:::o;11742:582::-;;;;11899:2;11887:9;11878:7;11874:23;11870:32;11867:2;;;11915:1;11912;11905:12;11867:2;11958:1;11983:68;12043:7;12034:6;12023:9;12019:22;11983:68;:::i;:::-;11973:78;;11929:132;12100:2;12126:53;12171:7;12162:6;12151:9;12147:22;12126:53;:::i;:::-;12116:63;;12071:118;12228:2;12254:53;12299:7;12290:6;12279:9;12275:22;12254:53;:::i;:::-;12244:63;;12199:118;11857:467;;;;;:::o;12330:919::-;;;;;12553:3;12541:9;12532:7;12528:23;12524:33;12521:2;;;12570:1;12567;12560:12;12521:2;12613:1;12638:68;12698:7;12689:6;12678:9;12674:22;12638:68;:::i;:::-;12628:78;;12584:132;12755:2;12781:70;12843:7;12834:6;12823:9;12819:22;12781:70;:::i;:::-;12771:80;;12726:135;12928:2;12917:9;12913:18;12900:32;12959:18;12951:6;12948:30;12945:2;;;12991:1;12988;12981:12;12945:2;13019:85;13096:7;13087:6;13076:9;13072:22;13019:85;:::i;:::-;13009:95;;12871:243;13153:2;13179:53;13224:7;13215:6;13204:9;13200:22;13179:53;:::i;:::-;13169:63;;13124:118;12511:738;;;;;;;:::o;13255:298::-;;13381:2;13369:9;13360:7;13356:23;13352:32;13349:2;;;13397:1;13394;13387:12;13349:2;13440:1;13465:71;13528:7;13519:6;13508:9;13504:22;13465:71;:::i;:::-;13455:81;;13411:135;13339:214;;;;:::o;13559:296::-;;13684:2;13672:9;13663:7;13659:23;13655:32;13652:2;;;13700:1;13697;13690:12;13652:2;13743:1;13768:70;13830:7;13821:6;13810:9;13806:22;13768:70;:::i;:::-;13758:80;;13714:134;13642:213;;;;:::o;13861:419::-;;14001:2;13989:9;13980:7;13976:23;13972:32;13969:2;;;14017:1;14014;14007:12;13969:2;14088:1;14077:9;14073:17;14060:31;14118:18;14110:6;14107:30;14104:2;;;14150:1;14147;14140:12;14104:2;14178:85;14255:7;14246:6;14235:9;14231:22;14178:85;:::i;:::-;14168:95;;14031:242;13959:321;;;;:::o;14286:1117::-;;;;;;;14515:3;14503:9;14494:7;14490:23;14486:33;14483:2;;;14532:1;14529;14522:12;14483:2;14603:1;14592:9;14588:17;14575:31;14633:18;14625:6;14622:30;14619:2;;;14665:1;14662;14655:12;14619:2;14693:85;14770:7;14761:6;14750:9;14746:22;14693:85;:::i;:::-;14683:95;;14546:242;14855:2;14844:9;14840:18;14827:32;14886:18;14878:6;14875:30;14872:2;;;14918:1;14915;14908:12;14872:2;14954:64;15010:7;15001:6;14990:9;14986:22;14954:64;:::i;:::-;14936:82;;;;14798:230;15095:2;15084:9;15080:18;15067:32;15126:18;15118:6;15115:30;15112:2;;;15158:1;15155;15148:12;15112:2;15194:64;15250:7;15241:6;15230:9;15226:22;15194:64;:::i;:::-;15176:82;;;;15038:230;15307:2;15333:53;15378:7;15369:6;15358:9;15354:22;15333:53;:::i;:::-;15323:63;;15278:118;14473:930;;;;;;;;:::o;15409:262::-;;15517:2;15505:9;15496:7;15492:23;15488:32;15485:2;;;15533:1;15530;15523:12;15485:2;15576:1;15601:53;15646:7;15637:6;15626:9;15622:22;15601:53;:::i;:::-;15591:63;;15547:117;15475:196;;;;:::o;15677:284::-;;15796:2;15784:9;15775:7;15771:23;15767:32;15764:2;;;15812:1;15809;15802:12;15764:2;15855:1;15880:64;15936:7;15927:6;15916:9;15912:22;15880:64;:::i;:::-;15870:74;;15826:128;15754:207;;;;:::o;15967:423::-;;;16100:2;16088:9;16079:7;16075:23;16071:32;16068:2;;;16116:1;16113;16106:12;16068:2;16159:1;16184:53;16229:7;16220:6;16209:9;16205:22;16184:53;:::i;:::-;16174:63;;16130:117;16286:2;16312:61;16365:7;16356:6;16345:9;16341:22;16312:61;:::i;:::-;16302:71;;16257:126;16058:332;;;;;:::o;16396:179::-;;16486:46;16528:3;16520:6;16486:46;:::i;:::-;16564:4;16559:3;16555:14;16541:28;;16476:99;;;;:::o;16581:147::-;16676:45;16715:5;16676:45;:::i;:::-;16671:3;16664:58;16654:74;;:::o;16734:142::-;16837:32;16863:5;16837:32;:::i;:::-;16832:3;16825:45;16815:61;;:::o;16882:108::-;16959:24;16977:5;16959:24;:::i;:::-;16954:3;16947:37;16937:53;;:::o;16996:118::-;17083:24;17101:5;17083:24;:::i;:::-;17078:3;17071:37;17061:53;;:::o;17150:732::-;;17298:54;17346:5;17298:54;:::i;:::-;17368:86;17447:6;17442:3;17368:86;:::i;:::-;17361:93;;17478:56;17528:5;17478:56;:::i;:::-;17557:7;17588:1;17573:284;17598:6;17595:1;17592:13;17573:284;;;17674:6;17668:13;17701:63;17760:3;17745:13;17701:63;:::i;:::-;17694:70;;17787:60;17840:6;17787:60;:::i;:::-;17777:70;;17633:224;17620:1;17617;17613:9;17608:14;;17573:284;;;17577:14;17873:3;17866:10;;17274:608;;;;;;;:::o;17888:109::-;17969:21;17984:5;17969:21;:::i;:::-;17964:3;17957:34;17947:50;;:::o;18003:118::-;18090:24;18108:5;18090:24;:::i;:::-;18085:3;18078:37;18068:53;;:::o;18149:281::-;;18256:60;18309:6;18304:3;18256:60;:::i;:::-;18249:67;;18326:43;18362:6;18357:3;18350:5;18326:43;:::i;:::-;18394:29;18416:6;18394:29;:::i;:::-;18389:3;18385:39;18378:46;;18239:191;;;;;:::o;18436:360::-;;18550:38;18582:5;18550:38;:::i;:::-;18604:70;18667:6;18662:3;18604:70;:::i;:::-;18597:77;;18683:52;18728:6;18723:3;18716:4;18709:5;18705:16;18683:52;:::i;:::-;18760:29;18782:6;18760:29;:::i;:::-;18755:3;18751:39;18744:46;;18526:270;;;;;:::o;18802:373::-;;18934:38;18966:5;18934:38;:::i;:::-;18988:88;19069:6;19064:3;18988:88;:::i;:::-;18981:95;;19085:52;19130:6;19125:3;19118:4;19111:5;19107:16;19085:52;:::i;:::-;19162:6;19157:3;19153:16;19146:23;;18910:265;;;;;:::o;19181:161::-;19283:52;19329:5;19283:52;:::i;:::-;19278:3;19271:65;19261:81;;:::o;19348:167::-;19453:55;19502:5;19453:55;:::i;:::-;19448:3;19441:68;19431:84;;:::o;19521:165::-;19625:54;19673:5;19625:54;:::i;:::-;19620:3;19613:67;19603:83;;:::o;19692:364::-;;19808:39;19841:5;19808:39;:::i;:::-;19863:71;19927:6;19922:3;19863:71;:::i;:::-;19856:78;;19943:52;19988:6;19983:3;19976:4;19969:5;19965:16;19943:52;:::i;:::-;20020:29;20042:6;20020:29;:::i;:::-;20015:3;20011:39;20004:46;;19784:272;;;;;:::o;20062:329::-;;20225:67;20289:2;20284:3;20225:67;:::i;:::-;20218:74;;20322:33;20318:1;20313:3;20309:11;20302:54;20382:2;20377:3;20373:12;20366:19;;20208:183;;;:::o;20397:329::-;;20560:67;20624:2;20619:3;20560:67;:::i;:::-;20553:74;;20657:33;20653:1;20648:3;20644:11;20637:54;20717:2;20712:3;20708:12;20701:19;;20543:183;;;:::o;20732:326::-;;20895:67;20959:2;20954:3;20895:67;:::i;:::-;20888:74;;20992:30;20988:1;20983:3;20979:11;20972:51;21049:2;21044:3;21040:12;21033:19;;20878:180;;;:::o;21064:328::-;;21227:67;21291:2;21286:3;21227:67;:::i;:::-;21220:74;;21324:32;21320:1;21315:3;21311:11;21304:53;21383:2;21378:3;21374:12;21367:19;;21210:182;;;:::o;21398:311::-;;21561:67;21625:2;21620:3;21561:67;:::i;:::-;21554:74;;21658:15;21654:1;21649:3;21645:11;21638:36;21700:2;21695:3;21691:12;21684:19;;21544:165;;;:::o;21715:322::-;;21878:67;21942:2;21937:3;21878:67;:::i;:::-;21871:74;;21975:26;21971:1;21966:3;21962:11;21955:47;22028:2;22023:3;22019:12;22012:19;;21861:176;;;:::o;22043:330::-;;22206:67;22270:2;22265:3;22206:67;:::i;:::-;22199:74;;22303:34;22299:1;22294:3;22290:11;22283:55;22364:2;22359:3;22355:12;22348:19;;22189:184;;;:::o;22379:319::-;;22542:67;22606:2;22601:3;22542:67;:::i;:::-;22535:74;;22639:23;22635:1;22630:3;22626:11;22619:44;22689:2;22684:3;22680:12;22673:19;;22525:173;;;:::o;22704:328::-;;22867:67;22931:2;22926:3;22867:67;:::i;:::-;22860:74;;22964:32;22960:1;22955:3;22951:11;22944:53;23023:2;23018:3;23014:12;23007:19;;22850:182;;;:::o;23114:1713::-;;23273:4;23268:3;23264:14;23343:50;23387:4;23380:5;23376:16;23369:5;23343:50;:::i;:::-;23406:63;23463:4;23458:3;23454:14;23440:12;23406:63;:::i;:::-;23288:191;23542:50;23586:4;23579:5;23575:16;23568:5;23542:50;:::i;:::-;23605:63;23662:4;23657:3;23653:14;23639:12;23605:63;:::i;:::-;23489:189;23744:50;23788:4;23781:5;23777:16;23770:5;23744:50;:::i;:::-;23807:63;23864:4;23859:3;23855:14;23841:12;23807:63;:::i;:::-;23688:192;23944:50;23988:4;23981:5;23977:16;23970:5;23944:50;:::i;:::-;24007:63;24064:4;24059:3;24055:14;24041:12;24007:63;:::i;:::-;23890:190;24146:50;24190:4;24183:5;24179:16;24172:5;24146:50;:::i;:::-;24209:63;24266:4;24261:3;24257:14;24243:12;24209:63;:::i;:::-;24090:192;24361:61;24416:4;24409:5;24405:16;24398:5;24361:61;:::i;:::-;24469:3;24463:4;24459:14;24452:4;24447:3;24443:14;24436:38;24495:87;24577:4;24563:12;24549;24495:87;:::i;:::-;24487:95;;24292:301;;24664:50;24708:4;24701:5;24697:16;24690:5;24664:50;:::i;:::-;24727:63;24784:4;24779:3;24775:14;24761:12;24727:63;:::i;:::-;24603:197;24817:4;24810:11;;23242:1585;;;;;:::o;24913:933::-;25076:4;25071:3;25067:14;25175:4;25168:5;25164:16;25158:23;25194:63;25251:4;25246:3;25242:14;25228:12;25194:63;:::i;:::-;25091:176;25367:4;25360:5;25356:16;25350:23;25386:63;25443:4;25438:3;25434:14;25420:12;25386:63;:::i;:::-;25277:182;25560:4;25553:5;25549:16;25543:23;25579:63;25636:4;25631:3;25627:14;25613:12;25579:63;:::i;:::-;25469:183;25747:4;25740:5;25736:16;25730:23;25766:63;25823:4;25818:3;25814:14;25800:12;25766:63;:::i;:::-;25662:177;25045:801;;;:::o;25914:1952::-;;26065:6;26060:3;26056:16;26141:50;26185:4;26178:5;26174:16;26167:5;26141:50;:::i;:::-;26204:63;26261:4;26256:3;26252:14;26238:12;26204:63;:::i;:::-;26082:195;26349:50;26393:4;26386:5;26382:16;26375:5;26349:50;:::i;:::-;26412:63;26469:4;26464:3;26460:14;26446:12;26412:63;:::i;:::-;26287:198;26558:50;26602:4;26595:5;26591:16;26584:5;26558:50;:::i;:::-;26621:63;26678:4;26673:3;26669:14;26655:12;26621:63;:::i;:::-;26495:199;26766:50;26810:4;26803:5;26799:16;26792:5;26766:50;:::i;:::-;26829:63;26886:4;26881:3;26877:14;26863:12;26829:63;:::i;:::-;26704:198;26972:50;27016:4;27009:5;27005:16;26998:5;26972:50;:::i;:::-;27035:63;27092:4;27087:3;27083:14;27069:12;27035:63;:::i;:::-;26912:196;27178:50;27222:4;27215:5;27211:16;27204:5;27178:50;:::i;:::-;27241:63;27298:4;27293:3;27289:14;27275:12;27241:63;:::i;:::-;27118:196;27402:61;27457:4;27450:5;27446:16;27439:5;27402:61;:::i;:::-;27510:3;27504:4;27500:14;27493:4;27488:3;27484:14;27477:38;27536:87;27618:4;27604:12;27590;27536:87;:::i;:::-;27528:95;;27324:310;;27703:50;27747:4;27740:5;27736:16;27729:5;27703:50;:::i;:::-;27766:63;27823:4;27818:3;27814:14;27800:12;27766:63;:::i;:::-;27644:195;27856:4;27849:11;;26034:1832;;;;;:::o;27934:1962::-;;28095:6;28090:3;28086:16;28171:50;28215:4;28208:5;28204:16;28197:5;28171:50;:::i;:::-;28234:63;28291:4;28286:3;28282:14;28268:12;28234:63;:::i;:::-;28112:195;28379:50;28423:4;28416:5;28412:16;28405:5;28379:50;:::i;:::-;28442:63;28499:4;28494:3;28490:14;28476:12;28442:63;:::i;:::-;28317:198;28588:50;28632:4;28625:5;28621:16;28614:5;28588:50;:::i;:::-;28651:63;28708:4;28703:3;28699:14;28685:12;28651:63;:::i;:::-;28525:199;28796:50;28840:4;28833:5;28829:16;28822:5;28796:50;:::i;:::-;28859:63;28916:4;28911:3;28907:14;28893:12;28859:63;:::i;:::-;28734:198;29002:50;29046:4;29039:5;29035:16;29028:5;29002:50;:::i;:::-;29065:63;29122:4;29117:3;29113:14;29099:12;29065:63;:::i;:::-;28942:196;29208:50;29252:4;29245:5;29241:16;29234:5;29208:50;:::i;:::-;29271:63;29328:4;29323:3;29319:14;29305:12;29271:63;:::i;:::-;29148:196;29432:61;29487:4;29480:5;29476:16;29469:5;29432:61;:::i;:::-;29540:3;29534:4;29530:14;29523:4;29518:3;29514:14;29507:38;29566:87;29648:4;29634:12;29620;29566:87;:::i;:::-;29558:95;;29354:310;;29733:50;29777:4;29770:5;29766:16;29759:5;29733:50;:::i;:::-;29796:63;29853:4;29848:3;29844:14;29830:12;29796:63;:::i;:::-;29674:195;29886:4;29879:11;;28064:1832;;;;;:::o;29970:893::-;;30137:4;30132:3;30128:14;30210:83;30287:4;30280:5;30276:16;30269:5;30210:83;:::i;:::-;30340:3;30334:4;30330:14;30323:4;30318:3;30314:14;30307:38;30366:117;30478:4;30464:12;30366:117;:::i;:::-;30358:125;;30152:342;30564:79;30637:4;30630:5;30626:16;30619:5;30564:79;:::i;:::-;30690:3;30684:4;30680:14;30673:4;30668:3;30664:14;30657:38;30716:109;30820:4;30806:12;30716:109;:::i;:::-;30708:117;;30504:332;30853:4;30846:11;;30106:757;;;;;:::o;30869:108::-;30946:24;30964:5;30946:24;:::i;:::-;30941:3;30934:37;30924:53;;:::o;30983:118::-;31070:24;31088:5;31070:24;:::i;:::-;31065:3;31058:37;31048:53;;:::o;31107:112::-;31190:22;31206:5;31190:22;:::i;:::-;31185:3;31178:35;31168:51;;:::o;31225:271::-;;31377:93;31466:3;31457:6;31377:93;:::i;:::-;31370:100;;31487:3;31480:10;;31359:137;;;;:::o;31502:222::-;;31633:2;31622:9;31618:18;31610:26;;31646:71;31714:1;31703:9;31699:17;31690:6;31646:71;:::i;:::-;31600:124;;;;:::o;31730:238::-;;31869:2;31858:9;31854:18;31846:26;;31882:79;31958:1;31947:9;31943:17;31934:6;31882:79;:::i;:::-;31836:132;;;;:::o;31974:458::-;;32169:2;32158:9;32154:18;32146:26;;32182:71;32250:1;32239:9;32235:17;32226:6;32182:71;:::i;:::-;32263:80;32339:2;32328:9;32324:18;32315:6;32263:80;:::i;:::-;32353:72;32421:2;32410:9;32406:18;32397:6;32353:72;:::i;:::-;32136:296;;;;;;:::o;32438:894::-;;32741:3;32730:9;32726:19;32718:27;;32755:71;32823:1;32812:9;32808:17;32799:6;32755:71;:::i;:::-;32836:80;32912:2;32901:9;32897:18;32888:6;32836:80;:::i;:::-;32926:72;32994:2;32983:9;32979:18;32970:6;32926:72;:::i;:::-;33008;33076:2;33065:9;33061:18;33052:6;33008:72;:::i;:::-;33090:69;33154:3;33143:9;33139:19;33130:6;33090:69;:::i;:::-;33169:73;33237:3;33226:9;33222:19;33213:6;33169:73;:::i;:::-;33252;33320:3;33309:9;33305:19;33296:6;33252:73;:::i;:::-;32708:624;;;;;;;;;;:::o;33338:442::-;;33525:2;33514:9;33510:18;33502:26;;33538:71;33606:1;33595:9;33591:17;33582:6;33538:71;:::i;:::-;33619:72;33687:2;33676:9;33672:18;33663:6;33619:72;:::i;:::-;33701;33769:2;33758:9;33754:18;33745:6;33701:72;:::i;:::-;33492:288;;;;;;:::o;33786:332::-;;33945:2;33934:9;33930:18;33922:26;;33958:71;34026:1;34015:9;34011:17;34002:6;33958:71;:::i;:::-;34039:72;34107:2;34096:9;34092:18;34083:6;34039:72;:::i;:::-;33912:206;;;;;:::o;34124:617::-;;34371:3;34360:9;34356:19;34348:27;;34385:71;34453:1;34442:9;34438:17;34429:6;34385:71;:::i;:::-;34466:72;34534:2;34523:9;34519:18;34510:6;34466:72;:::i;:::-;34548:87;34631:2;34620:9;34616:18;34607:6;34548:87;:::i;:::-;34645:89;34730:2;34719:9;34715:18;34706:6;34645:89;:::i;:::-;34338:403;;;;;;;:::o;34747:407::-;;34918:2;34907:9;34903:18;34895:26;;34967:9;34961:4;34957:20;34953:1;34942:9;34938:17;34931:47;34995:76;35066:4;35057:6;34995:76;:::i;:::-;34987:84;;35081:66;35143:2;35132:9;35128:18;35119:6;35081:66;:::i;:::-;34885:269;;;;;:::o;35160:396::-;;35351:2;35340:9;35336:18;35328:26;;35364:86;35447:1;35436:9;35432:17;35423:6;35364:86;:::i;:::-;35460:89;35545:2;35534:9;35530:18;35521:6;35460:89;:::i;:::-;35318:238;;;;;:::o;35562:258::-;;35711:2;35700:9;35696:18;35688:26;;35724:89;35810:1;35799:9;35795:17;35786:6;35724:89;:::i;:::-;35678:142;;;;:::o;35826:313::-;;35977:2;35966:9;35962:18;35954:26;;36026:9;36020:4;36016:20;36012:1;36001:9;35997:17;35990:47;36054:78;36127:4;36118:6;36054:78;:::i;:::-;36046:86;;35944:195;;;;:::o;36145:419::-;;36349:2;36338:9;36334:18;36326:26;;36398:9;36392:4;36388:20;36384:1;36373:9;36369:17;36362:47;36426:131;36552:4;36426:131;:::i;:::-;36418:139;;36316:248;;;:::o;36570:419::-;;36774:2;36763:9;36759:18;36751:26;;36823:9;36817:4;36813:20;36809:1;36798:9;36794:17;36787:47;36851:131;36977:4;36851:131;:::i;:::-;36843:139;;36741:248;;;:::o;36995:419::-;;37199:2;37188:9;37184:18;37176:26;;37248:9;37242:4;37238:20;37234:1;37223:9;37219:17;37212:47;37276:131;37402:4;37276:131;:::i;:::-;37268:139;;37166:248;;;:::o;37420:419::-;;37624:2;37613:9;37609:18;37601:26;;37673:9;37667:4;37663:20;37659:1;37648:9;37644:17;37637:47;37701:131;37827:4;37701:131;:::i;:::-;37693:139;;37591:248;;;:::o;37845:419::-;;38049:2;38038:9;38034:18;38026:26;;38098:9;38092:4;38088:20;38084:1;38073:9;38069:17;38062:47;38126:131;38252:4;38126:131;:::i;:::-;38118:139;;38016:248;;;:::o;38270:419::-;;38474:2;38463:9;38459:18;38451:26;;38523:9;38517:4;38513:20;38509:1;38498:9;38494:17;38487:47;38551:131;38677:4;38551:131;:::i;:::-;38543:139;;38441:248;;;:::o;38695:419::-;;38899:2;38888:9;38884:18;38876:26;;38948:9;38942:4;38938:20;38934:1;38923:9;38919:17;38912:47;38976:131;39102:4;38976:131;:::i;:::-;38968:139;;38866:248;;;:::o;39120:419::-;;39324:2;39313:9;39309:18;39301:26;;39373:9;39367:4;39363:20;39359:1;39348:9;39344:17;39337:47;39401:131;39527:4;39401:131;:::i;:::-;39393:139;;39291:248;;;:::o;39545:419::-;;39749:2;39738:9;39734:18;39726:26;;39798:9;39792:4;39788:20;39784:1;39773:9;39769:17;39762:47;39826:131;39952:4;39826:131;:::i;:::-;39818:139;;39716:248;;;:::o;39970:355::-;;40167:3;40156:9;40152:19;40144:27;;40181:137;40315:1;40304:9;40300:17;40291:6;40181:137;:::i;:::-;40134:191;;;;:::o;40331:397::-;;40524:2;40513:9;40509:18;40501:26;;40573:9;40567:4;40563:20;40559:1;40548:9;40544:17;40537:47;40601:120;40716:4;40707:6;40601:120;:::i;:::-;40593:128;;40491:237;;;;:::o;40734:222::-;;40865:2;40854:9;40850:18;40842:26;;40878:71;40946:1;40935:9;40931:17;40922:6;40878:71;:::i;:::-;40832:124;;;;:::o;40962:364::-;;41137:2;41126:9;41122:18;41114:26;;41150:71;41218:1;41207:9;41203:17;41194:6;41150:71;:::i;:::-;41231:88;41315:2;41304:9;41300:18;41291:6;41231:88;:::i;:::-;41104:222;;;;;:::o;41332:483::-;;41541:2;41530:9;41526:18;41518:26;;41554:71;41622:1;41611:9;41607:17;41598:6;41554:71;:::i;:::-;41672:9;41666:4;41662:20;41657:2;41646:9;41642:18;41635:48;41700:108;41803:4;41794:6;41700:108;:::i;:::-;41692:116;;41508:307;;;;;:::o;41821:495::-;;42036:2;42025:9;42021:18;42013:26;;42049:71;42117:1;42106:9;42102:17;42093:6;42049:71;:::i;:::-;42167:9;42161:4;42157:20;42152:2;42141:9;42137:18;42130:48;42195:114;42304:4;42295:6;42195:114;:::i;:::-;42187:122;;42003:313;;;;;:::o;42322:831::-;;42623:3;42612:9;42608:19;42600:27;;42637:71;42705:1;42694:9;42690:17;42681:6;42637:71;:::i;:::-;42718:72;42786:2;42775:9;42771:18;42762:6;42718:72;:::i;:::-;42837:9;42831:4;42827:20;42822:2;42811:9;42807:18;42800:48;42865:108;42968:4;42959:6;42865:108;:::i;:::-;42857:116;;42983:80;43059:2;43048:9;43044:18;43035:6;42983:80;:::i;:::-;43073:73;43141:3;43130:9;43126:19;43117:6;43073:73;:::i;:::-;42590:563;;;;;;;;:::o;43159:553::-;;43374:3;43363:9;43359:19;43351:27;;43388:71;43456:1;43445:9;43441:17;43432:6;43388:71;:::i;:::-;43469:72;43537:2;43526:9;43522:18;43513:6;43469:72;:::i;:::-;43551;43619:2;43608:9;43604:18;43595:6;43551:72;:::i;:::-;43633;43701:2;43690:9;43686:18;43677:6;43633:72;:::i;:::-;43341:371;;;;;;;:::o;43718:523::-;;;43857:11;43844:25;43957:1;43951:4;43947:12;43936:8;43920:14;43916:29;43912:48;43892:18;43888:73;43878:2;;43975:1;43972;43965:12;43878:2;44010:18;44000:8;43996:33;43988:41;;44062:4;44049:18;44039:28;;44090:18;44082:6;44079:30;44076:2;;;44122:1;44119;44112:12;44076:2;44153;44147:4;44143:13;44135:21;;44210:4;44202:6;44198:17;44182:14;44178:38;44172:4;44168:49;44165:2;;;44230:1;44227;44220:12;44165:2;43808:433;;;;;;:::o;44247:332::-;;44400:11;44387:25;44500:1;44494:4;44490:12;44479:8;44463:14;44459:29;44455:48;44435:18;44431:73;44421:2;;44518:1;44515;44508:12;44421:2;44553:18;44543:8;44539:33;44531:41;;44351:228;;;;;:::o;44585:330::-;;44734:11;44721:25;44836:1;44828:6;44824:14;44813:8;44797:14;44793:29;44789:50;44769:18;44765:75;44755:2;;44854:1;44851;44844:12;44755:2;44889:18;44879:8;44875:33;44867:41;;44685:230;;;;;:::o;44921:278::-;;44987:2;44981:9;44971:19;;45029:4;45021:6;45017:17;45136:6;45124:10;45121:22;45100:18;45088:10;45085:34;45082:62;45079:2;;;45147:13;;:::i;:::-;45079:2;45182:10;45178:2;45171:22;44961:238;;;;:::o;45205:306::-;;45372:18;45364:6;45361:30;45358:2;;;45394:13;;:::i;:::-;45358:2;45439:4;45431:6;45427:17;45419:25;;45499:4;45493;45489:15;45481:23;;45287:224;;;:::o;45517:306::-;;45684:18;45676:6;45673:30;45670:2;;;45706:13;;:::i;:::-;45670:2;45751:4;45743:6;45739:17;45731:25;;45811:4;45805;45801:15;45793:23;;45599:224;;;:::o;45829:326::-;;45980:18;45972:6;45969:30;45966:2;;;46002:13;;:::i;:::-;45966:2;46082:4;46078:9;46071:4;46063:6;46059:17;46055:33;46047:41;;46143:4;46137;46133:15;46125:23;;45895:260;;;:::o;46161:132::-;;46251:3;46243:11;;46281:4;46276:3;46272:14;46264:22;;46233:60;;;:::o;46299:114::-;;46400:5;46394:12;46384:22;;46373:40;;;:::o;46419:98::-;;46504:5;46498:12;46488:22;;46477:40;;;:::o;46523:99::-;;46609:5;46603:12;46593:22;;46582:40;;;:::o;46628:113::-;;46730:4;46725:3;46721:14;46713:22;;46703:38;;;:::o;46747:184::-;;46880:6;46875:3;46868:19;46920:4;46915:3;46911:14;46896:29;;46858:73;;;;:::o;46937:158::-;;47044:6;47039:3;47032:19;47084:4;47079:3;47075:14;47060:29;;47022:73;;;;:::o;47101:168::-;;47218:6;47213:3;47206:19;47258:4;47253:3;47249:14;47234:29;;47196:73;;;;:::o;47275:147::-;;47413:3;47398:18;;47388:34;;;;:::o;47428:169::-;;47546:6;47541:3;47534:19;47586:4;47581:3;47577:14;47562:29;;47524:73;;;;:::o;47603:122::-;;47680:39;47715:2;47710:3;47706:12;47701:3;47680:39;:::i;:::-;47671:48;;47661:64;;;;:::o;47731:513::-;;;47858:3;47845:17;47950:1;47944:4;47940:12;47929:8;47913:14;47909:29;47905:48;47885:18;47881:73;47871:2;;47968:1;47965;47958:12;47871:2;48014:8;47994:18;47990:33;47981:42;;48056:5;48043:19;48033:29;;48091:4;48084:5;48080:16;48071:25;;48119:18;48111:6;48108:30;48105:2;;;48151:1;48148;48141:12;48105:2;48213:4;48205:6;48201:17;48185:14;48181:38;48171:8;48167:53;48164:2;;;48233:1;48230;48223:12;48164:2;47809:435;;;;;;:::o;48250:313::-;;48391:3;48378:17;48483:1;48477:4;48473:12;48462:8;48446:14;48442:29;48438:48;48418:18;48414:73;48404:2;;48501:1;48498;48491:12;48404:2;48547:8;48527:18;48523:33;48514:42;;48342:221;;;;;:::o;48569:311::-;;48706:3;48693:17;48800:1;48792:6;48788:14;48777:8;48761:14;48757:29;48753:50;48733:18;48729:75;48719:2;;48818:1;48815;48808:12;48719:2;48864:8;48844:18;48840:33;48831:42;;48657:223;;;;;:::o;48886:122::-;;48963:39;48998:2;48993:3;48989:12;48984:3;48963:39;:::i;:::-;48954:48;;48944:64;;;;:::o;49014:96::-;;49080:24;49098:5;49080:24;:::i;:::-;49069:35;;49059:51;;;:::o;49116:104::-;;49190:24;49208:5;49190:24;:::i;:::-;49179:35;;49169:51;;;:::o;49226:90::-;;49303:5;49296:13;49289:21;49278:32;;49268:48;;;:::o;49322:77::-;;49388:5;49377:16;;49367:32;;;:::o;49405:111::-;;49486:24;49504:5;49486:24;:::i;:::-;49475:35;;49465:51;;;:::o;49522:114::-;;49606:24;49624:5;49606:24;:::i;:::-;49595:35;;49585:51;;;:::o;49642:113::-;;49725:24;49743:5;49725:24;:::i;:::-;49714:35;;49704:51;;;:::o;49761:113::-;;49844:24;49862:5;49844:24;:::i;:::-;49833:35;;49823:51;;;:::o;49880:126::-;;49957:42;49950:5;49946:54;49935:65;;49925:81;;;:::o;50012:77::-;;50078:5;50067:16;;50057:32;;;:::o;50095:86::-;;50170:4;50163:5;50159:16;50148:27;;50138:43;;;:::o;50187:134::-;;50278:37;50309:5;50278:37;:::i;:::-;50265:50;;50255:66;;;:::o;50327:156::-;;50425:52;50471:5;50425:52;:::i;:::-;50412:65;;50402:81;;;:::o;50489:128::-;;50587:24;50605:5;50587:24;:::i;:::-;50574:37;;50564:53;;;:::o;50623:162::-;;50724:55;50773:5;50724:55;:::i;:::-;50711:68;;50701:84;;;:::o;50791:131::-;;50892:24;50910:5;50892:24;:::i;:::-;50879:37;;50869:53;;;:::o;50928:160::-;;51028:54;51076:5;51028:54;:::i;:::-;51015:67;;51005:83;;;:::o;51094:130::-;;51194:24;51212:5;51194:24;:::i;:::-;51181:37;;51171:53;;;:::o;51230:126::-;;51313:37;51344:5;51313:37;:::i;:::-;51300:50;;51290:66;;;:::o;51362:113::-;;51445:24;51463:5;51445:24;:::i;:::-;51432:37;;51422:53;;;:::o;51481:154::-;51565:6;51560:3;51555;51542:30;51627:1;51618:6;51613:3;51609:16;51602:27;51532:103;;;:::o;51641:307::-;51709:1;51719:113;51733:6;51730:1;51727:13;51719:113;;;51818:1;51813:3;51809:11;51803:18;51799:1;51794:3;51790:11;51783:39;51755:2;51752:1;51748:10;51743:15;;51719:113;;;51850:6;51847:1;51844:13;51841:2;;;51930:1;51921:6;51916:3;51912:16;51905:27;51841:2;51690:258;;;;:::o;51954:48::-;51987:9;52008:102;;52100:2;52096:7;52091:2;52084:5;52080:14;52076:28;52066:38;;52056:54;;;:::o;52116:122::-;52189:24;52207:5;52189:24;:::i;:::-;52182:5;52179:35;52169:2;;52228:1;52225;52218:12;52169:2;52159:79;:::o;52244:138::-;52325:32;52351:5;52325:32;:::i;:::-;52318:5;52315:43;52305:2;;52372:1;52369;52362:12;52305:2;52295:87;:::o;52388:116::-;52458:21;52473:5;52458:21;:::i;:::-;52451:5;52448:32;52438:2;;52494:1;52491;52484:12;52438:2;52428:76;:::o;52510:122::-;52583:24;52601:5;52583:24;:::i;:::-;52576:5;52573:35;52563:2;;52622:1;52619;52612:12;52563:2;52553:79;:::o;52638:152::-;52726:39;52759:5;52726:39;:::i;:::-;52719:5;52716:50;52706:2;;52780:1;52777;52770:12;52706:2;52696:94;:::o;52796:158::-;52887:42;52923:5;52887:42;:::i;:::-;52880:5;52877:53;52867:2;;52944:1;52941;52934:12;52867:2;52857:97;:::o;52960:156::-;53050:41;53085:5;53050:41;:::i;:::-;53043:5;53040:52;53030:2;;53106:1;53103;53096:12;53030:2;53020:96;:::o;53122:156::-;53212:41;53247:5;53212:41;:::i;:::-;53205:5;53202:52;53192:2;;53268:1;53265;53258:12;53192:2;53182:96;:::o;53284:122::-;53357:24;53375:5;53357:24;:::i;:::-;53350:5;53347:35;53337:2;;53396:1;53393;53386:12;53337:2;53327:79;:::o;53412:118::-;53483:22;53499:5;53483:22;:::i;:::-;53476:5;53473:33;53463:2;;53520:1;53517;53510:12;53463:2;53453:77;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "3444600",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "CALLDATA_SIZE_LIMIT()": "419",
                "FORWARDER_HUB_OVERHEAD()": "374",
                "PAYMASTER_ACCEPTANCE_BUDGET()": "379",
                "POST_RELAYED_CALL_GAS_LIMIT()": "396",
                "PRE_RELAYED_CALL_GAS_LIMIT()": "439",
                "_getToken(bytes)": "infinite",
                "_verifyForwarder(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)))": "infinite",
                "addBatchTokens(address[],address[])": "infinite",
                "addToken(address,address)": "infinite",
                "calculatePreCharge(address,address,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),uint256)": "infinite",
                "gasUsedByPost()": "1218",
                "getGasAndDataLimits()": "infinite",
                "getHubAddr()": "1311",
                "getPayer(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)))": "infinite",
                "getRelayHubDeposit()": "infinite",
                "getTokenBalance(address)": "infinite",
                "owner()": "1312",
                "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": "infinite",
                "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": "infinite",
                "renounceOwnership()": "24396",
                "routersMap(address)": "infinite",
                "setPostGasUsage(uint256)": "21405",
                "setRelayHub(address)": "22351",
                "setTrustedForwarder(address)": "22394",
                "transferOwnership(address)": "infinite",
                "trustedForwarder()": "1325",
                "versionPaymaster()": "infinite",
                "withdrawRelayHubDepositTo(uint256,address)": "infinite",
                "withdrawToken(address,address,uint256)": "infinite"
              },
              "internal": {
                "_depositProceedsToHub(uint256,uint256,contract IERC20,contract IUniswap)": "infinite",
                "_postRelayedCallInternal(address,uint256,uint256,uint256,struct GsnTypes.RelayData calldata,contract IERC20,contract IUniswap)": "infinite",
                "_refundPayer(address,contract IERC20,uint256)": "infinite",
                "getTokenToEthOutputPrice(uint256,contract IERC20,contract IUniswap)": "infinite"
              }
            },
            "methodIdentifiers": {
              "CALLDATA_SIZE_LIMIT()": "5c5e3db1",
              "FORWARDER_HUB_OVERHEAD()": "b90b41cf",
              "PAYMASTER_ACCEPTANCE_BUDGET()": "df463a66",
              "POST_RELAYED_CALL_GAS_LIMIT()": "bbdaa3c9",
              "PRE_RELAYED_CALL_GAS_LIMIT()": "f9c002f7",
              "_getToken(bytes)": "2f4b3c5c",
              "_verifyForwarder(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)))": "a5dcd07b",
              "addBatchTokens(address[],address[])": "db3f831e",
              "addToken(address,address)": "5476bd72",
              "calculatePreCharge(address,address,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),uint256)": "59d3901f",
              "gasUsedByPost()": "ad12e50e",
              "getGasAndDataLimits()": "b039a88f",
              "getHubAddr()": "74e861d6",
              "getPayer(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)))": "41bbb7ca",
              "getRelayHubDeposit()": "2afe31c1",
              "getTokenBalance(address)": "3aecd0e3",
              "owner()": "8da5cb5b",
              "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": "76fa01c3",
              "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": "00be5dd4",
              "renounceOwnership()": "715018a6",
              "routersMap(address)": "ef1a830e",
              "setPostGasUsage(uint256)": "6d7c3e2b",
              "setRelayHub(address)": "7bb05264",
              "setTrustedForwarder(address)": "da742228",
              "transferOwnership(address)": "f2fde38b",
              "trustedForwarder()": "7da0a877",
              "versionPaymaster()": "921276ea",
              "withdrawRelayHubDepositTo(uint256,address)": "2d14c4b7",
              "withdrawToken(address,address,uint256)": "01e33667"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsedByPost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethActualCharge\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenActualCharge\",\"type\":\"uint256\"}],\"name\":\"TokensCharged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPrecharge\",\"type\":\"uint256\"}],\"name\":\"TokensPrecharged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLDATA_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORWARDER_HUB_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_ACCEPTANCE_BUDGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POST_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRE_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"}],\"name\":\"_getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IUniswap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"}],\"name\":\"_verifyForwarder\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"routers\",\"type\":\"address[]\"}],\"name\":\"addBatchTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IUniswap\",\"name\":\"router\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"calculatePreCharge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPreCharge\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasUsedByPost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasAndDataLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSizeLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasAndDataLimits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"}],\"name\":\"getPayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHubDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"revertOnRecipientRevert\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"routersMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasUsedByPost\",\"type\":\"uint256\"}],\"name\":\"setPostGasUsage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRelayHub\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setRelayHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IForwarder\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"contract IForwarder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPaymaster\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawRelayHubDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"params\":{\"context\":\"- the call context, as returned by the preRelayedCall\",\"gasUseWithoutPost\":\"- the actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.\",\"relayData\":\"- the relay params of the request. can be used by relayHub.calculateCharge() Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.\",\"success\":\"- true if the relayed call succeeded, false if it reverted\"}},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"params\":{\"approvalData\":\"- extra dapp-specific data (e.g. signature from trusted party)\",\"maxPossibleGas\":\"- based on values returned from {@link getGasAndDataLimits},         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.         In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"  return:      a context to be passed to postRelayedCall      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).\",\"relayRequest\":\"- the full relay request structure\",\"signature\":\"- user's EIP712-compatible signature of the {@link relayRequest}.              Note that in most cases the paymaster shouldn't try use it at all. It is always checked              by the forwarder immediately after preRelayedCall returns.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGasAndDataLimits()\":{\"notice\":\"Return the Gas Limits and msg.data max size constants used by the Paymaster.\"},\"getHubAddr()\":{\"notice\":\"return the relayHub of this contract.\"},\"getRelayHubDeposit()\":{\"notice\":\"check current deposit on relay hub.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state.\"},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call. MUST be protected with relayHubOnly() in case it modifies state. The Paymaster rejects by the following \\\"revert\\\" operations  - preRelayedCall() method reverts  - the forwarder reverts because of nonce or signature error  - the paymaster returned \\\"rejectOnRecipientRevert\\\", and the recipient contract reverted. In any of the above cases, all paymaster calls (and recipient call) are reverted. In any other case, the paymaster agrees to pay for the gas cost of the transaction (note  that this includes also postRelayedCall revert) The rejectOnRecipientRevert flag means the Paymaster \\\"delegate\\\" the rejection to the recipient  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,  otherwise the TX is paid by the Paymaster.\"},\"withdrawRelayHubDepositTo(uint256,address)\":{\"notice\":\"withdraw deposit from relayHub\"}},\"notice\":\"A Token-based paymaster. - each request is paid for by the caller. - preRelayedCall - pre-pay the maximum possible price for the tx - postRelayedCall - refund the caller for the unused gas\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gsn/TokenPaymasterPermitPaymaster.sol\":\"TokenPaymasterPermitPaymaster\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/BasePaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./utils/GsnTypes.sol\\\";\\nimport \\\"./interfaces/IPaymaster.sol\\\";\\nimport \\\"./interfaces/IRelayHub.sol\\\";\\nimport \\\"./utils/GsnEip712Library.sol\\\";\\nimport \\\"./forwarder/IForwarder.sol\\\";\\n\\n/**\\n * Abstract base class to be inherited by a concrete Paymaster\\n * A subclass must implement:\\n *  - preRelayedCall\\n *  - postRelayedCall\\n */\\nabstract contract BasePaymaster is IPaymaster, Ownable {\\n\\n    IRelayHub internal relayHub;\\n    IForwarder public override trustedForwarder;\\n\\n    function getHubAddr() public override view returns (address) {\\n        return address(relayHub);\\n    }\\n\\n    //overhead of forwarder verify+signature, plus hub overhead.\\n    uint256 constant public FORWARDER_HUB_OVERHEAD = 50000;\\n\\n    //These parameters are documented in IPaymaster.GasAndDataLimits\\n    uint256 constant public PRE_RELAYED_CALL_GAS_LIMIT = 100000;\\n    uint256 constant public POST_RELAYED_CALL_GAS_LIMIT = 110000;\\n    uint256 constant public PAYMASTER_ACCEPTANCE_BUDGET = PRE_RELAYED_CALL_GAS_LIMIT + FORWARDER_HUB_OVERHEAD;\\n    uint256 constant public CALLDATA_SIZE_LIMIT = 10500;\\n\\n    function getGasAndDataLimits()\\n    public\\n    override\\n    virtual\\n    view\\n    returns (\\n        IPaymaster.GasAndDataLimits memory limits\\n    ) {\\n        return IPaymaster.GasAndDataLimits(\\n            PAYMASTER_ACCEPTANCE_BUDGET,\\n            PRE_RELAYED_CALL_GAS_LIMIT,\\n            POST_RELAYED_CALL_GAS_LIMIT,\\n            CALLDATA_SIZE_LIMIT\\n        );\\n    }\\n\\n    // this method must be called from preRelayedCall to validate that the forwarder\\n    // is approved by the paymaster as well as by the recipient contract.\\n    function _verifyForwarder(GsnTypes.RelayRequest calldata relayRequest)\\n    public\\n    view\\n    {\\n        require(address(trustedForwarder) == relayRequest.relayData.forwarder, \\\"Forwarder is not trusted\\\");\\n        GsnEip712Library.verifyForwarderTrusted(relayRequest);\\n    }\\n\\n    /*\\n     * modifier to be used by recipients as access control protection for preRelayedCall & postRelayedCall\\n     */\\n    modifier relayHubOnly() {\\n        require(msg.sender == getHubAddr(), \\\"can only be called by RelayHub\\\");\\n        _;\\n    }\\n\\n    function setRelayHub(IRelayHub hub) public onlyOwner {\\n        relayHub = hub;\\n    }\\n\\n    function setTrustedForwarder(IForwarder forwarder) public onlyOwner {\\n        trustedForwarder = forwarder;\\n    }\\n\\n    /// check current deposit on relay hub.\\n    function getRelayHubDeposit()\\n    public\\n    override\\n    view\\n    returns (uint) {\\n        return relayHub.balanceOf(address(this));\\n    }\\n\\n    // any money moved into the paymaster is transferred as a deposit.\\n    // This way, we don't need to understand the RelayHub API in order to replenish\\n    // the paymaster.\\n    receive() external virtual payable {\\n        require(address(relayHub) != address(0), \\\"relay hub address not set\\\");\\n        relayHub.depositFor{value:msg.value}(address(this));\\n    }\\n\\n    /// withdraw deposit from relayHub\\n    function withdrawRelayHubDepositTo(uint amount, address payable target) public onlyOwner {\\n        relayHub.withdraw(amount, target);\\n    }\\n}\\n\",\"keccak256\":\"0xd914685ceab88a06d4a1c94d7dd11167bec794106b4c25554bce6491d0df6ec8\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\ninterface IForwarder {\\n\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntil;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * verify the transaction would execute.\\n     * validate the signature and the nonce of the request.\\n     * revert if either signature or nonce are incorrect.\\n     * also revert if domainSeparator or requestTypeHash are not registered.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * execute a transaction\\n     * @param forwardRequest - all transaction parameters\\n     * @param domainSeparator - domain used when signing this request\\n     * @param requestTypeHash - request type used when signing this request.\\n     * @param suffixData - the extension data used when signing this request.\\n     * @param signature - signature to validate.\\n     *\\n     * the transaction is verified, and then executed.\\n     * the success and ret of \\\"call\\\" are returned.\\n     * This method would revert only verification errors. target errors\\n     * are reported using the returned \\\"success\\\" and ret string\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * Register a new Request typehash.\\n     * @param typeName - the name of the request type.\\n     * @param typeSuffix - any extra data after the generic params.\\n     *  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * Register a new domain separator.\\n     * The domain separator must have the following fields: name,version,chainId, verifyingContract.\\n     * the chainId is the current network's chainId, and the verifyingContract is this forwarder.\\n     * This method is given the domain name and version to create and register the domain separator value.\\n     * @param name the domain's display name\\n     * @param version the domain/protocol version\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\n\\ninterface IPaymaster {\\n\\n    /**\\n     * @param acceptanceBudget -\\n     *      Paymaster expected gas budget to accept (or reject) a request\\n     *      This a gas required by any calculations that might need to reject the\\n     *      transaction, by preRelayedCall, forwarder and recipient.\\n     *      See value in BasePaymaster.PAYMASTER_ACCEPTANCE_BUDGET\\n     *      Transaction that gets rejected above that gas usage is on the paymaster's expense.\\n     *      As long this value is above preRelayedCallGasLimit (see defaults in BasePaymaster), the\\n     *      Paymaster is guaranteed it will never pay for rejected transactions.\\n     *      If this value is below preRelayedCallGasLimt, it might might make Paymaster open to a \\\"griefing\\\" attack.\\n     *\\n     *      Specifying value too high might make the call rejected by some relayers.\\n     *\\n     *      From a Relay's point of view, this is the highest gas value a paymaster might \\\"grief\\\" the relay,\\n     *      since the paymaster will pay anything above that (regardless if the tx reverts)\\n     *\\n     * @param preRelayedCallGasLimit - the max gas usage of preRelayedCall. any revert (including OOG)\\n     *      of preRelayedCall is a reject by the paymaster.\\n     *      as long as acceptanceBudget is above preRelayedCallGasLimit, any such revert (including OOG)\\n     *      is not payed by the paymaster.\\n     * @param postRelayedCallGasLimit - the max gas usage of postRelayedCall.\\n     *      note that an OOG will revert the transaction, but the paymaster already committed to pay,\\n     *      so the relay will get compensated, at the expense of the paymaster\\n     */\\n    struct GasAndDataLimits {\\n        uint256 acceptanceBudget;\\n        uint256 preRelayedCallGasLimit;\\n        uint256 postRelayedCallGasLimit;\\n        uint256 calldataSizeLimit;\\n    }\\n\\n    /**\\n     * Return the Gas Limits and msg.data max size constants used by the Paymaster.\\n     */\\n    function getGasAndDataLimits()\\n    external\\n    view\\n    returns (\\n        GasAndDataLimits memory limits\\n    );\\n\\n    function trustedForwarder() external view returns (IForwarder);\\n\\n/**\\n * return the relayHub of this contract.\\n */\\n    function getHubAddr() external view returns (address);\\n\\n    /**\\n     * Can be used to determine if the contract can pay for incoming calls before making any.\\n     * @return the paymaster's deposit in the RelayHub.\\n     */\\n    function getRelayHubDeposit() external view returns (uint256);\\n\\n    /**\\n     * Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call.\\n     *\\n     * MUST be protected with relayHubOnly() in case it modifies state.\\n     *\\n     * The Paymaster rejects by the following \\\"revert\\\" operations\\n     *  - preRelayedCall() method reverts\\n     *  - the forwarder reverts because of nonce or signature error\\n     *  - the paymaster returned \\\"rejectOnRecipientRevert\\\", and the recipient contract reverted.\\n     * In any of the above cases, all paymaster calls (and recipient call) are reverted.\\n     * In any other case, the paymaster agrees to pay for the gas cost of the transaction (note\\n     *  that this includes also postRelayedCall revert)\\n     *\\n     * The rejectOnRecipientRevert flag means the Paymaster \\\"delegate\\\" the rejection to the recipient\\n     *  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,\\n     *  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,\\n     *  otherwise the TX is paid by the Paymaster.\\n     *\\n     *  @param relayRequest - the full relay request structure\\n     *  @param signature - user's EIP712-compatible signature of the {@link relayRequest}.\\n     *              Note that in most cases the paymaster shouldn't try use it at all. It is always checked\\n     *              by the forwarder immediately after preRelayedCall returns.\\n     *  @param approvalData - extra dapp-specific data (e.g. signature from trusted party)\\n     *  @param maxPossibleGas - based on values returned from {@link getGasAndDataLimits},\\n     *         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.\\n     *         In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"\\n     *  return:\\n     *      a context to be passed to postRelayedCall\\n     *      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.\\n     *          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.\\n     *          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted).\\n     */\\n    function preRelayedCall(\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint256 maxPossibleGas\\n    )\\n    external\\n    returns (bytes memory context, bool rejectOnRecipientRevert);\\n\\n    /**\\n     * This method is called after the actual relayed function call.\\n     * It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call.\\n     *\\n     * MUST be protected with relayHubOnly() in case it modifies state.\\n     *\\n     * @param context - the call context, as returned by the preRelayedCall\\n     * @param success - true if the relayed call succeeded, false if it reverted\\n     * @param gasUseWithoutPost - the actual amount of gas used by the entire transaction, EXCEPT\\n     *        the gas used by the postRelayedCall itself.\\n     * @param relayData - the relay params of the request. can be used by relayHub.calculateCharge()\\n     *\\n     * Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster\\n     * is still committed to pay the relay for the entire transaction.\\n     */\\n    function postRelayedCall(\\n        bytes calldata context,\\n        bool success,\\n        uint256 gasUseWithoutPost,\\n        GsnTypes.RelayData calldata relayData\\n    ) external;\\n\\n    function versionPaymaster() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x4cf49c343b72cd8dac257e8b49009347dc2465d5d191c6d1f9455e74f331f5d9\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IRelayHub.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"./IStakeManager.sol\\\";\\n\\ninterface IRelayHub {\\n    struct RelayHubConfig {\\n        // maximum number of worker accounts allowed per manager\\n        uint256 maxWorkerCount;\\n        // Gas set aside for all relayCall() instructions to prevent unexpected out-of-gas exceptions\\n        uint256 gasReserve;\\n        // Gas overhead to calculate gasUseWithoutPost\\n        uint256 postOverhead;\\n        // Gas cost of all relayCall() instructions after actual 'calculateCharge()'\\n        // Assume that relay has non-zero balance (costs 15'000 more otherwise).\\n        uint256 gasOverhead;\\n        // Maximum funds that can be deposited at once. Prevents user error by disallowing large deposits.\\n        uint256 maximumRecipientDeposit;\\n        // Minimum unstake delay blocks of a relay manager's stake on the StakeManager\\n        uint256 minimumUnstakeDelay;\\n        // Minimum stake a relay can have. An attack on the network will never cost less than half this value.\\n        uint256 minimumStake;\\n        // relayCall()'s msg.data upper bound gas cost per byte\\n        uint256 dataGasCostPerByte;\\n        // relayCalls() minimal gas overhead when calculating cost of putting tx on chain.\\n        uint256 externalCallDataCostOverhead;\\n    }\\n\\n    event RelayHubConfigured(RelayHubConfig config);\\n\\n    /// Emitted when a relay server registers or updates its details\\n    /// Looking at these events lets a client discover relay servers\\n    event RelayServerRegistered(\\n        address indexed relayManager,\\n        uint256 baseRelayFee,\\n        uint256 pctRelayFee,\\n        string relayUrl\\n    );\\n\\n    /// Emitted when relays are added by a relayManager\\n    event RelayWorkersAdded(\\n        address indexed relayManager,\\n        address[] newRelayWorkers,\\n        uint256 workersCount\\n    );\\n\\n    /// Emitted when an account withdraws funds from RelayHub.\\n    event Withdrawn(\\n        address indexed account,\\n        address indexed dest,\\n        uint256 amount\\n    );\\n\\n    /// Emitted when depositFor is called, including the amount and account that was funded.\\n    event Deposited(\\n        address indexed paymaster,\\n        address indexed from,\\n        uint256 amount\\n    );\\n\\n    /// Emitted when an attempt to relay a call fails and Paymaster does not accept the transaction.\\n    /// The actual relayed call was not executed, and the recipient not charged.\\n    /// @param reason contains a revert reason returned from preRelayedCall or forwarder.\\n    event TransactionRejectedByPaymaster(\\n        address indexed relayManager,\\n        address indexed paymaster,\\n        address indexed from,\\n        address to,\\n        address relayWorker,\\n        bytes4 selector,\\n        uint256 innerGasUsed,\\n        bytes reason\\n    );\\n\\n    /// Emitted when a transaction is relayed. Note that the actual encoded function might be reverted: this will be\\n    /// indicated in the status field.\\n    /// Useful when monitoring a relay's operation and relayed calls to a contract.\\n    /// Charge is the ether value deducted from the recipient's balance, paid to the relay's manager.\\n    event TransactionRelayed(\\n        address indexed relayManager,\\n        address indexed relayWorker,\\n        address indexed from,\\n        address to,\\n        address paymaster,\\n        bytes4 selector,\\n        RelayCallStatus status,\\n        uint256 charge\\n    );\\n\\n    event TransactionResult(\\n        RelayCallStatus status,\\n        bytes returnValue\\n    );\\n\\n    event HubDeprecated(uint256 fromBlock);\\n\\n    /// Reason error codes for the TransactionRelayed event\\n    /// @param OK - the transaction was successfully relayed and execution successful - never included in the event\\n    /// @param RelayedCallFailed - the transaction was relayed, but the relayed call failed\\n    /// @param RejectedByPreRelayed - the transaction was not relayed due to preRelatedCall reverting\\n    /// @param RejectedByForwarder - the transaction was not relayed due to forwarder check (signature,nonce)\\n    /// @param PostRelayedFailed - the transaction was relayed and reverted due to postRelatedCall reverting\\n    /// @param PaymasterBalanceChanged - the transaction was relayed and reverted due to the paymaster balance change\\n    enum RelayCallStatus {\\n        OK,\\n        RelayedCallFailed,\\n        RejectedByPreRelayed,\\n        RejectedByForwarder,\\n        RejectedByRecipientRevert,\\n        PostRelayedFailed,\\n        PaymasterBalanceChanged\\n    }\\n\\n    /// Add new worker addresses controlled by sender who must be a staked Relay Manager address.\\n    /// Emits a RelayWorkersAdded event.\\n    /// This function can be called multiple times, emitting new events\\n    function addRelayWorkers(address[] calldata newRelayWorkers) external;\\n\\n    function registerRelayServer(uint256 baseRelayFee, uint256 pctRelayFee, string calldata url) external;\\n\\n    // Balance management\\n\\n    /// Deposits ether for a contract, so that it can receive (and pay for) relayed transactions. Unused balance can only\\n    /// be withdrawn by the contract itself, by calling withdraw.\\n    /// Emits a Deposited event.\\n    function depositFor(address target) external payable;\\n\\n    /// Withdraws from an account's balance, sending it back to it. Relay managers call this to retrieve their revenue, and\\n    /// contracts can also use it to reduce their funding.\\n    /// Emits a Withdrawn event.\\n    function withdraw(uint256 amount, address payable dest) external;\\n\\n    // Relaying\\n\\n\\n    /// Relays a transaction. For this to succeed, multiple conditions must be met:\\n    ///  - Paymaster's \\\"preRelayCall\\\" method must succeed and not revert\\n    ///  - the sender must be a registered Relay Worker that the user signed\\n    ///  - the transaction's gas price must be equal or larger than the one that was signed by the sender\\n    ///  - the transaction must have enough gas to run all internal transactions if they use all gas available to them\\n    ///  - the Paymaster must have enough balance to pay the Relay Worker for the scenario when all gas is spent\\n    ///\\n    /// If all conditions are met, the call will be relayed and the recipient charged.\\n    ///\\n    /// Arguments:\\n    /// @param maxAcceptanceBudget - max valid value for paymaster.getGasLimits().acceptanceBudget\\n    /// @param relayRequest - all details of the requested relayed call\\n    /// @param signature - client's EIP-712 signature over the relayRequest struct\\n    /// @param approvalData: dapp-specific data forwarded to preRelayedCall.\\n    ///        This value is *not* verified by the Hub. For example, it can be used to pass a signature to the Paymaster\\n    /// @param externalGasLimit - the value passed as gasLimit to the transaction.\\n    ///\\n    /// Emits a TransactionRelayed event.\\n    function relayCall(\\n        uint maxAcceptanceBudget,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint externalGasLimit\\n    )\\n    external\\n    returns (bool paymasterAccepted, bytes memory returnValue);\\n\\n    function penalize(address relayWorker, address payable beneficiary) external;\\n\\n    function setConfiguration(RelayHubConfig memory _config) external;\\n\\n    // Deprecate hub (reverting relayCall()) from block number 'fromBlock'\\n    // Can only be called by owner\\n    function deprecateHub(uint256 fromBlock) external;\\n\\n    /// The fee is expressed as a base fee in wei plus percentage on actual charge.\\n    /// E.g. a value of 40 stands for a 40% fee, so the recipient will be\\n    /// charged for 1.4 times the spent amount.\\n    function calculateCharge(uint256 gasUsed, GsnTypes.RelayData calldata relayData) external view returns (uint256);\\n\\n    /* getters */\\n\\n    /// Returns the whole hub configuration\\n    function getConfiguration() external view returns (RelayHubConfig memory config);\\n\\n    function calldataGasCost(uint256 length) external view returns (uint256);\\n\\n    function workerToManager(address worker) external view returns(address);\\n\\n    function workerCount(address manager) external view returns(uint256);\\n\\n    /// Returns an account's deposits. It can be either a deposit of a paymaster, or a revenue of a relay manager.\\n    function balanceOf(address target) external view returns (uint256);\\n\\n    function stakeManager() external view returns (IStakeManager);\\n\\n    function penalizer() external view returns (address);\\n\\n    /// Uses StakeManager info to decide if the Relay Manager can be considered staked\\n    /// @return true if stake size and delay satisfy all requirements\\n    function isRelayManagerStaked(address relayManager) external view returns(bool);\\n\\n    // Checks hubs' deprecation status\\n    function isDeprecated() external view returns (bool);\\n\\n    // Returns the block number from which the hub no longer allows relaying calls.\\n    function deprecationBlock() external view returns (uint256);\\n\\n    /// @return a SemVer-compliant version of the hub contract\\n    function versionHub() external view returns (string memory);\\n}\\n\\n\",\"keccak256\":\"0x3497133a7147174c498d2feeb2569b973396a8c2c220b5876fd9eb3b59841c85\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IRelayRecipient.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\n/**\\n * a contract must implement this interface in order to support relayed transaction.\\n * It is better to inherit the BaseRelayRecipient as its implementation.\\n */\\nabstract contract IRelayRecipient {\\n\\n    /**\\n     * return if the forwarder is trusted to forward relayed transactions to us.\\n     * the forwarder is required to verify the sender's signature, and verify\\n     * the call is not a replay.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * return the sender of this call.\\n     * if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\\n     * of the msg.data.\\n     * otherwise, return `msg.sender`\\n     * should be used in the contract anywhere instead of msg.sender\\n     */\\n    function _msgSender() internal virtual view returns (address payable);\\n\\n    /**\\n     * return the msg.data of this call.\\n     * if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\\n     * of the msg.data - so this method will strip those 20 bytes off.\\n     * otherwise (if the call was made directly and not through the forwarder), return `msg.data`\\n     * should be used in the contract instead of msg.data, where this difference matters.\\n     */\\n    function _msgData() internal virtual view returns (bytes memory);\\n\\n    function versionRecipient() external virtual view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6243d3a925653ed0bde57e9fae7fb87f12c58a2376b27ae23b53502322532e00\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\ninterface IStakeManager {\\n\\n    /// Emitted when a stake or unstakeDelay are initialized or increased\\n    event StakeAdded(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 stake,\\n        uint256 unstakeDelay\\n    );\\n\\n    /// Emitted once a stake is scheduled for withdrawal\\n    event StakeUnlocked(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 withdrawBlock\\n    );\\n\\n    /// Emitted when owner withdraws relayManager funds\\n    event StakeWithdrawn(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 amount\\n    );\\n\\n    /// Emitted when an authorized Relay Hub penalizes a relayManager\\n    event StakePenalized(\\n        address indexed relayManager,\\n        address indexed beneficiary,\\n        uint256 reward\\n    );\\n\\n    event HubAuthorized(\\n        address indexed relayManager,\\n        address indexed relayHub\\n    );\\n\\n    event HubUnauthorized(\\n        address indexed relayManager,\\n        address indexed relayHub,\\n        uint256 removalBlock\\n    );\\n\\n    event OwnerSet(\\n        address indexed relayManager,\\n        address indexed owner\\n    );\\n\\n    /// @param stake - amount of ether staked for this relay\\n    /// @param unstakeDelay - number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'\\n    /// @param withdrawBlock - first block number 'withdraw' will be callable, or zero if the unlock has not been called\\n    /// @param owner - address that receives revenue and manages relayManager's stake\\n    struct StakeInfo {\\n        uint256 stake;\\n        uint256 unstakeDelay;\\n        uint256 withdrawBlock;\\n        address payable owner;\\n    }\\n\\n    struct RelayHubInfo {\\n        uint256 removalBlock;\\n    }\\n\\n    /// Set the owner of a Relay Manager. Called only by the RelayManager itself.\\n    /// Note that owners cannot transfer ownership - if the entry already exists, reverts.\\n    /// @param owner - owner of the relay (as configured off-chain)\\n    function setRelayManagerOwner(address payable owner) external;\\n\\n    /// Only the owner can call this function. If the entry does not exist, reverts.\\n    /// @param relayManager - address that represents a stake entry and controls relay registrations on relay hubs\\n    /// @param unstakeDelay - number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'\\n    function stakeForRelayManager(address relayManager, uint256 unstakeDelay) external payable;\\n\\n    function unlockStake(address relayManager) external;\\n\\n    function withdrawStake(address relayManager) external;\\n\\n    function authorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    function authorizeHubByManager(address relayHub) external;\\n\\n    function unauthorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    function unauthorizeHubByManager(address relayHub) external;\\n\\n    function isRelayManagerStaked(address relayManager, address relayHub, uint256 minAmount, uint256 minUnstakeDelay)\\n    external\\n    view\\n    returns (bool);\\n\\n    /// Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns half of stake on the way.\\n    /// @param relayManager - entry to penalize\\n    /// @param beneficiary - address that receives half of the penalty amount\\n    /// @param amount - amount to withdraw from stake\\n    function penalizeRelayManager(address relayManager, address payable beneficiary, uint256 amount) external;\\n\\n    function getStakeInfo(address relayManager) external view returns (StakeInfo memory stakeInfo);\\n\\n    function maxUnstakeDelay() external view returns (uint256);\\n\\n    function versionSM() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x86fcc2f265ba3c2f987fe47823121b4df3ddc86b834d89a67aca585d0721747f\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnEip712Library.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"../interfaces/IRelayRecipient.sol\\\";\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\nimport \\\"./GsnUtils.sol\\\";\\n\\n/**\\n * Bridge Library to map GSN RelayRequest into a call of a Forwarder\\n */\\nlibrary GsnEip712Library {\\n    // maximum length of return value/revert reason for 'execute' method. Will truncate result if exceeded.\\n    uint256 private constant MAX_RETURN_SIZE = 1024;\\n\\n    //copied from Forwarder (can't reference string constants even from another library)\\n    string public constant GENERIC_PARAMS = \\\"address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntil\\\";\\n\\n    bytes public constant RELAYDATA_TYPE = \\\"RelayData(uint256 gasPrice,uint256 pctRelayFee,uint256 baseRelayFee,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)\\\";\\n\\n    string public constant RELAY_REQUEST_NAME = \\\"RelayRequest\\\";\\n    string public constant RELAY_REQUEST_SUFFIX = string(abi.encodePacked(\\\"RelayData relayData)\\\", RELAYDATA_TYPE));\\n\\n    bytes public constant RELAY_REQUEST_TYPE = abi.encodePacked(\\n        RELAY_REQUEST_NAME,\\\"(\\\",GENERIC_PARAMS,\\\",\\\", RELAY_REQUEST_SUFFIX);\\n\\n    bytes32 public constant RELAYDATA_TYPEHASH = keccak256(RELAYDATA_TYPE);\\n    bytes32 public constant RELAY_REQUEST_TYPEHASH = keccak256(RELAY_REQUEST_TYPE);\\n\\n\\n    struct EIP712Domain {\\n        string name;\\n        string version;\\n        uint256 chainId;\\n        address verifyingContract;\\n    }\\n\\n    bytes32 public constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n    );\\n\\n    function splitRequest(\\n        GsnTypes.RelayRequest calldata req\\n    )\\n    internal\\n    pure\\n    returns (\\n        bytes memory suffixData\\n    ) {\\n        suffixData = abi.encode(\\n            hashRelayData(req.relayData));\\n    }\\n\\n    //verify that the recipient trusts the given forwarder\\n    // MUST be called by paymaster\\n    function verifyForwarderTrusted(GsnTypes.RelayRequest calldata relayRequest) internal view {\\n        (bool success, bytes memory ret) = relayRequest.request.to.staticcall(\\n            abi.encodeWithSelector(\\n                IRelayRecipient.isTrustedForwarder.selector, relayRequest.relayData.forwarder\\n            )\\n        );\\n        require(success, \\\"isTrustedForwarder: reverted\\\");\\n        require(ret.length == 32, \\\"isTrustedForwarder: bad response\\\");\\n        require(abi.decode(ret, (bool)), \\\"invalid forwarder for recipient\\\");\\n    }\\n\\n    function verifySignature(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal view {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(relayRequest.relayData.forwarder);\\n        IForwarder forwarder = IForwarder(payable(relayRequest.relayData.forwarder));\\n        forwarder.verify(relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature);\\n    }\\n\\n    function verify(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal view {\\n        verifyForwarderTrusted(relayRequest);\\n        verifySignature(relayRequest, signature);\\n    }\\n\\n    function execute(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature) internal returns (bool forwarderSuccess, bool callSuccess, bytes memory ret) {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(relayRequest.relayData.forwarder);\\n        /* solhint-disable-next-line avoid-low-level-calls */\\n        (forwarderSuccess, ret) = relayRequest.relayData.forwarder.call(\\n            abi.encodeWithSelector(IForwarder.execute.selector,\\n            relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature\\n        ));\\n        if ( forwarderSuccess ) {\\n\\n          //decode return value of execute:\\n          (callSuccess, ret) = abi.decode(ret, (bool, bytes));\\n        }\\n        truncateInPlace(ret);\\n    }\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data) internal pure {\\n        MinLibBytes.truncateInPlace(data, MAX_RETURN_SIZE);\\n    }\\n\\n    function domainSeparator(address forwarder) internal pure returns (bytes32) {\\n        return hashDomain(EIP712Domain({\\n            name : \\\"GSN Relayed Transaction\\\",\\n            version : \\\"2\\\",\\n            chainId : getChainID(),\\n            verifyingContract : forwarder\\n            }));\\n    }\\n\\n    function getChainID() internal pure returns (uint256 id) {\\n        /* solhint-disable no-inline-assembly */\\n        assembly {\\n            id := chainid()\\n        }\\n    }\\n\\n    function hashDomain(EIP712Domain memory req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(bytes(req.name)),\\n                keccak256(bytes(req.version)),\\n                req.chainId,\\n                req.verifyingContract));\\n    }\\n\\n    function hashRelayData(GsnTypes.RelayData calldata req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                RELAYDATA_TYPEHASH,\\n                req.gasPrice,\\n                req.pctRelayFee,\\n                req.baseRelayFee,\\n                req.relayWorker,\\n                req.paymaster,\\n                req.forwarder,\\n                keccak256(req.paymasterData),\\n                req.clientId\\n            ));\\n    }\\n}\\n\",\"keccak256\":\"0xeabda17c0116022fba48a5be922c093fd721fc21e400a8158a2d2c9ae1c0ac4f\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice gasPrice, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 gasPrice;\\n        uint256 pctRelayFee;\\n        uint256 baseRelayFee;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x813b12755ca7e69d3f269b5ab801d36d208274c26ea2764a416c3033e61bc130\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnUtils.sol\":{\"content\":\"/* solhint-disable no-inline-assembly */\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\n\\nimport \\\"../utils/MinLibBytes.sol\\\";\\n\\nlibrary GsnUtils {\\n\\n    /**\\n     * extract method sig from encoded function call\\n     */\\n    function getMethodSig(bytes memory msgData) internal pure returns (bytes4) {\\n        return MinLibBytes.readBytes4(msgData, 0);\\n    }\\n\\n    /**\\n     * extract parameter from encoded-function block.\\n     * see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\\n     * the return value should be casted to the right type (uintXXX/bytesXXX/address/bool/enum)\\n     */\\n    function getParam(bytes memory msgData, uint index) internal pure returns (uint) {\\n        return MinLibBytes.readUint256(msgData, 4 + index * 32);\\n    }\\n\\n    //re-throw revert with the same revert data.\\n    function revertWithData(bytes memory data) internal pure {\\n        assembly {\\n            revert(add(data,32), mload(data))\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0xeb0c5992c7c2648e414a14605a72e773e09c554036e9c9cd9aca34e292b195d7\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// minimal bytes manipulation required by GSN\\n// a minimal subset from 0x/LibBytes\\n/* solhint-disable no-inline-assembly */\\npragma solidity >=0.7.6;\\n\\nlibrary MinLibBytes {\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\\n        if (data.length > maxlen) {\\n            assembly { mstore(data, maxlen) }\\n        }\\n    }\\n\\n    /// @dev Reads an address from a position in a byte array.\\n    /// @param b Byte array containing an address.\\n    /// @param index Index in byte array of address.\\n    /// @return result address from byte array.\\n    function readAddress(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (address result)\\n    {\\n        require (b.length >= index + 20, \\\"readAddress: data too short\\\");\\n\\n        // Add offset to index:\\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\\n        index += 20;\\n\\n        // Read address from array memory\\n        assembly {\\n            // 1. Add index to address of bytes array\\n            // 2. Load 32-byte word from memory\\n            // 3. Apply 20-byte mask to obtain address\\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n        return result;\\n    }\\n\\n    function readBytes32(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes32 result)\\n    {\\n        require(b.length >= index + 32, \\\"readBytes32: data too short\\\" );\\n\\n        // Read the bytes32 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n        }\\n        return result;\\n    }\\n\\n    /// @dev Reads a uint256 value from a position in a byte array.\\n    /// @param b Byte array containing a uint256 value.\\n    /// @param index Index in byte array of uint256 value.\\n    /// @return result uint256 value from byte array.\\n    function readUint256(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        result = uint256(readBytes32(b, index));\\n        return result;\\n    }\\n\\n    function readBytes4(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes4 result)\\n    {\\n        require(b.length >= index + 4, \\\"readBytes4: data too short\\\");\\n\\n        // Read the bytes4 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n            // Solidity does not require us to clean the trailing bytes.\\n            // We do it anyway\\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x73c837126ff5369c63b7a71828b6d5c9e5bc8a6477f8d4fc97f8e28142380cd9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/drafts/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\\n     * given `owner`'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/gsn/IUniswap.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity >=0.7.6;\\n\\ninterface IUniswap {\\n\\n    function swapExactTokensForETH(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    )\\n    external\\n    returns (uint[] memory amounts);\\n\\n\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n\\n    function WETH() external pure returns (address);\\n}\\n\",\"keccak256\":\"0x6d4995f39a3293070c8a8e38914f30546b646df8afa9181dd2374a2b0082dfc1\",\"license\":\"MIT\"},\"contracts/gsn/TokenPaymasterPermitPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity >=0.7.6;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/drafts/IERC20Permit.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@opengsn/contracts/src/BasePaymaster.sol\\\";\\nimport \\\"@opengsn/contracts/src/interfaces/IRelayHub.sol\\\";\\n\\nimport \\\"./IUniswap.sol\\\";\\n\\n/**\\n * A Token-based paymaster.\\n * - each request is paid for by the caller.\\n * - preRelayedCall - pre-pay the maximum possible price for the tx\\n * - postRelayedCall - refund the caller for the unused gas\\n */\\ncontract TokenPaymasterPermitPaymaster is BasePaymaster {\\n    using SafeMath for uint256;\\n\\n    function versionPaymaster() external override virtual view returns (string memory){\\n        return \\\"2.2.0\\\";\\n    }\\n\\n    mapping (address => address) public routersMap;\\n\\n    uint public gasUsedByPost;\\n\\n    constructor() public {\\n    }\\n\\n    function setPostGasUsage(uint _gasUsedByPost) external onlyOwner {\\n        gasUsedByPost = _gasUsedByPost;\\n    }\\n\\n    function getPayer(GsnTypes.RelayRequest calldata relayRequest) public virtual view returns (address) {\\n        (this);\\n        return relayRequest.request.from;\\n    }\\n\\n    receive() external override payable {\\n        emit Received(msg.value);\\n    }\\n\\n    function calculatePreCharge(\\n        IERC20 token,\\n        IUniswap router,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        uint256 maxPossibleGas)\\n    public\\n    view\\n    returns (address payer, uint256 tokenPreCharge) {\\n        payer = this.getPayer(relayRequest);\\n        uint ethMaxCharge = relayHub.calculateCharge(maxPossibleGas, relayRequest.relayData);\\n        ethMaxCharge += relayRequest.request.value;\\n        tokenPreCharge = getTokenToEthOutputPrice(ethMaxCharge, token, router);\\n        require(tokenPreCharge <= token.balanceOf(payer), \\\"token balance too low\\\");\\n    }\\n\\n\\n    function preRelayedCall(\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint256 maxPossibleGas\\n    )\\n    external\\n    override\\n    virtual\\n    relayHubOnly\\n    returns (bytes memory context, bool revertOnRecipientRevert) {\\n        (relayRequest, signature, approvalData, maxPossibleGas);\\n\\n        (IERC20 token, IUniswap router) = _getToken(relayRequest.relayData.paymasterData);\\n        (address payer, uint256 tokenPrecharge) = calculatePreCharge(token, router, relayRequest, maxPossibleGas);\\n        (address owner, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) = abi.decode(approvalData, (address, uint256, uint256, uint8, bytes32, bytes32));\\n        IERC20Permit(address(token)).permit(owner, address(this), value, deadline, v, r, s);\\n        token.transferFrom(payer, address(this), tokenPrecharge);\\n        emit TokensPrecharged(address(token), address(router), tokenPrecharge);\\n        return (abi.encode(payer, tokenPrecharge, token, router), false);\\n    }\\n\\n    function postRelayedCall(\\n        bytes calldata context,\\n        bool success,\\n        uint256 gasUseWithoutPost,\\n        GsnTypes.RelayData calldata relayData\\n    )\\n    external\\n    override\\n    virtual\\n    relayHubOnly {\\n        (address payer, uint256 tokenPrecharge, IERC20 token, IUniswap router) = abi.decode(context, (address, uint256, IERC20, IUniswap));\\n        _postRelayedCallInternal(payer, tokenPrecharge, 0, gasUseWithoutPost, relayData, token, router);\\n    }\\n\\n    function getTokenBalance(IERC20 token) external view returns (uint256) {\\n        return token.balanceOf(address(this));\\n    }\\n\\n    function withdrawToken(IERC20 token, address account, uint256 amount) external onlyOwner() {\\n        uint256 tokenBalance = token.balanceOf(address(this));\\n        require(amount <= tokenBalance, 'TokenPaymaster/Balance to low.');\\n        token.transfer(account, amount);\\n    }\\n\\n    function _postRelayedCallInternal(\\n        address payer,\\n        uint256 tokenPrecharge,\\n        uint256 valueRequested,\\n        uint256 gasUseWithoutPost,\\n        GsnTypes.RelayData calldata relayData,\\n        IERC20 token,\\n        IUniswap router\\n    ) internal {\\n        uint256 ethActualCharge = relayHub.calculateCharge(gasUseWithoutPost.add(gasUsedByPost), relayData);\\n        uint256 tokenActualCharge = getTokenToEthOutputPrice(valueRequested.add(ethActualCharge), token, router);\\n        uint256 tokenRefund = tokenPrecharge.sub(tokenActualCharge);\\n        _refundPayer(payer, token, tokenRefund);\\n        _depositProceedsToHub(ethActualCharge, tokenActualCharge, token, router);\\n        emit TokensCharged(gasUseWithoutPost, gasUsedByPost, ethActualCharge, tokenActualCharge);\\n    }\\n\\n    function _refundPayer(\\n        address payer,\\n        IERC20 token,\\n        uint256 tokenRefund\\n    ) private {\\n        require(token.transfer(payer, tokenRefund), \\\"failed refund\\\");\\n    }\\n\\n    // token must have pool with wrapped native currency\\n    function _depositProceedsToHub(uint256 ethActualCharge,uint256 tokenActualCharge, IERC20 token, IUniswap router) private {\\n        //solhint-disable-next-line\\n        address[] memory path = new address[](2);\\n        path[0] = address(token);\\n        path[1] = router.WETH();\\n        token.approve(address(router),uint(-1));\\n        router.swapExactTokensForETH(tokenActualCharge, ethActualCharge, path,address(this), block.timestamp+60*15);\\n        IRelayHub(address(relayHub)).depositFor{value:ethActualCharge}(address(this));\\n    }\\n\\n    // todo move in prod to internal\\n    // @param router - is just router with uniswap like interface, it may be not a uniswap\\n    function _getToken(bytes memory paymasterData) public view returns (IERC20, IUniswap) {\\n        (address token) = abi.decode(paymasterData, (address));\\n        (address router) = routersMap[token];\\n        require(token != address(0), \\\"This token not supported as fee\\\");\\n        return (IERC20(token), IUniswap(router));\\n    }\\n\\n    // router can be overwritten\\n    function addToken(address token, address router) external onlyOwner {\\n        routersMap[token] = router;\\n    }\\n\\n    // routers can be overwritten\\n    // len(tokens) must be equal to len(routers)\\n    function addBatchTokens(address[] memory tokens, address[] memory routers) external onlyOwner {\\n            for(uint i = 0; i< tokens.length; i++){\\n                routersMap[tokens[i]] = routers[i];\\n            }\\n    }\\n\\n\\n    function getGasAndDataLimits()\\n    public\\n    override\\n    virtual\\n    view\\n    returns (\\n        IPaymaster.GasAndDataLimits memory limits\\n    ) {\\n        return IPaymaster.GasAndDataLimits(\\n                250000,\\n                200000,\\n                210000,\\n            CALLDATA_SIZE_LIMIT\\n        );\\n    }\\n\\n    // token must have pool with wrapped native currency\\n    function getTokenToEthOutputPrice(uint ethValue, IERC20 token, IUniswap router) internal view returns (uint256) {\\n        address[] memory path = new address[](2);\\n        path[0] = address(token);\\n        path[1] = router.WETH();\\n        uint[] memory amountOuts = router.getAmountsIn(ethValue, path);\\n        return amountOuts[0];\\n    }\\n\\n    // Events\\n    event TokensCharged(uint gasUseWithoutPost, uint gasUsedByPost, uint ethActualCharge, uint tokenActualCharge);\\n    event TokensPrecharged(address token, address router, uint tokenPrecharge);\\n    event Received(uint eth);\\n}\\n\",\"keccak256\":\"0xbf52dbdcb2f479ea1b05ef77608db916ccb69531b047383259a3b120993998ee\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1367,
                "contract": "contracts/gsn/TokenPaymasterPermitPaymaster.sol:TokenPaymasterPermitPaymaster",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 15,
                "contract": "contracts/gsn/TokenPaymasterPermitPaymaster.sol:TokenPaymasterPermitPaymaster",
                "label": "relayHub",
                "offset": 0,
                "slot": "1",
                "type": "t_contract(IRelayHub)611"
              },
              {
                "astId": 18,
                "contract": "contracts/gsn/TokenPaymasterPermitPaymaster.sol:TokenPaymasterPermitPaymaster",
                "label": "trustedForwarder",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(IForwarder)273"
              },
              {
                "astId": 2037,
                "contract": "contracts/gsn/TokenPaymasterPermitPaymaster.sol:TokenPaymasterPermitPaymaster",
                "label": "routersMap",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_address,t_address)"
              },
              {
                "astId": 2039,
                "contract": "contracts/gsn/TokenPaymasterPermitPaymaster.sol:TokenPaymasterPermitPaymaster",
                "label": "gasUsedByPost",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_contract(IForwarder)273": {
                "encoding": "inplace",
                "label": "contract IForwarder",
                "numberOfBytes": "20"
              },
              "t_contract(IRelayHub)611": {
                "encoding": "inplace",
                "label": "contract IRelayHub",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_address)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => address)",
                "numberOfBytes": "32",
                "value": "t_address"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "getGasAndDataLimits()": {
                "notice": "Return the Gas Limits and msg.data max size constants used by the Paymaster."
              },
              "getHubAddr()": {
                "notice": "return the relayHub of this contract."
              },
              "getRelayHubDeposit()": {
                "notice": "check current deposit on relay hub."
              },
              "postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))": {
                "notice": "This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. MUST be protected with relayHubOnly() in case it modifies state."
              },
              "preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)": {
                "notice": "Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call. MUST be protected with relayHubOnly() in case it modifies state. The Paymaster rejects by the following \"revert\" operations  - preRelayedCall() method reverts  - the forwarder reverts because of nonce or signature error  - the paymaster returned \"rejectOnRecipientRevert\", and the recipient contract reverted. In any of the above cases, all paymaster calls (and recipient call) are reverted. In any other case, the paymaster agrees to pay for the gas cost of the transaction (note  that this includes also postRelayedCall revert) The rejectOnRecipientRevert flag means the Paymaster \"delegate\" the rejection to the recipient  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,  otherwise the TX is paid by the Paymaster."
              },
              "withdrawRelayHubDepositTo(uint256,address)": {
                "notice": "withdraw deposit from relayHub"
              }
            },
            "notice": "A Token-based paymaster. - each request is paid for by the caller. - preRelayedCall - pre-pay the maximum possible price for the tx - postRelayedCall - refund the caller for the unused gas",
            "version": 1
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "2462",
        "formattedMessage": "@openzeppelin/contracts/access/Ownable.sol:26:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
        "message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
        "severity": "warning",
        "sourceLocation": {
          "end": 1009,
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "start": 850
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2462",
        "formattedMessage": "contracts/gsn/TokenPaymasterPermitPaymaster.sol:31:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor() public {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
        "message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
        "severity": "warning",
        "sourceLocation": {
          "end": 983,
          "file": "contracts/gsn/TokenPaymasterPermitPaymaster.sol",
          "start": 955
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "contracts/gsn/TokenPaymasterPermitPaymaster.sol:87:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        bool success,\n        ^----------^\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 3116,
          "file": "contracts/gsn/TokenPaymasterPermitPaymaster.sol",
          "start": 3104
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@opengsn/contracts/src/BasePaymaster.sol": {
        "ast": {
          "absolutePath": "@opengsn/contracts/src/BasePaymaster.sol",
          "exportedSymbols": {
            "BasePaymaster": [
              187
            ],
            "Context": [
              1961
            ],
            "GsnEip712Library": [
              1171
            ],
            "GsnTypes": [
              1197
            ],
            "GsnUtils": [
              1244
            ],
            "IForwarder": [
              273
            ],
            "IPaymaster": [
              343
            ],
            "IRelayHub": [
              611
            ],
            "IRelayRecipient": [
              640
            ],
            "IStakeManager": [
              803
            ],
            "MinLibBytes": [
              1359
            ],
            "Ownable": [
              1469
            ],
            "SafeMath": [
              1860
            ]
          },
          "id": 188,
          "license": "GPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "41:24:0"
            },
            {
              "id": 2,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "66:19:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 3,
              "nodeType": "ImportDirective",
              "scope": 188,
              "sourceUnit": 1470,
              "src": "87:52:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@opengsn/contracts/src/utils/GsnTypes.sol",
              "file": "./utils/GsnTypes.sol",
              "id": 4,
              "nodeType": "ImportDirective",
              "scope": 188,
              "sourceUnit": 1198,
              "src": "141:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@opengsn/contracts/src/interfaces/IPaymaster.sol",
              "file": "./interfaces/IPaymaster.sol",
              "id": 5,
              "nodeType": "ImportDirective",
              "scope": 188,
              "sourceUnit": 344,
              "src": "172:37:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@opengsn/contracts/src/interfaces/IRelayHub.sol",
              "file": "./interfaces/IRelayHub.sol",
              "id": 6,
              "nodeType": "ImportDirective",
              "scope": 188,
              "sourceUnit": 612,
              "src": "210:36:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@opengsn/contracts/src/utils/GsnEip712Library.sol",
              "file": "./utils/GsnEip712Library.sol",
              "id": 7,
              "nodeType": "ImportDirective",
              "scope": 188,
              "sourceUnit": 1172,
              "src": "247:38:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@opengsn/contracts/src/forwarder/IForwarder.sol",
              "file": "./forwarder/IForwarder.sol",
              "id": 8,
              "nodeType": "ImportDirective",
              "scope": 188,
              "sourceUnit": 274,
              "src": "286:36:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 10,
                    "name": "IPaymaster",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 343,
                    "src": "503:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPaymaster_$343",
                      "typeString": "contract IPaymaster"
                    }
                  },
                  "id": 11,
                  "nodeType": "InheritanceSpecifier",
                  "src": "503:10:0"
                },
                {
                  "baseName": {
                    "id": 12,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1469,
                    "src": "515:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$1469",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 13,
                  "nodeType": "InheritanceSpecifier",
                  "src": "515:7:0"
                }
              ],
              "contractDependencies": [
                343,
                1469,
                1961
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 9,
                "nodeType": "StructuredDocumentation",
                "src": "324:143:0",
                "text": " Abstract base class to be inherited by a concrete Paymaster\n A subclass must implement:\n  - preRelayedCall\n  - postRelayedCall"
              },
              "fullyImplemented": false,
              "id": 187,
              "linearizedBaseContracts": [
                187,
                1469,
                1961,
                343
              ],
              "name": "BasePaymaster",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "relayHub",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "530:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRelayHub_$611",
                    "typeString": "contract IRelayHub"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "IRelayHub",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 611,
                    "src": "530:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRelayHub_$611",
                      "typeString": "contract IRelayHub"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    297
                  ],
                  "constant": false,
                  "functionSelector": "7da0a877",
                  "id": 18,
                  "mutability": "mutable",
                  "name": "trustedForwarder",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 17,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "581:8:0"
                  },
                  "scope": 187,
                  "src": "563:43:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IForwarder_$273",
                    "typeString": "contract IForwarder"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "IForwarder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 273,
                    "src": "563:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IForwarder_$273",
                      "typeString": "contract IForwarder"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    303
                  ],
                  "body": {
                    "id": 29,
                    "nodeType": "Block",
                    "src": "674:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 26,
                              "name": "relayHub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "699:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRelayHub_$611",
                                "typeString": "contract IRelayHub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IRelayHub_$611",
                                "typeString": "contract IRelayHub"
                              }
                            ],
                            "id": 25,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "691:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "691:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "691:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 23,
                        "id": 28,
                        "nodeType": "Return",
                        "src": "684:24:0"
                      }
                    ]
                  },
                  "functionSelector": "74e861d6",
                  "id": 30,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHubAddr",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 20,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "642:8:0"
                  },
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "632:2:0"
                  },
                  "returnParameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "665:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "665:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "664:9:0"
                  },
                  "scope": 187,
                  "src": "613:102:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "b90b41cf",
                  "id": 33,
                  "mutability": "constant",
                  "name": "FORWARDER_HUB_OVERHEAD",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "786:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3530303030",
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "835:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000_by_1",
                      "typeString": "int_const 50000"
                    },
                    "value": "50000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "f9c002f7",
                  "id": 36,
                  "mutability": "constant",
                  "name": "PRE_RELAYED_CALL_GAS_LIMIT",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "916:59:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313030303030",
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "969:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000_by_1",
                      "typeString": "int_const 100000"
                    },
                    "value": "100000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "bbdaa3c9",
                  "id": 39,
                  "mutability": "constant",
                  "name": "POST_RELAYED_CALL_GAS_LIMIT",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "981:60:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313130303030",
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1035:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_110000_by_1",
                      "typeString": "int_const 110000"
                    },
                    "value": "110000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "df463a66",
                  "id": 44,
                  "mutability": "constant",
                  "name": "PAYMASTER_ACCEPTANCE_BUDGET",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1047:105:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1047:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41,
                      "name": "PRE_RELAYED_CALL_GAS_LIMIT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1101:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 42,
                      "name": "FORWARDER_HUB_OVERHEAD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1130:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1101:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "5c5e3db1",
                  "id": 47,
                  "mutability": "constant",
                  "name": "CALLDATA_SIZE_LIMIT",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1158:51:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1158:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130353030",
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1204:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10500_by_1",
                      "typeString": "int_const 10500"
                    },
                    "value": "10500"
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    292
                  ],
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "1362:216:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 55,
                              "name": "PAYMASTER_ACCEPTANCE_BUDGET",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1420:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 56,
                              "name": "PRE_RELAYED_CALL_GAS_LIMIT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "1461:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 57,
                              "name": "POST_RELAYED_CALL_GAS_LIMIT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "1501:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 58,
                              "name": "CALLDATA_SIZE_LIMIT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "1542:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 53,
                              "name": "IPaymaster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "1379:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPaymaster_$343_$",
                                "typeString": "type(contract IPaymaster)"
                              }
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "GasAndDataLimits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 286,
                            "src": "1379:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_GasAndDataLimits_$286_storage_ptr_$",
                              "typeString": "type(struct IPaymaster.GasAndDataLimits storage pointer)"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:192:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GasAndDataLimits_$286_memory_ptr",
                            "typeString": "struct IPaymaster.GasAndDataLimits memory"
                          }
                        },
                        "functionReturnParameters": 52,
                        "id": 60,
                        "nodeType": "Return",
                        "src": "1372:199:0"
                      }
                    ]
                  },
                  "functionSelector": "b039a88f",
                  "id": 62,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGasAndDataLimits",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 49,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1262:8:0"
                  },
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1244:2:0"
                  },
                  "returnParameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 51,
                        "mutability": "mutable",
                        "name": "limits",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "1314:41:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GasAndDataLimits_$286_memory_ptr",
                          "typeString": "struct IPaymaster.GasAndDataLimits"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "IPaymaster.GasAndDataLimits",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 286,
                          "src": "1314:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GasAndDataLimits_$286_storage_ptr",
                            "typeString": "struct IPaymaster.GasAndDataLimits"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1304:57:0"
                  },
                  "scope": 187,
                  "src": "1216:362:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 85,
                    "nodeType": "Block",
                    "src": "1838:178:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 70,
                                    "name": "trustedForwarder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18,
                                    "src": "1864:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IForwarder_$273",
                                      "typeString": "contract IForwarder"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IForwarder_$273",
                                      "typeString": "contract IForwarder"
                                    }
                                  ],
                                  "id": 69,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1856:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 68,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1856:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1856:25:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 72,
                                    "name": "relayRequest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64,
                                    "src": "1885:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayRequest calldata"
                                    }
                                  },
                                  "id": 73,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "relayData",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1195,
                                  "src": "1885:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                    "typeString": "struct GsnTypes.RelayData calldata"
                                  }
                                },
                                "id": 74,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "forwarder",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1186,
                                "src": "1885:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1856:61:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466f72776172646572206973206e6f742074727573746564",
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1919:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429",
                                "typeString": "literal_string \"Forwarder is not trusted\""
                              },
                              "value": "Forwarder is not trusted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429",
                                "typeString": "literal_string \"Forwarder is not trusted\""
                              }
                            ],
                            "id": 67,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1848:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1848:98:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
                        "src": "1848:98:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 82,
                              "name": "relayRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "1996:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            ],
                            "expression": {
                              "id": 79,
                              "name": "GsnEip712Library",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1171,
                              "src": "1956:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_GsnEip712Library_$1171_$",
                                "typeString": "type(library GsnEip712Library)"
                              }
                            },
                            "id": 81,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyForwarderTrusted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 934,
                            "src": "1956:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_RelayRequest_$1196_calldata_ptr_$returns$__$",
                              "typeString": "function (struct GsnTypes.RelayRequest calldata) view"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1956:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 84,
                        "nodeType": "ExpressionStatement",
                        "src": "1956:53:0"
                      }
                    ]
                  },
                  "functionSelector": "a5dcd07b",
                  "id": 86,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_verifyForwarder",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "relayRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 86,
                        "src": "1769:43:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "GsnTypes.RelayRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1196,
                          "src": "1769:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayRequest_$1196_storage_ptr",
                            "typeString": "struct GsnTypes.RelayRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1768:45:0"
                  },
                  "returnParameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1838:0:0"
                  },
                  "scope": 187,
                  "src": "1743:273:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 98,
                    "nodeType": "Block",
                    "src": "2168:97:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 93,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 89,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2186:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 90,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2186:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 91,
                                  "name": "getHubAddr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "2200:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2200:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2186:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "63616e206f6e6c792062652063616c6c65642062792052656c6179487562",
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2214:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb",
                                "typeString": "literal_string \"can only be called by RelayHub\""
                              },
                              "value": "can only be called by RelayHub"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb",
                                "typeString": "literal_string \"can only be called by RelayHub\""
                              }
                            ],
                            "id": 88,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2178:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2178:69:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2178:69:0"
                      },
                      {
                        "id": 97,
                        "nodeType": "PlaceholderStatement",
                        "src": "2257:1:0"
                      }
                    ]
                  },
                  "id": 99,
                  "name": "relayHubOnly",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2165:2:0"
                  },
                  "src": "2144:121:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 110,
                    "nodeType": "Block",
                    "src": "2324:31:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 106,
                            "name": "relayHub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "2334:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRelayHub_$611",
                              "typeString": "contract IRelayHub"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 107,
                            "name": "hub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2345:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRelayHub_$611",
                              "typeString": "contract IRelayHub"
                            }
                          },
                          "src": "2334:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRelayHub_$611",
                            "typeString": "contract IRelayHub"
                          }
                        },
                        "id": 109,
                        "nodeType": "ExpressionStatement",
                        "src": "2334:14:0"
                      }
                    ]
                  },
                  "functionSelector": "7bb05264",
                  "id": 111,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1418,
                        "src": "2314:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2314:9:0"
                    }
                  ],
                  "name": "setRelayHub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "hub",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "2292:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRelayHub_$611",
                          "typeString": "contract IRelayHub"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "IRelayHub",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 611,
                          "src": "2292:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRelayHub_$611",
                            "typeString": "contract IRelayHub"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2291:15:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2324:0:0"
                  },
                  "scope": 187,
                  "src": "2271:84:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 122,
                    "nodeType": "Block",
                    "src": "2429:45:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 118,
                            "name": "trustedForwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "2439:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IForwarder_$273",
                              "typeString": "contract IForwarder"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 119,
                            "name": "forwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "2458:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IForwarder_$273",
                              "typeString": "contract IForwarder"
                            }
                          },
                          "src": "2439:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IForwarder_$273",
                            "typeString": "contract IForwarder"
                          }
                        },
                        "id": 121,
                        "nodeType": "ExpressionStatement",
                        "src": "2439:28:0"
                      }
                    ]
                  },
                  "functionSelector": "da742228",
                  "id": 123,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 116,
                      "modifierName": {
                        "id": 115,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1418,
                        "src": "2419:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2419:9:0"
                    }
                  ],
                  "name": "setTrustedForwarder",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "forwarder",
                        "nodeType": "VariableDeclaration",
                        "scope": 123,
                        "src": "2390:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IForwarder_$273",
                          "typeString": "contract IForwarder"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "IForwarder",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 273,
                          "src": "2390:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IForwarder_$273",
                            "typeString": "contract IForwarder"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2389:22:0"
                  },
                  "returnParameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2429:0:0"
                  },
                  "scope": 187,
                  "src": "2361:113:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    309
                  ],
                  "body": {
                    "id": 138,
                    "nodeType": "Block",
                    "src": "2606:57:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 134,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2650:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BasePaymaster_$187",
                                    "typeString": "contract BasePaymaster"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BasePaymaster_$187",
                                    "typeString": "contract BasePaymaster"
                                  }
                                ],
                                "id": 133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2642:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 132,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2642:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2642:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 130,
                              "name": "relayHub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "2623:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRelayHub_$611",
                                "typeString": "contract IRelayHub"
                              }
                            },
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 576,
                            "src": "2623:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2623:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 129,
                        "id": 137,
                        "nodeType": "Return",
                        "src": "2616:40:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 124,
                    "nodeType": "StructuredDocumentation",
                    "src": "2480:39:0",
                    "text": "check current deposit on relay hub."
                  },
                  "functionSelector": "2afe31c1",
                  "id": 139,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRelayHubDeposit",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 126,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2569:8:0"
                  },
                  "parameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2551:2:0"
                  },
                  "returnParameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 128,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 139,
                        "src": "2600:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 127,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2600:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2599:6:0"
                  },
                  "scope": 187,
                  "src": "2524:139:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "2881:147:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 145,
                                    "name": "relayHub",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15,
                                    "src": "2907:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IRelayHub_$611",
                                      "typeString": "contract IRelayHub"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IRelayHub_$611",
                                      "typeString": "contract IRelayHub"
                                    }
                                  ],
                                  "id": 144,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2899:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 143,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2899:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2899:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 149,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2928:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 148,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2920:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 147,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2920:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2920:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2899:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "72656c6179206875622061646472657373206e6f7420736574",
                              "id": 152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2932:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2e4bcc216326d2d371e2433ec8e1af9c54827701515af7cd10f9acc79120d313",
                                "typeString": "literal_string \"relay hub address not set\""
                              },
                              "value": "relay hub address not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2e4bcc216326d2d371e2433ec8e1af9c54827701515af7cd10f9acc79120d313",
                                "typeString": "literal_string \"relay hub address not set\""
                              }
                            ],
                            "id": 142,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2891:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2891:69:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 154,
                        "nodeType": "ExpressionStatement",
                        "src": "2891:69:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 163,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3015:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BasePaymaster_$187",
                                    "typeString": "contract BasePaymaster"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BasePaymaster_$187",
                                    "typeString": "contract BasePaymaster"
                                  }
                                ],
                                "id": 162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3007:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 161,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3007:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3007:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "id": 155,
                                "name": "relayHub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15,
                                "src": "2970:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRelayHub_$611",
                                  "typeString": "contract IRelayHub"
                                }
                              },
                              "id": 157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "depositFor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 488,
                              "src": "2970:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                                "typeString": "function (address) payable external"
                              }
                            },
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 158,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2996:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2996:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2970:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                              "typeString": "function (address) payable external"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2970:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 166,
                        "nodeType": "ExpressionStatement",
                        "src": "2970:51:0"
                      }
                    ]
                  },
                  "id": 168,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2853:2:0"
                  },
                  "returnParameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2881:0:0"
                  },
                  "scope": 187,
                  "src": "2846:182:0",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 185,
                    "nodeType": "Block",
                    "src": "3162:50:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 181,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "3190:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 182,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 173,
                              "src": "3198:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 178,
                              "name": "relayHub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "3172:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRelayHub_$611",
                                "typeString": "contract IRelayHub"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 496,
                            "src": "3172:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
                              "typeString": "function (uint256,address payable) external"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3172:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 184,
                        "nodeType": "ExpressionStatement",
                        "src": "3172:33:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "3034:34:0",
                    "text": "withdraw deposit from relayHub"
                  },
                  "functionSelector": "2d14c4b7",
                  "id": 186,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 176,
                      "modifierName": {
                        "id": 175,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1418,
                        "src": "3152:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3152:9:0"
                    }
                  ],
                  "name": "withdrawRelayHubDepositTo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "3108:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3108:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "3121:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3121:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3107:37:0"
                  },
                  "returnParameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3162:0:0"
                  },
                  "scope": 187,
                  "src": "3073:139:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 188,
              "src": "468:2746:0"
            }
          ],
          "src": "41:3174:0"
        },
        "id": 0
      },
      "@opengsn/contracts/src/forwarder/IForwarder.sol": {
        "ast": {
          "absolutePath": "@opengsn/contracts/src/forwarder/IForwarder.sol",
          "exportedSymbols": {
            "IForwarder": [
              273
            ]
          },
          "id": 274,
          "license": "GPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 189,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "41:24:1"
            },
            {
              "id": 190,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "66:19:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 273,
              "linearizedBaseContracts": [
                273
              ],
              "name": "IForwarder",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IForwarder.ForwardRequest",
                  "id": 205,
                  "members": [
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "147:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 191,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "147:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 194,
                      "mutability": "mutable",
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "169:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 193,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "169:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "189:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 195,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "189:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 198,
                      "mutability": "mutable",
                      "name": "gas",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "212:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "212:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "233:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 199,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "233:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "256:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "256:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "validUntil",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "276:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "276:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ForwardRequest",
                  "nodeType": "StructDefinition",
                  "scope": 273,
                  "src": "115:186:1",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 211,
                  "name": "DomainRegistered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 210,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 207,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "domainSeparator",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "330:31:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "330:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 209,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "domainValue",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "363:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "363:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "329:52:1"
                  },
                  "src": "307:75:1"
                },
                {
                  "anonymous": false,
                  "id": 217,
                  "name": "RequestTypeRegistered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 213,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "typeHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "416:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 215,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "typeStr",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "442:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "442:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:42:1"
                  },
                  "src": "388:70:1"
                },
                {
                  "functionSelector": "2d0335ab",
                  "id": 224,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNonce",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "482:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "482:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "481:14:1"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "526:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "526:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "525:9:1"
                  },
                  "scope": 273,
                  "src": "464:71:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 225,
                    "nodeType": "StructuredDocumentation",
                    "src": "541:251:1",
                    "text": " verify the transaction would execute.\n validate the signature and the nonce of the request.\n revert if either signature or nonce are incorrect.\n also revert if domainSeparator or requestTypeHash are not registered."
                  },
                  "functionSelector": "ad9f99c7",
                  "id": 238,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verify",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "forwardRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "822:38:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ForwardRequest_$205_calldata_ptr",
                          "typeString": "struct IForwarder.ForwardRequest"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "ForwardRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 205,
                          "src": "822:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$205_storage_ptr",
                            "typeString": "struct IForwarder.ForwardRequest"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "domainSeparator",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "870:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "870:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "requestTypeHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "903:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "903:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 233,
                        "mutability": "mutable",
                        "name": "suffixData",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "936:25:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 232,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "936:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 235,
                        "mutability": "mutable",
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "971:24:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 234,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "812:189:1"
                  },
                  "returnParameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1015:0:1"
                  },
                  "scope": 273,
                  "src": "797:219:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:621:1",
                    "text": " execute a transaction\n @param forwardRequest - all transaction parameters\n @param domainSeparator - domain used when signing this request\n @param requestTypeHash - request type used when signing this request.\n @param suffixData - the extension data used when signing this request.\n @param signature - signature to validate.\n the transaction is verified, and then executed.\n the success and ret of \"call\" are returned.\n This method would revert only verification errors. target errors\n are reported using the returned \"success\" and ret string"
                  },
                  "functionSelector": "e024dc7f",
                  "id": 256,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "forwardRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "1674:38:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ForwardRequest_$205_calldata_ptr",
                          "typeString": "struct IForwarder.ForwardRequest"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "ForwardRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 205,
                          "src": "1674:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ForwardRequest_$205_storage_ptr",
                            "typeString": "struct IForwarder.ForwardRequest"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "domainSeparator",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "1722:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1722:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "requestTypeHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "1755:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1755:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "suffixData",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "1788:25:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1788:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "1823:24:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1823:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1664:189:1"
                  },
                  "returnParameters": {
                    "id": 255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "1888:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1888:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "ret",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "1902:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1902:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1887:32:1"
                  },
                  "scope": 273,
                  "src": "1648:272:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 257,
                    "nodeType": "StructuredDocumentation",
                    "src": "1926:285:1",
                    "text": " Register a new Request typehash.\n @param typeName - the name of the request type.\n @param typeSuffix - any extra data after the generic params.\n  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)"
                  },
                  "functionSelector": "d9210be5",
                  "id": 264,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerRequestType",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "typeName",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "2245:24:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2245:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "typeSuffix",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "2271:26:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2271:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2244:54:1"
                  },
                  "returnParameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2307:0:1"
                  },
                  "scope": 273,
                  "src": "2216:92:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 265,
                    "nodeType": "StructuredDocumentation",
                    "src": "2314:452:1",
                    "text": " Register a new domain separator.\n The domain separator must have the following fields: name,version,chainId, verifyingContract.\n the chainId is the current network's chainId, and the verifyingContract is this forwarder.\n This method is given the domain name and version to create and register the domain separator value.\n @param name the domain's display name\n @param version the domain/protocol version"
                  },
                  "functionSelector": "9c7b4592",
                  "id": 272,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerDomainSeparator",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "name",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "2804:20:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2804:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "version",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "2826:23:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2826:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2803:47:1"
                  },
                  "returnParameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2859:0:1"
                  },
                  "scope": 273,
                  "src": "2771:89:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 274,
              "src": "87:2775:1"
            }
          ],
          "src": "41:2822:1"
        },
        "id": 1
      },
      "@opengsn/contracts/src/interfaces/IPaymaster.sol": {
        "ast": {
          "absolutePath": "@opengsn/contracts/src/interfaces/IPaymaster.sol",
          "exportedSymbols": {
            "GsnTypes": [
              1197
            ],
            "IForwarder": [
              273
            ],
            "IPaymaster": [
              343
            ]
          },
          "id": 344,
          "license": "GPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 275,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "41:24:2"
            },
            {
              "id": 276,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "66:19:2"
            },
            {
              "absolutePath": "@opengsn/contracts/src/utils/GsnTypes.sol",
              "file": "../utils/GsnTypes.sol",
              "id": 277,
              "nodeType": "ImportDirective",
              "scope": 344,
              "sourceUnit": 1198,
              "src": "87:31:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 343,
              "linearizedBaseContracts": [
                343
              ],
              "name": "IPaymaster",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IPaymaster.GasAndDataLimits",
                  "id": 286,
                  "members": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "acceptanceBudget",
                      "nodeType": "VariableDeclaration",
                      "scope": 286,
                      "src": "1793:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1793:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 281,
                      "mutability": "mutable",
                      "name": "preRelayedCallGasLimit",
                      "nodeType": "VariableDeclaration",
                      "scope": 286,
                      "src": "1827:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 280,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1827:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 283,
                      "mutability": "mutable",
                      "name": "postRelayedCallGasLimit",
                      "nodeType": "VariableDeclaration",
                      "scope": 286,
                      "src": "1867:31:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 282,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1867:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 285,
                      "mutability": "mutable",
                      "name": "calldataSizeLimit",
                      "nodeType": "VariableDeclaration",
                      "scope": 286,
                      "src": "1908:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 284,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1908:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "GasAndDataLimits",
                  "nodeType": "StructDefinition",
                  "scope": 343,
                  "src": "1759:181:2",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 287,
                    "nodeType": "StructuredDocumentation",
                    "src": "1946:95:2",
                    "text": " Return the Gas Limits and msg.data max size constants used by the Paymaster."
                  },
                  "functionSelector": "b039a88f",
                  "id": 292,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGasAndDataLimits",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 288,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2074:2:2"
                  },
                  "returnParameters": {
                    "id": 291,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 290,
                        "mutability": "mutable",
                        "name": "limits",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "2121:30:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GasAndDataLimits_$286_memory_ptr",
                          "typeString": "struct IPaymaster.GasAndDataLimits"
                        },
                        "typeName": {
                          "id": 289,
                          "name": "GasAndDataLimits",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 286,
                          "src": "2121:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GasAndDataLimits_$286_storage_ptr",
                            "typeString": "struct IPaymaster.GasAndDataLimits"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2111:46:2"
                  },
                  "scope": 343,
                  "src": "2046:112:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7da0a877",
                  "id": 297,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trustedForwarder",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2189:2:2"
                  },
                  "returnParameters": {
                    "id": 296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "2215:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IForwarder_$273",
                          "typeString": "contract IForwarder"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "IForwarder",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 273,
                          "src": "2215:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IForwarder_$273",
                            "typeString": "contract IForwarder"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2214:12:2"
                  },
                  "scope": 343,
                  "src": "2164:63:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 298,
                    "nodeType": "StructuredDocumentation",
                    "src": "2229:48:2",
                    "text": " return the relayHub of this contract."
                  },
                  "functionSelector": "74e861d6",
                  "id": 303,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHubAddr",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 299,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2301:2:2"
                  },
                  "returnParameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 303,
                        "src": "2327:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:9:2"
                  },
                  "scope": 343,
                  "src": "2282:54:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 304,
                    "nodeType": "StructuredDocumentation",
                    "src": "2342:161:2",
                    "text": " Can be used to determine if the contract can pay for incoming calls before making any.\n @return the paymaster's deposit in the RelayHub."
                  },
                  "functionSelector": "2afe31c1",
                  "id": 309,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRelayHubDeposit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2535:2:2"
                  },
                  "returnParameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 309,
                        "src": "2561:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2561:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2560:9:2"
                  },
                  "scope": 343,
                  "src": "2508:62:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 310,
                    "nodeType": "StructuredDocumentation",
                    "src": "2576:2198:2",
                    "text": " Called by Relay (and RelayHub), to validate if the paymaster agrees to pay for this call.\n MUST be protected with relayHubOnly() in case it modifies state.\n The Paymaster rejects by the following \"revert\" operations\n  - preRelayedCall() method reverts\n  - the forwarder reverts because of nonce or signature error\n  - the paymaster returned \"rejectOnRecipientRevert\", and the recipient contract reverted.\n In any of the above cases, all paymaster calls (and recipient call) are reverted.\n In any other case, the paymaster agrees to pay for the gas cost of the transaction (note\n  that this includes also postRelayedCall revert)\n The rejectOnRecipientRevert flag means the Paymaster \"delegate\" the rejection to the recipient\n  code.  It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,\n  forwarder check and receipient checks must fit into the GasLimits.acceptanceBudget,\n  otherwise the TX is paid by the Paymaster.\n  @param relayRequest - the full relay request structure\n  @param signature - user's EIP712-compatible signature of the {@link relayRequest}.\n              Note that in most cases the paymaster shouldn't try use it at all. It is always checked\n              by the forwarder immediately after preRelayedCall returns.\n  @param approvalData - extra dapp-specific data (e.g. signature from trusted party)\n  @param maxPossibleGas - based on values returned from {@link getGasAndDataLimits},\n         the RelayHub will calculate the maximum possible amount of gas the user may be charged for.\n         In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"\n  return:\n      a context to be passed to postRelayedCall\n      rejectOnRecipientRevert - TRUE if paymaster want to reject the TX if the recipient reverts.\n          FALSE means that rejects by the recipient will be completed on chain, and paid by the paymaster.\n          (note that in the latter case, the preRelayedCall and postRelayedCall are not reverted)."
                  },
                  "functionSelector": "00be5dd4",
                  "id": 325,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "preRelayedCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "relayRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 325,
                        "src": "4812:43:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "GsnTypes.RelayRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1196,
                          "src": "4812:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayRequest_$1196_storage_ptr",
                            "typeString": "struct GsnTypes.RelayRequest"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 314,
                        "mutability": "mutable",
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 325,
                        "src": "4865:24:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 313,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4865:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 316,
                        "mutability": "mutable",
                        "name": "approvalData",
                        "nodeType": "VariableDeclaration",
                        "scope": 325,
                        "src": "4899:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4899:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "maxPossibleGas",
                        "nodeType": "VariableDeclaration",
                        "scope": 325,
                        "src": "4936:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4936:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4802:162:2"
                  },
                  "returnParameters": {
                    "id": 324,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 321,
                        "mutability": "mutable",
                        "name": "context",
                        "nodeType": "VariableDeclaration",
                        "scope": 325,
                        "src": "4991:20:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 320,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4991:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "rejectOnRecipientRevert",
                        "nodeType": "VariableDeclaration",
                        "scope": 325,
                        "src": "5013:28:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5013:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4990:52:2"
                  },
                  "scope": 343,
                  "src": "4779:264:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 326,
                    "nodeType": "StructuredDocumentation",
                    "src": "5049:887:2",
                    "text": " This method is called after the actual relayed function call.\n It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call.\n MUST be protected with relayHubOnly() in case it modifies state.\n @param context - the call context, as returned by the preRelayedCall\n @param success - true if the relayed call succeeded, false if it reverted\n @param gasUseWithoutPost - the actual amount of gas used by the entire transaction, EXCEPT\n        the gas used by the postRelayedCall itself.\n @param relayData - the relay params of the request. can be used by relayHub.calculateCharge()\n Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster\n is still committed to pay the relay for the entire transaction."
                  },
                  "functionSelector": "76fa01c3",
                  "id": 337,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "postRelayedCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "context",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "5975:22:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5975:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 330,
                        "mutability": "mutable",
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "6007:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6007:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 332,
                        "mutability": "mutable",
                        "name": "gasUseWithoutPost",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "6029:25:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6029:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 334,
                        "mutability": "mutable",
                        "name": "relayData",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "6064:37:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayData"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "GsnTypes.RelayData",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1191,
                          "src": "6064:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayData_$1191_storage_ptr",
                            "typeString": "struct GsnTypes.RelayData"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5965:142:2"
                  },
                  "returnParameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6116:0:2"
                  },
                  "scope": 343,
                  "src": "5941:176:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "921276ea",
                  "id": 342,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "versionPaymaster",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6148:2:2"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 342,
                        "src": "6174:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6174:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6173:15:2"
                  },
                  "scope": 343,
                  "src": "6123:66:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 344,
              "src": "120:6071:2"
            }
          ],
          "src": "41:6151:2"
        },
        "id": 2
      },
      "@opengsn/contracts/src/interfaces/IRelayHub.sol": {
        "ast": {
          "absolutePath": "@opengsn/contracts/src/interfaces/IRelayHub.sol",
          "exportedSymbols": {
            "GsnTypes": [
              1197
            ],
            "IForwarder": [
              273
            ],
            "IRelayHub": [
              611
            ],
            "IStakeManager": [
              803
            ],
            "SafeMath": [
              1860
            ]
          },
          "id": 612,
          "license": "GPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 345,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "41:24:3"
            },
            {
              "id": 346,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "66:19:3"
            },
            {
              "absolutePath": "@opengsn/contracts/src/utils/GsnTypes.sol",
              "file": "../utils/GsnTypes.sol",
              "id": 347,
              "nodeType": "ImportDirective",
              "scope": 612,
              "sourceUnit": 1198,
              "src": "87:31:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@opengsn/contracts/src/interfaces/IStakeManager.sol",
              "file": "./IStakeManager.sol",
              "id": 348,
              "nodeType": "ImportDirective",
              "scope": 612,
              "sourceUnit": 804,
              "src": "119:29:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 611,
              "linearizedBaseContracts": [
                611
              ],
              "name": "IRelayHub",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IRelayHub.RelayHubConfig",
                  "id": 367,
                  "members": [
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "maxWorkerCount",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "273:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "273:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 352,
                      "mutability": "mutable",
                      "name": "gasReserve",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "407:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 351,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "407:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 354,
                      "mutability": "mutable",
                      "name": "postOverhead",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "490:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 353,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "490:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "gasOverhead",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "686:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 355,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "686:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 358,
                      "mutability": "mutable",
                      "name": "maximumRecipientDeposit",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "822:31:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "822:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 360,
                      "mutability": "mutable",
                      "name": "minimumUnstakeDelay",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "950:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 359,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "950:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "minimumStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "1098:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1098:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 364,
                      "mutability": "mutable",
                      "name": "dataGasCostPerByte",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "1192:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 363,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1192:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 366,
                      "mutability": "mutable",
                      "name": "externalCallDataCostOverhead",
                      "nodeType": "VariableDeclaration",
                      "scope": 367,
                      "src": "1319:36:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 365,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1319:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RelayHubConfig",
                  "nodeType": "StructDefinition",
                  "scope": 611,
                  "src": "176:1186:3",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 371,
                  "name": "RelayHubConfigured",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 369,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "config",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "1393:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayHubConfig_$367_memory_ptr",
                          "typeString": "struct IRelayHub.RelayHubConfig"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "RelayHubConfig",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 367,
                          "src": "1393:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayHubConfig_$367_storage_ptr",
                            "typeString": "struct IRelayHub.RelayHubConfig"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1392:23:3"
                  },
                  "src": "1368:48:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 372,
                    "nodeType": "StructuredDocumentation",
                    "src": "1422:133:3",
                    "text": "Emitted when a relay server registers or updates its details\n Looking at these events lets a client discover relay servers"
                  },
                  "id": 382,
                  "name": "RelayServerRegistered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 374,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "1597:28:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1597:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 376,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "baseRelayFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "1635:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1635:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 378,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pctRelayFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "1665:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1665:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 380,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "relayUrl",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "1694:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1694:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1587:128:3"
                  },
                  "src": "1560:156:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 383,
                    "nodeType": "StructuredDocumentation",
                    "src": "1722:51:3",
                    "text": "Emitted when relays are added by a relayManager"
                  },
                  "id": 392,
                  "name": "RelayWorkersAdded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 385,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "1811:28:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1811:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newRelayWorkers",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "1849:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 386,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1849:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 387,
                          "nodeType": "ArrayTypeName",
                          "src": "1849:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "workersCount",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "1884:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1884:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1801:109:3"
                  },
                  "src": "1778:133:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 393,
                    "nodeType": "StructuredDocumentation",
                    "src": "1917:58:3",
                    "text": "Emitted when an account withdraws funds from RelayHub."
                  },
                  "id": 401,
                  "name": "Withdrawn",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 400,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "2005:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2005:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 397,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "dest",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "2038:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 396,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2038:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 399,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "2068:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2068:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1995:93:3"
                  },
                  "src": "1980:109:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 402,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:88:3",
                    "text": "Emitted when depositFor is called, including the amount and account that was funded."
                  },
                  "id": 410,
                  "name": "Deposited",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 409,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 404,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "paymaster",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "2213:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 403,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2213:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 406,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "2248:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2248:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 408,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "2278:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 407,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2278:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2203:95:3"
                  },
                  "src": "2188:111:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 411,
                    "nodeType": "StructuredDocumentation",
                    "src": "2305:267:3",
                    "text": "Emitted when an attempt to relay a call fails and Paymaster does not accept the transaction.\n The actual relayed call was not executed, and the recipient not charged.\n @param reason contains a revert reason returned from preRelayedCall or forwarder."
                  },
                  "id": 429,
                  "name": "TransactionRejectedByPaymaster",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 413,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "2623:28:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2623:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 415,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "paymaster",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "2661:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2661:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 417,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "2696:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2696:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 419,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "2726:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 421,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "relayWorker",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "2746:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2746:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 423,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "selector",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "2775:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2775:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 425,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "innerGasUsed",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "2800:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2800:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 427,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reason",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "2830:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 426,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2830:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2613:235:3"
                  },
                  "src": "2577:272:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 430,
                    "nodeType": "StructuredDocumentation",
                    "src": "2855:337:3",
                    "text": "Emitted when a transaction is relayed. Note that the actual encoded function might be reverted: this will be\n indicated in the status field.\n Useful when monitoring a relay's operation and relayed calls to a contract.\n Charge is the ether value deducted from the recipient's balance, paid to the relay's manager."
                  },
                  "id": 448,
                  "name": "TransactionRelayed",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 432,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "3231:28:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3231:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 434,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayWorker",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "3269:27:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3269:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "3306:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3306:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "3336:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3336:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 440,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "paymaster",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "3356:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 439,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3356:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 442,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "selector",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "3383:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3383:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 444,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "3408:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RelayCallStatus_$466",
                          "typeString": "enum IRelayHub.RelayCallStatus"
                        },
                        "typeName": {
                          "id": 443,
                          "name": "RelayCallStatus",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 466,
                          "src": "3408:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RelayCallStatus_$466",
                            "typeString": "enum IRelayHub.RelayCallStatus"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 446,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "charge",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "3440:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3440:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3221:239:3"
                  },
                  "src": "3197:264:3"
                },
                {
                  "anonymous": false,
                  "id": 454,
                  "name": "TransactionResult",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 453,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 450,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "3500:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RelayCallStatus_$466",
                          "typeString": "enum IRelayHub.RelayCallStatus"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "RelayCallStatus",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 466,
                          "src": "3500:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RelayCallStatus_$466",
                            "typeString": "enum IRelayHub.RelayCallStatus"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 452,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "returnValue",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "3532:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 451,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3532:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3490:65:3"
                  },
                  "src": "3467:89:3"
                },
                {
                  "anonymous": false,
                  "id": 458,
                  "name": "HubDeprecated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 457,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 456,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fromBlock",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "3582:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 455,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3582:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3581:19:3"
                  },
                  "src": "3562:39:3"
                },
                {
                  "canonicalName": "IRelayHub.RelayCallStatus",
                  "id": 466,
                  "members": [
                    {
                      "id": 459,
                      "name": "OK",
                      "nodeType": "EnumValue",
                      "src": "4345:2:3"
                    },
                    {
                      "id": 460,
                      "name": "RelayedCallFailed",
                      "nodeType": "EnumValue",
                      "src": "4357:17:3"
                    },
                    {
                      "id": 461,
                      "name": "RejectedByPreRelayed",
                      "nodeType": "EnumValue",
                      "src": "4384:20:3"
                    },
                    {
                      "id": 462,
                      "name": "RejectedByForwarder",
                      "nodeType": "EnumValue",
                      "src": "4414:19:3"
                    },
                    {
                      "id": 463,
                      "name": "RejectedByRecipientRevert",
                      "nodeType": "EnumValue",
                      "src": "4443:25:3"
                    },
                    {
                      "id": 464,
                      "name": "PostRelayedFailed",
                      "nodeType": "EnumValue",
                      "src": "4478:17:3"
                    },
                    {
                      "id": 465,
                      "name": "PaymasterBalanceChanged",
                      "nodeType": "EnumValue",
                      "src": "4505:23:3"
                    }
                  ],
                  "name": "RelayCallStatus",
                  "nodeType": "EnumDefinition",
                  "src": "4314:220:3"
                },
                {
                  "documentation": {
                    "id": 467,
                    "nodeType": "StructuredDocumentation",
                    "src": "4540:206:3",
                    "text": "Add new worker addresses controlled by sender who must be a staked Relay Manager address.\n Emits a RelayWorkersAdded event.\n This function can be called multiple times, emitting new events"
                  },
                  "functionSelector": "c2da0786",
                  "id": 473,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addRelayWorkers",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 471,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 470,
                        "mutability": "mutable",
                        "name": "newRelayWorkers",
                        "nodeType": "VariableDeclaration",
                        "scope": 473,
                        "src": "4776:34:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4776:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 469,
                          "nodeType": "ArrayTypeName",
                          "src": "4776:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4775:36:3"
                  },
                  "returnParameters": {
                    "id": 472,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4820:0:3"
                  },
                  "scope": 611,
                  "src": "4751:70:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "83b71871",
                  "id": 482,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerRelayServer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 475,
                        "mutability": "mutable",
                        "name": "baseRelayFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4856:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 474,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4856:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 477,
                        "mutability": "mutable",
                        "name": "pctRelayFee",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4878:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4878:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "url",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4899:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4899:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4855:64:3"
                  },
                  "returnParameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4928:0:3"
                  },
                  "scope": 611,
                  "src": "4827:102:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "4962:216:3",
                    "text": "Deposits ether for a contract, so that it can receive (and pay for) relayed transactions. Unused balance can only\n be withdrawn by the contract itself, by calling withdraw.\n Emits a Deposited event."
                  },
                  "functionSelector": "aa67c919",
                  "id": 488,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositFor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "5203:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5203:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5202:16:3"
                  },
                  "returnParameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5235:0:3"
                  },
                  "scope": 611,
                  "src": "5183:53:3",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 489,
                    "nodeType": "StructuredDocumentation",
                    "src": "5242:211:3",
                    "text": "Withdraws from an account's balance, sending it back to it. Relay managers call this to retrieve their revenue, and\n contracts can also use it to reduce their funding.\n Emits a Withdrawn event."
                  },
                  "functionSelector": "00f714ce",
                  "id": 496,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 491,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "5476:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5476:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "dest",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "5492:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5492:15:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5475:38:3"
                  },
                  "returnParameters": {
                    "id": 495,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5522:0:3"
                  },
                  "scope": 611,
                  "src": "5458:65:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 497,
                    "nodeType": "StructuredDocumentation",
                    "src": "5547:1274:3",
                    "text": "Relays a transaction. For this to succeed, multiple conditions must be met:\n  - Paymaster's \"preRelayCall\" method must succeed and not revert\n  - the sender must be a registered Relay Worker that the user signed\n  - the transaction's gas price must be equal or larger than the one that was signed by the sender\n  - the transaction must have enough gas to run all internal transactions if they use all gas available to them\n  - the Paymaster must have enough balance to pay the Relay Worker for the scenario when all gas is spent\n If all conditions are met, the call will be relayed and the recipient charged.\n Arguments:\n @param maxAcceptanceBudget - max valid value for paymaster.getGasLimits().acceptanceBudget\n @param relayRequest - all details of the requested relayed call\n @param signature - client's EIP-712 signature over the relayRequest struct\n @param approvalData: dapp-specific data forwarded to preRelayedCall.\n        This value is *not* verified by the Hub. For example, it can be used to pass a signature to the Paymaster\n @param externalGasLimit - the value passed as gasLimit to the transaction.\n Emits a TransactionRelayed event."
                  },
                  "functionSelector": "10c45431",
                  "id": 514,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "relayCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 499,
                        "mutability": "mutable",
                        "name": "maxAcceptanceBudget",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6854:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 498,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6854:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "relayRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6888:43:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "GsnTypes.RelayRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1196,
                          "src": "6888:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayRequest_$1196_storage_ptr",
                            "typeString": "struct GsnTypes.RelayRequest"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6941:24:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6941:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "approvalData",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6975:27:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6975:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 507,
                        "mutability": "mutable",
                        "name": "externalGasLimit",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "7012:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 506,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7012:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6844:195:3"
                  },
                  "returnParameters": {
                    "id": 513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "paymasterAccepted",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "7066:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7066:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "returnValue",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "7090:24:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7090:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7065:50:3"
                  },
                  "scope": 611,
                  "src": "6826:290:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ebcd31ac",
                  "id": 521,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "penalize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "relayWorker",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "7140:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7140:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 518,
                        "mutability": "mutable",
                        "name": "beneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "7161:27:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 517,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7161:15:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7139:50:3"
                  },
                  "returnParameters": {
                    "id": 520,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7198:0:3"
                  },
                  "scope": 611,
                  "src": "7122:77:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c651bce8",
                  "id": 526,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setConfiguration",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "_config",
                        "nodeType": "VariableDeclaration",
                        "scope": 526,
                        "src": "7231:29:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayHubConfig_$367_memory_ptr",
                          "typeString": "struct IRelayHub.RelayHubConfig"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "RelayHubConfig",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 367,
                          "src": "7231:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayHubConfig_$367_storage_ptr",
                            "typeString": "struct IRelayHub.RelayHubConfig"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7230:31:3"
                  },
                  "returnParameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7270:0:3"
                  },
                  "scope": 611,
                  "src": "7205:66:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "af595dfc",
                  "id": 531,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deprecateHub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 529,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 528,
                        "mutability": "mutable",
                        "name": "fromBlock",
                        "nodeType": "VariableDeclaration",
                        "scope": 531,
                        "src": "7409:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 527,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7409:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7408:19:3"
                  },
                  "returnParameters": {
                    "id": 530,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7436:0:3"
                  },
                  "scope": 611,
                  "src": "7387:50:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 532,
                    "nodeType": "StructuredDocumentation",
                    "src": "7443:201:3",
                    "text": "The fee is expressed as a base fee in wei plus percentage on actual charge.\n E.g. a value of 40 stands for a 40% fee, so the recipient will be\n charged for 1.4 times the spent amount."
                  },
                  "functionSelector": "8e53548b",
                  "id": 541,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateCharge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "gasUsed",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "7674:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7674:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "relayData",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "7691:37:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayData"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "GsnTypes.RelayData",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1191,
                          "src": "7691:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayData_$1191_storage_ptr",
                            "typeString": "struct GsnTypes.RelayData"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7673:56:3"
                  },
                  "returnParameters": {
                    "id": 540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "7753:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7753:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7752:9:3"
                  },
                  "scope": 611,
                  "src": "7649:113:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 542,
                    "nodeType": "StructuredDocumentation",
                    "src": "7787:39:3",
                    "text": "Returns the whole hub configuration"
                  },
                  "functionSelector": "6bd50cef",
                  "id": 547,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getConfiguration",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7856:2:3"
                  },
                  "returnParameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "config",
                        "nodeType": "VariableDeclaration",
                        "scope": 547,
                        "src": "7882:28:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayHubConfig_$367_memory_ptr",
                          "typeString": "struct IRelayHub.RelayHubConfig"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "RelayHubConfig",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 367,
                          "src": "7882:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayHubConfig_$367_storage_ptr",
                            "typeString": "struct IRelayHub.RelayHubConfig"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7881:30:3"
                  },
                  "scope": 611,
                  "src": "7831:81:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "26595b9d",
                  "id": 554,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calldataGasCost",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 550,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "length",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "7943:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7943:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7942:16:3"
                  },
                  "returnParameters": {
                    "id": 553,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 552,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "7982:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 551,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7982:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7981:9:3"
                  },
                  "scope": 611,
                  "src": "7918:73:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ca998f56",
                  "id": 561,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "workerToManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 557,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 556,
                        "mutability": "mutable",
                        "name": "worker",
                        "nodeType": "VariableDeclaration",
                        "scope": 561,
                        "src": "8022:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 555,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8022:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8021:16:3"
                  },
                  "returnParameters": {
                    "id": 560,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 559,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 561,
                        "src": "8060:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 558,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8060:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8059:9:3"
                  },
                  "scope": 611,
                  "src": "7997:72:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "194ac307",
                  "id": 568,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "workerCount",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 563,
                        "mutability": "mutable",
                        "name": "manager",
                        "nodeType": "VariableDeclaration",
                        "scope": 568,
                        "src": "8096:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 562,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8096:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8095:17:3"
                  },
                  "returnParameters": {
                    "id": 567,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 566,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 568,
                        "src": "8135:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 565,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8135:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8134:9:3"
                  },
                  "scope": 611,
                  "src": "8075:69:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 569,
                    "nodeType": "StructuredDocumentation",
                    "src": "8150:110:3",
                    "text": "Returns an account's deposits. It can be either a deposit of a paymaster, or a revenue of a relay manager."
                  },
                  "functionSelector": "70a08231",
                  "id": 576,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "8284:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8284:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8283:16:3"
                  },
                  "returnParameters": {
                    "id": 575,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 574,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "8323:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 573,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8323:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8322:9:3"
                  },
                  "scope": 611,
                  "src": "8265:67:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7542ff95",
                  "id": 581,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakeManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 577,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8359:2:3"
                  },
                  "returnParameters": {
                    "id": 580,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 579,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 581,
                        "src": "8385:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakeManager_$803",
                          "typeString": "contract IStakeManager"
                        },
                        "typeName": {
                          "id": 578,
                          "name": "IStakeManager",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 803,
                          "src": "8385:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStakeManager_$803",
                            "typeString": "contract IStakeManager"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8384:15:3"
                  },
                  "scope": 611,
                  "src": "8338:62:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c4775a68",
                  "id": 586,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "penalizer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 582,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8424:2:3"
                  },
                  "returnParameters": {
                    "id": 585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 584,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "8450:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8450:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8449:9:3"
                  },
                  "scope": 611,
                  "src": "8406:53:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 587,
                    "nodeType": "StructuredDocumentation",
                    "src": "8465:152:3",
                    "text": "Uses StakeManager info to decide if the Relay Manager can be considered staked\n @return true if stake size and delay satisfy all requirements"
                  },
                  "functionSelector": "2ad311b5",
                  "id": 594,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isRelayManagerStaked",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "8652:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8652:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8651:22:3"
                  },
                  "returnParameters": {
                    "id": 593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 592,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "8696:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 591,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8696:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8695:6:3"
                  },
                  "scope": 611,
                  "src": "8622:80:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c7178230",
                  "id": 599,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isDeprecated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 595,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8768:2:3"
                  },
                  "returnParameters": {
                    "id": 598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 599,
                        "src": "8794:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8794:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8793:6:3"
                  },
                  "scope": 611,
                  "src": "8747:53:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d6a71c0d",
                  "id": 604,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deprecationBlock",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 600,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8915:2:3"
                  },
                  "returnParameters": {
                    "id": 603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 602,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 604,
                        "src": "8941:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8941:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8940:9:3"
                  },
                  "scope": 611,
                  "src": "8890:60:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 605,
                    "nodeType": "StructuredDocumentation",
                    "src": "8956:58:3",
                    "text": "@return a SemVer-compliant version of the hub contract"
                  },
                  "functionSelector": "d904c732",
                  "id": 610,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "versionHub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 606,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9038:2:3"
                  },
                  "returnParameters": {
                    "id": 609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 608,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "9064:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9064:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9063:15:3"
                  },
                  "scope": 611,
                  "src": "9019:60:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 612,
              "src": "150:8931:3"
            }
          ],
          "src": "41:9042:3"
        },
        "id": 3
      },
      "@opengsn/contracts/src/interfaces/IRelayRecipient.sol": {
        "ast": {
          "absolutePath": "@opengsn/contracts/src/interfaces/IRelayRecipient.sol",
          "exportedSymbols": {
            "IRelayRecipient": [
              640
            ]
          },
          "id": 641,
          "license": "GPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 613,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "41:24:4"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 614,
                "nodeType": "StructuredDocumentation",
                "src": "67:165:4",
                "text": " a contract must implement this interface in order to support relayed transaction.\n It is better to inherit the BaseRelayRecipient as its implementation."
              },
              "fullyImplemented": false,
              "id": 640,
              "linearizedBaseContracts": [
                640
              ],
              "name": "IRelayRecipient",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 615,
                    "nodeType": "StructuredDocumentation",
                    "src": "274:203:4",
                    "text": " return if the forwarder is trusted to forward relayed transactions to us.\n the forwarder is required to verify the sender's signature, and verify\n the call is not a replay."
                  },
                  "functionSelector": "572b6c05",
                  "id": 622,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isTrustedForwarder",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 618,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 617,
                        "mutability": "mutable",
                        "name": "forwarder",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "510:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 616,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "510:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "509:19:4"
                  },
                  "returnParameters": {
                    "id": 621,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 620,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "557:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 619,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "557:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "556:6:4"
                  },
                  "scope": 640,
                  "src": "482:81:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 623,
                    "nodeType": "StructuredDocumentation",
                    "src": "569:290:4",
                    "text": " return the sender of this call.\n if the call came through our trusted forwarder, then the real sender is appended as the last 20 bytes\n of the msg.data.\n otherwise, return `msg.sender`\n should be used in the contract anywhere instead of msg.sender"
                  },
                  "id": 628,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 624,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "883:2:4"
                  },
                  "returnParameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "917:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "917:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "916:17:4"
                  },
                  "scope": 640,
                  "src": "864:70:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "documentation": {
                    "id": 629,
                    "nodeType": "StructuredDocumentation",
                    "src": "940:421:4",
                    "text": " return the msg.data of this call.\n if the call came through our trusted forwarder, then the real sender was appended as the last 20 bytes\n of the msg.data - so this method will strip those 20 bytes off.\n otherwise (if the call was made directly and not through the forwarder), return `msg.data`\n should be used in the contract instead of msg.data, where this difference matters."
                  },
                  "id": 634,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 630,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1383:2:4"
                  },
                  "returnParameters": {
                    "id": 633,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 632,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "1417:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 631,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1417:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1416:14:4"
                  },
                  "scope": 640,
                  "src": "1366:65:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "functionSelector": "486ff0cd",
                  "id": 639,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "versionRecipient",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 635,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1462:2:4"
                  },
                  "returnParameters": {
                    "id": 638,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 637,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "1496:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1496:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1495:15:4"
                  },
                  "scope": 640,
                  "src": "1437:74:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 641,
              "src": "233:1280:4"
            }
          ],
          "src": "41:1473:4"
        },
        "id": 4
      },
      "@opengsn/contracts/src/interfaces/IStakeManager.sol": {
        "ast": {
          "absolutePath": "@opengsn/contracts/src/interfaces/IStakeManager.sol",
          "exportedSymbols": {
            "IStakeManager": [
              803
            ],
            "SafeMath": [
              1860
            ]
          },
          "id": 804,
          "license": "GPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 642,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "41:24:5"
            },
            {
              "id": 643,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "66:19:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
              "file": "@openzeppelin/contracts/math/SafeMath.sol",
              "id": 644,
              "nodeType": "ImportDirective",
              "scope": 804,
              "sourceUnit": 1861,
              "src": "87:51:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 803,
              "linearizedBaseContracts": [
                803
              ],
              "name": "IStakeManager",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 645,
                    "nodeType": "StructuredDocumentation",
                    "src": "171:69:5",
                    "text": "Emitted when a stake or unstakeDelay are initialized or increased"
                  },
                  "id": 655,
                  "name": "StakeAdded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 647,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "271:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 646,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "271:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 649,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "309:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 648,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 651,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "stake",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "340:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 650,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "340:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 653,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "unstakeDelay",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "363:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "363:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "261:128:5"
                  },
                  "src": "245:145:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 656,
                    "nodeType": "StructuredDocumentation",
                    "src": "396:52:5",
                    "text": "Emitted once a stake is scheduled for withdrawal"
                  },
                  "id": 664,
                  "name": "StakeUnlocked",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 658,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 664,
                        "src": "482:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 657,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "482:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 660,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 664,
                        "src": "520:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 659,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "520:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 662,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "withdrawBlock",
                        "nodeType": "VariableDeclaration",
                        "scope": 664,
                        "src": "551:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "551:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "472:106:5"
                  },
                  "src": "453:126:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 665,
                    "nodeType": "StructuredDocumentation",
                    "src": "585:51:5",
                    "text": "Emitted when owner withdraws relayManager funds"
                  },
                  "id": 673,
                  "name": "StakeWithdrawn",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 672,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 667,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 673,
                        "src": "671:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 666,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "671:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 669,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 673,
                        "src": "709:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 671,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 673,
                        "src": "740:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 670,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "740:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "661:99:5"
                  },
                  "src": "641:120:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 674,
                    "nodeType": "StructuredDocumentation",
                    "src": "767:65:5",
                    "text": "Emitted when an authorized Relay Hub penalizes a relayManager"
                  },
                  "id": 682,
                  "name": "StakePenalized",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 676,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "867:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 675,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "867:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 678,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "beneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "905:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 677,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "905:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 680,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "942:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 679,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "942:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:105:5"
                  },
                  "src": "837:126:5"
                },
                {
                  "anonymous": false,
                  "id": 688,
                  "name": "HubAuthorized",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 688,
                        "src": "998:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "998:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 686,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayHub",
                        "nodeType": "VariableDeclaration",
                        "scope": 688,
                        "src": "1036:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1036:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "988:78:5"
                  },
                  "src": "969:98:5"
                },
                {
                  "anonymous": false,
                  "id": 696,
                  "name": "HubUnauthorized",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 690,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1104:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 689,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 692,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayHub",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1142:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 691,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1142:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 694,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "removalBlock",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1176:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1176:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1094:108:5"
                  },
                  "src": "1073:130:5"
                },
                {
                  "anonymous": false,
                  "id": 702,
                  "name": "OwnerSet",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 698,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "1233:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 697,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 700,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "1271:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 699,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1271:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1223:75:5"
                  },
                  "src": "1209:90:5"
                },
                {
                  "canonicalName": "IStakeManager.StakeInfo",
                  "id": 711,
                  "members": [
                    {
                      "constant": false,
                      "id": 704,
                      "mutability": "mutable",
                      "name": "stake",
                      "nodeType": "VariableDeclaration",
                      "scope": 711,
                      "src": "1720:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 703,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1720:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "unstakeDelay",
                      "nodeType": "VariableDeclaration",
                      "scope": 711,
                      "src": "1743:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1743:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 708,
                      "mutability": "mutable",
                      "name": "withdrawBlock",
                      "nodeType": "VariableDeclaration",
                      "scope": 711,
                      "src": "1773:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 707,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1773:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 710,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 711,
                      "src": "1804:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 709,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1804:15:5",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "StakeInfo",
                  "nodeType": "StructDefinition",
                  "scope": 803,
                  "src": "1693:139:5",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IStakeManager.RelayHubInfo",
                  "id": 714,
                  "members": [
                    {
                      "constant": false,
                      "id": 713,
                      "mutability": "mutable",
                      "name": "removalBlock",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "1868:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 712,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1868:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RelayHubInfo",
                  "nodeType": "StructDefinition",
                  "scope": 803,
                  "src": "1838:57:5",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 715,
                    "nodeType": "StructuredDocumentation",
                    "src": "1901:236:5",
                    "text": "Set the owner of a Relay Manager. Called only by the RelayManager itself.\n Note that owners cannot transfer ownership - if the entry already exists, reverts.\n @param owner - owner of the relay (as configured off-chain)"
                  },
                  "functionSelector": "fece3dd4",
                  "id": 720,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRelayManagerOwner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 718,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 717,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 720,
                        "src": "2172:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 716,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2172:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2171:23:5"
                  },
                  "returnParameters": {
                    "id": 719,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2203:0:5"
                  },
                  "scope": 803,
                  "src": "2142:62:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 721,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:315:5",
                    "text": "Only the owner can call this function. If the entry does not exist, reverts.\n @param relayManager - address that represents a stake entry and controls relay registrations on relay hubs\n @param unstakeDelay - number of blocks to elapse before the owner can retrieve the stake after calling 'unlock'"
                  },
                  "functionSelector": "f32102db",
                  "id": 728,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakeForRelayManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 726,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2560:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2560:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 725,
                        "mutability": "mutable",
                        "name": "unstakeDelay",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2582:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 724,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2582:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2559:44:5"
                  },
                  "returnParameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2620:0:5"
                  },
                  "scope": 803,
                  "src": "2530:91:5",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4a1ce599",
                  "id": 733,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unlockStake",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 731,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 730,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 733,
                        "src": "2648:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 729,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2648:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2647:22:5"
                  },
                  "returnParameters": {
                    "id": 732,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2678:0:5"
                  },
                  "scope": 803,
                  "src": "2627:52:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c23a5cea",
                  "id": 738,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawStake",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 736,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 735,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 738,
                        "src": "2708:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 734,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2708:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2707:22:5"
                  },
                  "returnParameters": {
                    "id": 737,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2738:0:5"
                  },
                  "scope": 803,
                  "src": "2685:54:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7835d296",
                  "id": 745,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "authorizeHubByOwner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 743,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 740,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 745,
                        "src": "2774:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 739,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2774:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 742,
                        "mutability": "mutable",
                        "name": "relayHub",
                        "nodeType": "VariableDeclaration",
                        "scope": 745,
                        "src": "2796:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 741,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2796:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2773:40:5"
                  },
                  "returnParameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2822:0:5"
                  },
                  "scope": 803,
                  "src": "2745:78:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d48a9d43",
                  "id": 750,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "authorizeHubByManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 748,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 747,
                        "mutability": "mutable",
                        "name": "relayHub",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "2860:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 746,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2860:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2859:18:5"
                  },
                  "returnParameters": {
                    "id": 749,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2886:0:5"
                  },
                  "scope": 803,
                  "src": "2829:58:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f48f8ac7",
                  "id": 757,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unauthorizeHubByOwner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 755,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 752,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 757,
                        "src": "2924:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 751,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2924:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 754,
                        "mutability": "mutable",
                        "name": "relayHub",
                        "nodeType": "VariableDeclaration",
                        "scope": 757,
                        "src": "2946:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 753,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2946:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2923:40:5"
                  },
                  "returnParameters": {
                    "id": 756,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2972:0:5"
                  },
                  "scope": 803,
                  "src": "2893:80:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f9bce311",
                  "id": 762,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unauthorizeHubByManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 760,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 759,
                        "mutability": "mutable",
                        "name": "relayHub",
                        "nodeType": "VariableDeclaration",
                        "scope": 762,
                        "src": "3012:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 758,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3012:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3011:18:5"
                  },
                  "returnParameters": {
                    "id": 761,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3038:0:5"
                  },
                  "scope": 803,
                  "src": "2979:60:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6de8dd41",
                  "id": 775,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isRelayManagerStaked",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 771,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 764,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "3075:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 763,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3075:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 766,
                        "mutability": "mutable",
                        "name": "relayHub",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "3097:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 765,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3097:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 768,
                        "mutability": "mutable",
                        "name": "minAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "3115:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 767,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3115:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 770,
                        "mutability": "mutable",
                        "name": "minUnstakeDelay",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "3134:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 769,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3134:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3074:84:5"
                  },
                  "returnParameters": {
                    "id": 774,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 773,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "3194:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 772,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3194:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3193:6:5"
                  },
                  "scope": 803,
                  "src": "3045:155:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 776,
                    "nodeType": "StructuredDocumentation",
                    "src": "3206:296:5",
                    "text": "Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns half of stake on the way.\n @param relayManager - entry to penalize\n @param beneficiary - address that receives half of the penalty amount\n @param amount - amount to withdraw from stake"
                  },
                  "functionSelector": "09a08af4",
                  "id": 785,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "penalizeRelayManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 783,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 778,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 785,
                        "src": "3537:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 777,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3537:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 780,
                        "mutability": "mutable",
                        "name": "beneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 785,
                        "src": "3559:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 779,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3559:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 782,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 785,
                        "src": "3588:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 781,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3588:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3536:67:5"
                  },
                  "returnParameters": {
                    "id": 784,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3612:0:5"
                  },
                  "scope": 803,
                  "src": "3507:106:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c3453153",
                  "id": 792,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStakeInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 788,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 787,
                        "mutability": "mutable",
                        "name": "relayManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "3641:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 786,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3641:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3640:22:5"
                  },
                  "returnParameters": {
                    "id": 791,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 790,
                        "mutability": "mutable",
                        "name": "stakeInfo",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "3686:26:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakeInfo_$711_memory_ptr",
                          "typeString": "struct IStakeManager.StakeInfo"
                        },
                        "typeName": {
                          "id": 789,
                          "name": "StakeInfo",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 711,
                          "src": "3686:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$711_storage_ptr",
                            "typeString": "struct IStakeManager.StakeInfo"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3685:28:5"
                  },
                  "scope": 803,
                  "src": "3619:95:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4e02131c",
                  "id": 797,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxUnstakeDelay",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 793,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3744:2:5"
                  },
                  "returnParameters": {
                    "id": 796,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 795,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 797,
                        "src": "3770:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 794,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3770:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3769:9:5"
                  },
                  "scope": 803,
                  "src": "3720:59:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "47116c6e",
                  "id": 802,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "versionSM",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 798,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3803:2:5"
                  },
                  "returnParameters": {
                    "id": 801,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 800,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "3829:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 799,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3829:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3828:15:5"
                  },
                  "scope": 803,
                  "src": "3785:59:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 804,
              "src": "140:3706:5"
            }
          ],
          "src": "41:3806:5"
        },
        "id": 5
      },
      "@opengsn/contracts/src/utils/GsnEip712Library.sol": {
        "ast": {
          "absolutePath": "@opengsn/contracts/src/utils/GsnEip712Library.sol",
          "exportedSymbols": {
            "GsnEip712Library": [
              1171
            ],
            "GsnTypes": [
              1197
            ],
            "GsnUtils": [
              1244
            ],
            "IForwarder": [
              273
            ],
            "IRelayRecipient": [
              640
            ],
            "MinLibBytes": [
              1359
            ]
          },
          "id": 1172,
          "license": "GPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 805,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "41:24:6"
            },
            {
              "id": 806,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "66:19:6"
            },
            {
              "absolutePath": "@opengsn/contracts/src/utils/GsnTypes.sol",
              "file": "../utils/GsnTypes.sol",
              "id": 807,
              "nodeType": "ImportDirective",
              "scope": 1172,
              "sourceUnit": 1198,
              "src": "87:31:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@opengsn/contracts/src/interfaces/IRelayRecipient.sol",
              "file": "../interfaces/IRelayRecipient.sol",
              "id": 808,
              "nodeType": "ImportDirective",
              "scope": 1172,
              "sourceUnit": 641,
              "src": "119:43:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@opengsn/contracts/src/forwarder/IForwarder.sol",
              "file": "../forwarder/IForwarder.sol",
              "id": 809,
              "nodeType": "ImportDirective",
              "scope": 1172,
              "sourceUnit": 274,
              "src": "163:37:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@opengsn/contracts/src/utils/GsnUtils.sol",
              "file": "./GsnUtils.sol",
              "id": 810,
              "nodeType": "ImportDirective",
              "scope": 1172,
              "sourceUnit": 1245,
              "src": "202:24:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 811,
                "nodeType": "StructuredDocumentation",
                "src": "228:76:6",
                "text": " Bridge Library to map GSN RelayRequest into a call of a Forwarder"
              },
              "fullyImplemented": true,
              "id": 1171,
              "linearizedBaseContracts": [
                1171
              ],
              "name": "GsnEip712Library",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 814,
                  "mutability": "constant",
                  "name": "MAX_RETURN_SIZE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "444:47:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31303234",
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "487:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1024_by_1",
                      "typeString": "int_const 1024"
                    },
                    "value": "1024"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "functionSelector": "066a310c",
                  "id": 817,
                  "mutability": "constant",
                  "name": "GENERIC_PARAMS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "587:135:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c627974657320646174612c75696e743235362076616c6964556e74696c",
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "627:95:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_07514c07fd5c00b9bc59b11441f2afb642c4d4ad89f30808b936de273e98e184",
                      "typeString": "literal_string \"address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntil\""
                    },
                    "value": "address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntil"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "c46cf83f",
                  "id": 820,
                  "mutability": "constant",
                  "name": "RELAYDATA_TYPE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "729:202:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": {
                    "hexValue": "52656c6179446174612875696e743235362067617350726963652c75696e743235362070637452656c61794665652c75696e74323536206261736552656c61794665652c616464726573732072656c6179576f726b65722c61646472657373207061796d61737465722c6164647265737320666f727761726465722c6279746573207061796d6173746572446174612c75696e7432353620636c69656e74496429",
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "768:163:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2766c3b10bb32c13389ace3ccc8ad82b14437c4e08f660dd273a7dcd6b3b9e69",
                      "typeString": "literal_string \"RelayData(uint256 gasPrice,uint256 pctRelayFee,uint256 baseRelayFee,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)\""
                    },
                    "value": "RelayData(uint256 gasPrice,uint256 pctRelayFee,uint256 baseRelayFee,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "987673f7",
                  "id": 823,
                  "mutability": "constant",
                  "name": "RELAY_REQUEST_NAME",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "938:58:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "52656c617952657175657374",
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "982:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9474f9de570f8c3456d0ad4af045975f85d14cb683a1e7b73535cecf52ff41f8",
                      "typeString": "literal_string \"RelayRequest\""
                    },
                    "value": "RelayRequest"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "931cd38f",
                  "id": 833,
                  "mutability": "constant",
                  "name": "RELAY_REQUEST_SUFFIX",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "1002:110:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "52656c6179446174612072656c61794461746129",
                            "id": 829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1072:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f",
                              "typeString": "literal_string \"RelayData relayData)\""
                            },
                            "value": "RelayData relayData)"
                          },
                          {
                            "id": 830,
                            "name": "RELAYDATA_TYPE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "1096:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f",
                              "typeString": "literal_string \"RelayData relayData)\""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 827,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1055:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1055:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1055:56:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1048:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 825,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1048:6:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1048:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "6225e61b",
                  "id": 843,
                  "mutability": "constant",
                  "name": "RELAY_REQUEST_TYPE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "1119:133:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "id": 837,
                        "name": "RELAY_REQUEST_NAME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 823,
                        "src": "1188:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "28",
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1207:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a",
                          "typeString": "literal_string \"(\""
                        },
                        "value": "("
                      },
                      {
                        "id": 839,
                        "name": "GENERIC_PARAMS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "1211:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "2c",
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1226:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                          "typeString": "literal_string \",\""
                        },
                        "value": ","
                      },
                      {
                        "id": 841,
                        "name": "RELAY_REQUEST_SUFFIX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "1231:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a",
                          "typeString": "literal_string \"(\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                          "typeString": "literal_string \",\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 835,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1162:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "1162:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1162:90:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "cc0c62b2",
                  "id": 848,
                  "mutability": "constant",
                  "name": "RELAYDATA_TYPEHASH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "1259:70:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "id": 846,
                        "name": "RELAYDATA_TYPE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1314:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 845,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1304:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1304:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "abf0d3f4",
                  "id": 853,
                  "mutability": "constant",
                  "name": "RELAY_REQUEST_TYPEHASH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "1335:78:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "id": 851,
                        "name": "RELAY_REQUEST_TYPE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "1394:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 850,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1384:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "GsnEip712Library.EIP712Domain",
                  "id": 862,
                  "members": [
                    {
                      "constant": false,
                      "id": 855,
                      "mutability": "mutable",
                      "name": "name",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "1451:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 854,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1451:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 857,
                      "mutability": "mutable",
                      "name": "version",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "1472:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 856,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1472:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 859,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "1496:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 858,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1496:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 861,
                      "mutability": "mutable",
                      "name": "verifyingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "1521:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 860,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1521:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "EIP712Domain",
                  "nodeType": "StructDefinition",
                  "scope": 1171,
                  "src": "1421:132:6",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "c49f91d3",
                  "id": 867,
                  "mutability": "constant",
                  "name": "EIP712DOMAIN_TYPEHASH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "1559:157:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1626:84:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                          "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                        },
                        "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                          "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                        }
                      ],
                      "id": 864,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1607:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1607:109:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 884,
                    "nodeType": "Block",
                    "src": "1869:83:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 874,
                            "name": "suffixData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "1879:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 878,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 869,
                                      "src": "1930:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                        "typeString": "struct GsnTypes.RelayRequest calldata"
                                      }
                                    },
                                    "id": 879,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "relayData",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1195,
                                    "src": "1930:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayData calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayData calldata"
                                    }
                                  ],
                                  "id": 877,
                                  "name": "hashRelayData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1170,
                                  "src": "1916:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_struct$_RelayData_$1191_calldata_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (struct GsnTypes.RelayData calldata) pure returns (bytes32)"
                                  }
                                },
                                "id": 880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1916:28:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 875,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1892:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1892:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1892:53:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "1879:66:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 883,
                        "nodeType": "ExpressionStatement",
                        "src": "1879:66:6"
                      }
                    ]
                  },
                  "id": 885,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "splitRequest",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 870,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "req",
                        "nodeType": "VariableDeclaration",
                        "scope": 885,
                        "src": "1754:34:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "GsnTypes.RelayRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1196,
                          "src": "1754:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayRequest_$1196_storage_ptr",
                            "typeString": "struct GsnTypes.RelayRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1744:50:6"
                  },
                  "returnParameters": {
                    "id": 873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "suffixData",
                        "nodeType": "VariableDeclaration",
                        "scope": 885,
                        "src": "1839:23:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1839:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1829:39:6"
                  },
                  "scope": 1171,
                  "src": "1723:229:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 933,
                    "nodeType": "Block",
                    "src": "2143:447:6",
                    "statements": [
                      {
                        "assignments": [
                          891,
                          893
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 891,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 933,
                            "src": "2154:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 890,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2154:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 893,
                            "mutability": "mutable",
                            "name": "ret",
                            "nodeType": "VariableDeclaration",
                            "scope": 933,
                            "src": "2168:16:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 892,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2168:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 908,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 900,
                                      "name": "IRelayRecipient",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 640,
                                      "src": "2276:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IRelayRecipient_$640_$",
                                        "typeString": "type(contract IRelayRecipient)"
                                      }
                                    },
                                    "id": 901,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "isTrustedForwarder",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 622,
                                    "src": "2276:34:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_bool_$",
                                      "typeString": "function IRelayRecipient.isTrustedForwarder(address) view returns (bool)"
                                    }
                                  },
                                  "id": 902,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2276:43:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 903,
                                      "name": "relayRequest",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 887,
                                      "src": "2321:12:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                        "typeString": "struct GsnTypes.RelayRequest calldata"
                                      }
                                    },
                                    "id": 904,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "relayData",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1195,
                                    "src": "2321:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayData calldata"
                                    }
                                  },
                                  "id": 905,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "forwarder",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1186,
                                  "src": "2321:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 898,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2236:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "2236:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2236:131:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "expression": {
                                  "id": 894,
                                  "name": "relayRequest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "2188:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                  }
                                },
                                "id": 895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "request",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1193,
                                "src": "2188:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ForwardRequest_$205_calldata_ptr",
                                  "typeString": "struct IForwarder.ForwardRequest calldata"
                                }
                              },
                              "id": 896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "to",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 194,
                              "src": "2188:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "2188:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2188:189:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2153:224:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 910,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "2395:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "697354727573746564466f727761726465723a207265766572746564",
                              "id": 911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2404:30:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e",
                                "typeString": "literal_string \"isTrustedForwarder: reverted\""
                              },
                              "value": "isTrustedForwarder: reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e",
                                "typeString": "literal_string \"isTrustedForwarder: reverted\""
                              }
                            ],
                            "id": 909,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2387:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2387:48:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 913,
                        "nodeType": "ExpressionStatement",
                        "src": "2387:48:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 915,
                                  "name": "ret",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 893,
                                  "src": "2453:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2453:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "3332",
                                "id": 917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2467:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "2453:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "697354727573746564466f727761726465723a2062616420726573706f6e7365",
                              "id": 919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2471:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325",
                                "typeString": "literal_string \"isTrustedForwarder: bad response\""
                              },
                              "value": "isTrustedForwarder: bad response"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325",
                                "typeString": "literal_string \"isTrustedForwarder: bad response\""
                              }
                            ],
                            "id": 914,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2445:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2445:61:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 921,
                        "nodeType": "ExpressionStatement",
                        "src": "2445:61:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 925,
                                  "name": "ret",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 893,
                                  "src": "2535:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 927,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2541:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bool_$",
                                        "typeString": "type(bool)"
                                      },
                                      "typeName": {
                                        "id": 926,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2541:4:6",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "id": 928,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2540:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                ],
                                "expression": {
                                  "id": 923,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2524:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "src": "2524:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2524:23:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c696420666f7277617264657220666f7220726563697069656e74",
                              "id": 930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2549:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4",
                                "typeString": "literal_string \"invalid forwarder for recipient\""
                              },
                              "value": "invalid forwarder for recipient"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4",
                                "typeString": "literal_string \"invalid forwarder for recipient\""
                              }
                            ],
                            "id": 922,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2516:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2516:67:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 932,
                        "nodeType": "ExpressionStatement",
                        "src": "2516:67:6"
                      }
                    ]
                  },
                  "id": 934,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyForwarderTrusted",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 887,
                        "mutability": "mutable",
                        "name": "relayRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "2084:43:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest"
                        },
                        "typeName": {
                          "id": 886,
                          "name": "GsnTypes.RelayRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1196,
                          "src": "2084:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayRequest_$1196_storage_ptr",
                            "typeString": "struct GsnTypes.RelayRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2083:45:6"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2143:0:6"
                  },
                  "scope": 1171,
                  "src": "2052:538:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 977,
                    "nodeType": "Block",
                    "src": "2706:356:6",
                    "statements": [
                      {
                        "assignments": [
                          942
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 942,
                            "mutability": "mutable",
                            "name": "suffixData",
                            "nodeType": "VariableDeclaration",
                            "scope": 977,
                            "src": "2717:23:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 941,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2717:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 946,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 944,
                              "name": "relayRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "2757:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            ],
                            "id": 943,
                            "name": "splitRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 885,
                            "src": "2744:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_RelayRequest_$1196_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (struct GsnTypes.RelayRequest calldata) pure returns (bytes memory)"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2744:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2716:54:6"
                      },
                      {
                        "assignments": [
                          948
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 948,
                            "mutability": "mutable",
                            "name": "_domainSeparator",
                            "nodeType": "VariableDeclaration",
                            "scope": 977,
                            "src": "2780:24:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 947,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2780:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 954,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 950,
                                  "name": "relayRequest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 936,
                                  "src": "2823:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                  }
                                },
                                "id": 951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "relayData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1195,
                                "src": "2823:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayData calldata"
                                }
                              },
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "forwarder",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1186,
                              "src": "2823:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 949,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1097,
                            "src": "2807:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                              "typeString": "function (address) pure returns (bytes32)"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2807:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2780:76:6"
                      },
                      {
                        "assignments": [
                          956
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 956,
                            "mutability": "mutable",
                            "name": "forwarder",
                            "nodeType": "VariableDeclaration",
                            "scope": 977,
                            "src": "2866:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IForwarder_$273",
                              "typeString": "contract IForwarder"
                            },
                            "typeName": {
                              "id": 955,
                              "name": "IForwarder",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 273,
                              "src": "2866:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IForwarder_$273",
                                "typeString": "contract IForwarder"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 965,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 960,
                                      "name": "relayRequest",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 936,
                                      "src": "2908:12:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                        "typeString": "struct GsnTypes.RelayRequest calldata"
                                      }
                                    },
                                    "id": 961,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "relayData",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1195,
                                    "src": "2908:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayData calldata"
                                    }
                                  },
                                  "id": 962,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "forwarder",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1186,
                                  "src": "2908:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2900:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 958,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2900:8:6",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2900:41:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 957,
                            "name": "IForwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "2889:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IForwarder_$273_$",
                              "typeString": "type(contract IForwarder)"
                            }
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2889:53:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IForwarder_$273",
                            "typeString": "contract IForwarder"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2866:76:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 969,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 936,
                                "src": "2969:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "request",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1193,
                              "src": "2969:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$205_calldata_ptr",
                                "typeString": "struct IForwarder.ForwardRequest calldata"
                              }
                            },
                            {
                              "id": 971,
                              "name": "_domainSeparator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 948,
                              "src": "2991:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 972,
                              "name": "RELAY_REQUEST_TYPEHASH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 853,
                              "src": "3009:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 973,
                              "name": "suffixData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 942,
                              "src": "3033:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 974,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 938,
                              "src": "3045:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ForwardRequest_$205_calldata_ptr",
                                "typeString": "struct IForwarder.ForwardRequest calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 966,
                              "name": "forwarder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "2952:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IForwarder_$273",
                                "typeString": "contract IForwarder"
                              }
                            },
                            "id": 968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 238,
                            "src": "2952:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_struct$_ForwardRequest_$205_memory_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (struct IForwarder.ForwardRequest memory,bytes32,bytes32,bytes memory,bytes memory) view external"
                            }
                          },
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2952:103:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 976,
                        "nodeType": "ExpressionStatement",
                        "src": "2952:103:6"
                      }
                    ]
                  },
                  "id": 978,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifySignature",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 939,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 936,
                        "mutability": "mutable",
                        "name": "relayRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "2621:43:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest"
                        },
                        "typeName": {
                          "id": 935,
                          "name": "GsnTypes.RelayRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1196,
                          "src": "2621:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayRequest_$1196_storage_ptr",
                            "typeString": "struct GsnTypes.RelayRequest"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 938,
                        "mutability": "mutable",
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "2666:24:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 937,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2666:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2620:71:6"
                  },
                  "returnParameters": {
                    "id": 940,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2706:0:6"
                  },
                  "scope": 1171,
                  "src": "2596:466:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 994,
                    "nodeType": "Block",
                    "src": "3169:103:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 986,
                              "name": "relayRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 980,
                              "src": "3202:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            ],
                            "id": 985,
                            "name": "verifyForwarderTrusted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 934,
                            "src": "3179:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_RelayRequest_$1196_calldata_ptr_$returns$__$",
                              "typeString": "function (struct GsnTypes.RelayRequest calldata) view"
                            }
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3179:36:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 988,
                        "nodeType": "ExpressionStatement",
                        "src": "3179:36:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 990,
                              "name": "relayRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 980,
                              "src": "3241:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            },
                            {
                              "id": 991,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 982,
                              "src": "3255:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 989,
                            "name": "verifySignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "3225:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_RelayRequest_$1196_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (struct GsnTypes.RelayRequest calldata,bytes calldata) view"
                            }
                          },
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3225:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 993,
                        "nodeType": "ExpressionStatement",
                        "src": "3225:40:6"
                      }
                    ]
                  },
                  "id": 995,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verify",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 983,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 980,
                        "mutability": "mutable",
                        "name": "relayRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "3084:43:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "GsnTypes.RelayRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1196,
                          "src": "3084:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayRequest_$1196_storage_ptr",
                            "typeString": "struct GsnTypes.RelayRequest"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 982,
                        "mutability": "mutable",
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "3129:24:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 981,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3129:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3083:71:6"
                  },
                  "returnParameters": {
                    "id": 984,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3169:0:6"
                  },
                  "scope": 1171,
                  "src": "3068:204:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1065,
                    "nodeType": "Block",
                    "src": "3443:648:6",
                    "statements": [
                      {
                        "assignments": [
                          1009
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1009,
                            "mutability": "mutable",
                            "name": "suffixData",
                            "nodeType": "VariableDeclaration",
                            "scope": 1065,
                            "src": "3454:23:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1008,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3454:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1013,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1011,
                              "name": "relayRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "3494:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            ],
                            "id": 1010,
                            "name": "splitRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 885,
                            "src": "3481:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_RelayRequest_$1196_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (struct GsnTypes.RelayRequest calldata) pure returns (bytes memory)"
                            }
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3481:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3453:54:6"
                      },
                      {
                        "assignments": [
                          1015
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1015,
                            "mutability": "mutable",
                            "name": "_domainSeparator",
                            "nodeType": "VariableDeclaration",
                            "scope": 1065,
                            "src": "3517:24:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1014,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3517:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1021,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 1017,
                                  "name": "relayRequest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 997,
                                  "src": "3560:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                  }
                                },
                                "id": 1018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "relayData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1195,
                                "src": "3560:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayData calldata"
                                }
                              },
                              "id": 1019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "forwarder",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1186,
                              "src": "3560:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1016,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1097,
                            "src": "3544:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                              "typeString": "function (address) pure returns (bytes32)"
                            }
                          },
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3544:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3517:76:6"
                      },
                      {
                        "expression": {
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1022,
                                "name": "forwarderSuccess",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1002,
                                "src": "3666:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 1023,
                                "name": "ret",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1006,
                                "src": "3684:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 1024,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3665:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "id": 1031,
                                        "name": "IForwarder",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 273,
                                        "src": "3765:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IForwarder_$273_$",
                                          "typeString": "type(contract IForwarder)"
                                        }
                                      },
                                      "id": 1032,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "execute",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 256,
                                      "src": "3765:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_payable$_t_struct$_ForwardRequest_$205_calldata_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function IForwarder.execute(struct IForwarder.ForwardRequest calldata,bytes32,bytes32,bytes calldata,bytes calldata) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 1033,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "3765:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1034,
                                      "name": "relayRequest",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 997,
                                      "src": "3806:12:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                        "typeString": "struct GsnTypes.RelayRequest calldata"
                                      }
                                    },
                                    "id": 1035,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "request",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1193,
                                    "src": "3806:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ForwardRequest_$205_calldata_ptr",
                                      "typeString": "struct IForwarder.ForwardRequest calldata"
                                    }
                                  },
                                  {
                                    "id": 1036,
                                    "name": "_domainSeparator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1015,
                                    "src": "3828:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 1037,
                                    "name": "RELAY_REQUEST_TYPEHASH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 853,
                                    "src": "3846:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 1038,
                                    "name": "suffixData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1009,
                                    "src": "3870:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 1039,
                                    "name": "signature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 999,
                                    "src": "3882:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_ForwardRequest_$205_calldata_ptr",
                                      "typeString": "struct IForwarder.ForwardRequest calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1029,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3742:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1030,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "3742:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 1040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3742:159:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "expression": {
                                    "id": 1025,
                                    "name": "relayRequest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 997,
                                    "src": "3691:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayRequest calldata"
                                    }
                                  },
                                  "id": 1026,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "relayData",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1195,
                                  "src": "3691:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                    "typeString": "struct GsnTypes.RelayData calldata"
                                  }
                                },
                                "id": 1027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "forwarder",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1186,
                                "src": "3691:32:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "3691:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3691:211:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "3665:237:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1043,
                        "nodeType": "ExpressionStatement",
                        "src": "3665:237:6"
                      },
                      {
                        "condition": {
                          "id": 1044,
                          "name": "forwarderSuccess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1002,
                          "src": "3917:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1060,
                        "nodeType": "IfStatement",
                        "src": "3912:143:6",
                        "trueBody": {
                          "id": 1059,
                          "nodeType": "Block",
                          "src": "3936:119:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1045,
                                      "name": "callSuccess",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1004,
                                      "src": "3994:11:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 1046,
                                      "name": "ret",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1006,
                                      "src": "4007:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 1047,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "3993:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1050,
                                      "name": "ret",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1006,
                                      "src": "4025:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 1052,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4031:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          },
                                          "typeName": {
                                            "id": 1051,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4031:4:6",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        {
                                          "id": 1054,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4037:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                            "typeString": "type(bytes storage pointer)"
                                          },
                                          "typeName": {
                                            "id": 1053,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4037:5:6",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "id": 1055,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "4030:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_type$_t_bool_$_$_t_type$_t_bytes_storage_ptr_$_$",
                                        "typeString": "tuple(type(bool),type(bytes storage pointer))"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      },
                                      {
                                        "typeIdentifier": "t_tuple$_t_type$_t_bool_$_$_t_type$_t_bytes_storage_ptr_$_$",
                                        "typeString": "tuple(type(bool),type(bytes storage pointer))"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1048,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "4014:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 1049,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "decode",
                                    "nodeType": "MemberAccess",
                                    "src": "4014:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 1056,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4014:30:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "3993:51:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1058,
                              "nodeType": "ExpressionStatement",
                              "src": "3993:51:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1062,
                              "name": "ret",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1006,
                              "src": "4080:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1061,
                            "name": "truncateInPlace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "4064:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) pure"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4064:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1064,
                        "nodeType": "ExpressionStatement",
                        "src": "4064:20:6"
                      }
                    ]
                  },
                  "id": 1066,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1000,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 997,
                        "mutability": "mutable",
                        "name": "relayRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "3295:43:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest"
                        },
                        "typeName": {
                          "id": 996,
                          "name": "GsnTypes.RelayRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1196,
                          "src": "3295:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayRequest_$1196_storage_ptr",
                            "typeString": "struct GsnTypes.RelayRequest"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 999,
                        "mutability": "mutable",
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "3340:24:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 998,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3340:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3294:71:6"
                  },
                  "returnParameters": {
                    "id": 1007,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1002,
                        "mutability": "mutable",
                        "name": "forwarderSuccess",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "3384:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1001,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3384:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1004,
                        "mutability": "mutable",
                        "name": "callSuccess",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "3407:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3407:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1006,
                        "mutability": "mutable",
                        "name": "ret",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "3425:16:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1005,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3425:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3383:59:6"
                  },
                  "scope": 1171,
                  "src": "3278:813:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1078,
                    "nodeType": "Block",
                    "src": "4375:67:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1074,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1068,
                              "src": "4413:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1075,
                              "name": "MAX_RETURN_SIZE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 814,
                              "src": "4419:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1071,
                              "name": "MinLibBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1359,
                              "src": "4385:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MinLibBytes_$1359_$",
                                "typeString": "type(library MinLibBytes)"
                              }
                            },
                            "id": 1073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "truncateInPlace",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1261,
                            "src": "4385:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes memory,uint256) pure"
                            }
                          },
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4385:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1077,
                        "nodeType": "ExpressionStatement",
                        "src": "4385:50:6"
                      }
                    ]
                  },
                  "id": 1079,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "truncateInPlace",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1069,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1079,
                        "src": "4342:17:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4342:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4341:19:6"
                  },
                  "returnParameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4375:0:6"
                  },
                  "scope": 1171,
                  "src": "4317:125:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1096,
                    "nodeType": "Block",
                    "src": "4524:216:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "47534e2052656c61796564205472616e73616374696f6e",
                                  "id": 1088,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4586:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_9647bda542dcf6621898cb1d03b22adb04c620d77e0bc6e67edb695f5f57777e",
                                    "typeString": "literal_string \"GSN Relayed Transaction\""
                                  },
                                  "value": "GSN Relayed Transaction"
                                },
                                {
                                  "hexValue": "32",
                                  "id": 1089,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4635:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
                                    "typeString": "literal_string \"2\""
                                  },
                                  "value": "2"
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1090,
                                    "name": "getChainID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1104,
                                    "src": "4662:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                      "typeString": "function () pure returns (uint256)"
                                    }
                                  },
                                  "id": 1091,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4662:12:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1092,
                                  "name": "forwarder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1081,
                                  "src": "4708:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_9647bda542dcf6621898cb1d03b22adb04c620d77e0bc6e67edb695f5f57777e",
                                    "typeString": "literal_string \"GSN Relayed Transaction\""
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a5",
                                    "typeString": "literal_string \"2\""
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1087,
                                "name": "EIP712Domain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 862,
                                "src": "4552:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_EIP712Domain_$862_storage_ptr_$",
                                  "typeString": "type(struct GsnEip712Library.EIP712Domain storage pointer)"
                                }
                              },
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "name",
                                "version",
                                "chainId",
                                "verifyingContract"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "4552:180:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EIP712Domain_$862_memory_ptr",
                                "typeString": "struct GsnEip712Library.EIP712Domain memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_EIP712Domain_$862_memory_ptr",
                                "typeString": "struct GsnEip712Library.EIP712Domain memory"
                              }
                            ],
                            "id": 1086,
                            "name": "hashDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1137,
                            "src": "4541:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_EIP712Domain_$862_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (struct GsnEip712Library.EIP712Domain memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4541:192:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1085,
                        "id": 1095,
                        "nodeType": "Return",
                        "src": "4534:199:6"
                      }
                    ]
                  },
                  "id": 1097,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "domainSeparator",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1082,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1081,
                        "mutability": "mutable",
                        "name": "forwarder",
                        "nodeType": "VariableDeclaration",
                        "scope": 1097,
                        "src": "4473:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1080,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4473:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4472:19:6"
                  },
                  "returnParameters": {
                    "id": 1085,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1084,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1097,
                        "src": "4515:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1083,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4515:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4514:9:6"
                  },
                  "scope": 1171,
                  "src": "4448:292:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1103,
                    "nodeType": "Block",
                    "src": "4803:113:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4871:39:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4885:15:6",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "chainid",
                                  "nodeType": "YulIdentifier",
                                  "src": "4891:7:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4891:9:6"
                              },
                              "variableNames": [
                                {
                                  "name": "id",
                                  "nodeType": "YulIdentifier",
                                  "src": "4885:2:6"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1100,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4885:2:6",
                            "valueSize": 1
                          }
                        ],
                        "id": 1102,
                        "nodeType": "InlineAssembly",
                        "src": "4862:48:6"
                      }
                    ]
                  },
                  "id": 1104,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getChainID",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1098,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4765:2:6"
                  },
                  "returnParameters": {
                    "id": 1101,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1100,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "4791:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1099,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4791:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4790:12:6"
                  },
                  "scope": 1171,
                  "src": "4746:170:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1136,
                    "nodeType": "Block",
                    "src": "4999:244:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1114,
                                  "name": "EIP712DOMAIN_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 867,
                                  "src": "5054:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 1118,
                                            "name": "req",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1106,
                                            "src": "5109:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_EIP712Domain_$862_memory_ptr",
                                              "typeString": "struct GsnEip712Library.EIP712Domain memory"
                                            }
                                          },
                                          "id": 1119,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "name",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 855,
                                          "src": "5109:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1117,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5103:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 1116,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5103:5:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1120,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5103:15:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1115,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "5093:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1121,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5093:26:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 1125,
                                            "name": "req",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1106,
                                            "src": "5153:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_EIP712Domain_$862_memory_ptr",
                                              "typeString": "struct GsnEip712Library.EIP712Domain memory"
                                            }
                                          },
                                          "id": 1126,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "version",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 857,
                                          "src": "5153:11:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1124,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5147:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 1123,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5147:5:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1127,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5147:18:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1122,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "5137:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5137:29:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1129,
                                    "name": "req",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1106,
                                    "src": "5184:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_EIP712Domain_$862_memory_ptr",
                                      "typeString": "struct GsnEip712Library.EIP712Domain memory"
                                    }
                                  },
                                  "id": 1130,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "chainId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 859,
                                  "src": "5184:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1131,
                                    "name": "req",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1106,
                                    "src": "5213:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_EIP712Domain_$862_memory_ptr",
                                      "typeString": "struct GsnEip712Library.EIP712Domain memory"
                                    }
                                  },
                                  "id": 1132,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyingContract",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 861,
                                  "src": "5213:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1112,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5026:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "5026:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5026:209:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1111,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5016:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5016:220:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1110,
                        "id": 1135,
                        "nodeType": "Return",
                        "src": "5009:227:6"
                      }
                    ]
                  },
                  "id": 1137,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hashDomain",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "req",
                        "nodeType": "VariableDeclaration",
                        "scope": 1137,
                        "src": "4942:23:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EIP712Domain_$862_memory_ptr",
                          "typeString": "struct GsnEip712Library.EIP712Domain"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "EIP712Domain",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 862,
                          "src": "4942:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EIP712Domain_$862_storage_ptr",
                            "typeString": "struct GsnEip712Library.EIP712Domain"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4941:25:6"
                  },
                  "returnParameters": {
                    "id": 1110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1109,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1137,
                        "src": "4990:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1108,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4990:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4989:9:6"
                  },
                  "scope": 1171,
                  "src": "4922:321:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1169,
                    "nodeType": "Block",
                    "src": "5337:363:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1147,
                                  "name": "RELAYDATA_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 848,
                                  "src": "5392:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1148,
                                    "name": "req",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1139,
                                    "src": "5428:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayData calldata"
                                    }
                                  },
                                  "id": 1149,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "gasPrice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1176,
                                  "src": "5428:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1150,
                                    "name": "req",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1139,
                                    "src": "5458:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayData calldata"
                                    }
                                  },
                                  "id": 1151,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pctRelayFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1178,
                                  "src": "5458:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1152,
                                    "name": "req",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1139,
                                    "src": "5491:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayData calldata"
                                    }
                                  },
                                  "id": 1153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "baseRelayFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1180,
                                  "src": "5491:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1154,
                                    "name": "req",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1139,
                                    "src": "5525:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayData calldata"
                                    }
                                  },
                                  "id": 1155,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "relayWorker",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1182,
                                  "src": "5525:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1156,
                                    "name": "req",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1139,
                                    "src": "5558:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayData calldata"
                                    }
                                  },
                                  "id": 1157,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "paymaster",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1184,
                                  "src": "5558:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1158,
                                    "name": "req",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1139,
                                    "src": "5589:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayData calldata"
                                    }
                                  },
                                  "id": 1159,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "forwarder",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1186,
                                  "src": "5589:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1161,
                                        "name": "req",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1139,
                                        "src": "5630:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                          "typeString": "struct GsnTypes.RelayData calldata"
                                        }
                                      },
                                      "id": 1162,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "paymasterData",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1188,
                                      "src": "5630:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes calldata"
                                      }
                                    ],
                                    "id": 1160,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "5620:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5620:28:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1164,
                                    "name": "req",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1139,
                                    "src": "5666:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayData calldata"
                                    }
                                  },
                                  "id": 1165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "clientId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1190,
                                  "src": "5666:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1145,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5364:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "5364:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5364:328:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1144,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5354:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5354:339:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1143,
                        "id": 1168,
                        "nodeType": "Return",
                        "src": "5347:346:6"
                      }
                    ]
                  },
                  "id": 1170,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hashRelayData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1139,
                        "mutability": "mutable",
                        "name": "req",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "5272:31:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayData"
                        },
                        "typeName": {
                          "id": 1138,
                          "name": "GsnTypes.RelayData",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1191,
                          "src": "5272:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayData_$1191_storage_ptr",
                            "typeString": "struct GsnTypes.RelayData"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5271:33:6"
                  },
                  "returnParameters": {
                    "id": 1143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1142,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "5328:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5328:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5327:9:6"
                  },
                  "scope": 1171,
                  "src": "5249:451:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1172,
              "src": "305:5397:6"
            }
          ],
          "src": "41:5662:6"
        },
        "id": 6
      },
      "@opengsn/contracts/src/utils/GsnTypes.sol": {
        "ast": {
          "absolutePath": "@opengsn/contracts/src/utils/GsnTypes.sol",
          "exportedSymbols": {
            "GsnTypes": [
              1197
            ],
            "IForwarder": [
              273
            ]
          },
          "id": 1198,
          "license": "GPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1173,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "41:24:7"
            },
            {
              "absolutePath": "@opengsn/contracts/src/forwarder/IForwarder.sol",
              "file": "../forwarder/IForwarder.sol",
              "id": 1174,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 274,
              "src": "67:37:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1197,
              "linearizedBaseContracts": [
                1197
              ],
              "name": "GsnTypes",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "GsnTypes.RelayData",
                  "id": 1191,
                  "members": [
                    {
                      "constant": false,
                      "id": 1176,
                      "mutability": "mutable",
                      "name": "gasPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "296:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1175,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "296:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1178,
                      "mutability": "mutable",
                      "name": "pctRelayFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "322:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "322:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1180,
                      "mutability": "mutable",
                      "name": "baseRelayFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "351:20:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1179,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "351:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1182,
                      "mutability": "mutable",
                      "name": "relayWorker",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "381:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1181,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "381:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1184,
                      "mutability": "mutable",
                      "name": "paymaster",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "410:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1183,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "410:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1186,
                      "mutability": "mutable",
                      "name": "forwarder",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "437:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1185,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "437:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1188,
                      "mutability": "mutable",
                      "name": "paymasterData",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "464:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1187,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "464:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1190,
                      "mutability": "mutable",
                      "name": "clientId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "493:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1189,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "493:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RelayData",
                  "nodeType": "StructDefinition",
                  "scope": 1197,
                  "src": "269:247:7",
                  "visibility": "public"
                },
                {
                  "canonicalName": "GsnTypes.RelayRequest",
                  "id": 1196,
                  "members": [
                    {
                      "constant": false,
                      "id": 1193,
                      "mutability": "mutable",
                      "name": "request",
                      "nodeType": "VariableDeclaration",
                      "scope": 1196,
                      "src": "643:33:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ForwardRequest_$205_storage_ptr",
                        "typeString": "struct IForwarder.ForwardRequest"
                      },
                      "typeName": {
                        "id": 1192,
                        "name": "IForwarder.ForwardRequest",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 205,
                        "src": "643:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ForwardRequest_$205_storage_ptr",
                          "typeString": "struct IForwarder.ForwardRequest"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1195,
                      "mutability": "mutable",
                      "name": "relayData",
                      "nodeType": "VariableDeclaration",
                      "scope": 1196,
                      "src": "686:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RelayData_$1191_storage_ptr",
                        "typeString": "struct GsnTypes.RelayData"
                      },
                      "typeName": {
                        "id": 1194,
                        "name": "RelayData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1191,
                        "src": "686:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayData_$1191_storage_ptr",
                          "typeString": "struct GsnTypes.RelayData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RelayRequest",
                  "nodeType": "StructDefinition",
                  "scope": 1197,
                  "src": "613:99:7",
                  "visibility": "public"
                }
              ],
              "scope": 1198,
              "src": "106:608:7"
            }
          ],
          "src": "41:674:7"
        },
        "id": 7
      },
      "@opengsn/contracts/src/utils/GsnUtils.sol": {
        "ast": {
          "absolutePath": "@opengsn/contracts/src/utils/GsnUtils.sol",
          "exportedSymbols": {
            "GsnUtils": [
              1244
            ],
            "MinLibBytes": [
              1359
            ]
          },
          "id": 1245,
          "license": "GPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1199,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "82:24:8"
            },
            {
              "absolutePath": "@opengsn/contracts/src/utils/MinLibBytes.sol",
              "file": "../utils/MinLibBytes.sol",
              "id": 1200,
              "nodeType": "ImportDirective",
              "scope": 1245,
              "sourceUnit": 1360,
              "src": "108:34:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 1244,
              "linearizedBaseContracts": [
                1244
              ],
              "name": "GsnUtils",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1214,
                    "nodeType": "Block",
                    "src": "312:58:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1210,
                              "name": "msgData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "352:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "361:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 1208,
                              "name": "MinLibBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1359,
                              "src": "329:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MinLibBytes_$1359_$",
                                "typeString": "type(library MinLibBytes)"
                              }
                            },
                            "id": 1209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "readBytes4",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1358,
                            "src": "329:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes4_$",
                              "typeString": "function (bytes memory,uint256) pure returns (bytes4)"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "329:34:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 1207,
                        "id": 1213,
                        "nodeType": "Return",
                        "src": "322:41:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1201,
                    "nodeType": "StructuredDocumentation",
                    "src": "168:64:8",
                    "text": " extract method sig from encoded function call"
                  },
                  "id": 1215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMethodSig",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1203,
                        "mutability": "mutable",
                        "name": "msgData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1215,
                        "src": "259:20:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1202,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "259:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "258:22:8"
                  },
                  "returnParameters": {
                    "id": 1207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1206,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1215,
                        "src": "304:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1205,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "304:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "303:8:8"
                  },
                  "scope": 1244,
                  "src": "237:133:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1235,
                    "nodeType": "Block",
                    "src": "729:72:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1227,
                              "name": "msgData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1218,
                              "src": "770:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "34",
                                "id": 1228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "779:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1229,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1220,
                                  "src": "783:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 1230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "791:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "783:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "779:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1225,
                              "name": "MinLibBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1359,
                              "src": "746:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MinLibBytes_$1359_$",
                                "typeString": "type(library MinLibBytes)"
                              }
                            },
                            "id": 1226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "readUint256",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1335,
                            "src": "746:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "746:48:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1224,
                        "id": 1234,
                        "nodeType": "Return",
                        "src": "739:55:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1216,
                    "nodeType": "StructuredDocumentation",
                    "src": "376:267:8",
                    "text": " extract parameter from encoded-function block.\n see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\n the return value should be casted to the right type (uintXXX/bytesXXX/address/bool/enum)"
                  },
                  "id": 1236,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getParam",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1218,
                        "mutability": "mutable",
                        "name": "msgData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1236,
                        "src": "666:20:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "666:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1220,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1236,
                        "src": "688:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "688:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "665:34:8"
                  },
                  "returnParameters": {
                    "id": 1224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1223,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1236,
                        "src": "723:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1222,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "723:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "722:6:8"
                  },
                  "scope": 1244,
                  "src": "648:153:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1242,
                    "nodeType": "Block",
                    "src": "913:82:8",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "932:57:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "957:4:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "962:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "953:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "953:12:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "973:4:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "967:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "967:11:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "946:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "946:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "946:33:8"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1238,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "957:4:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1238,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "973:4:8",
                            "valueSize": 1
                          }
                        ],
                        "id": 1241,
                        "nodeType": "InlineAssembly",
                        "src": "923:66:8"
                      }
                    ]
                  },
                  "id": 1243,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertWithData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1238,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1243,
                        "src": "880:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1237,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "880:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "879:19:8"
                  },
                  "returnParameters": {
                    "id": 1240,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "913:0:8"
                  },
                  "scope": 1244,
                  "src": "856:139:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1245,
              "src": "144:854:8"
            }
          ],
          "src": "82:917:8"
        },
        "id": 8
      },
      "@opengsn/contracts/src/utils/MinLibBytes.sol": {
        "ast": {
          "absolutePath": "@opengsn/contracts/src/utils/MinLibBytes.sol",
          "exportedSymbols": {
            "MinLibBytes": [
              1359
            ]
          },
          "id": 1360,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1246,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "156:24:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 1359,
              "linearizedBaseContracts": [
                1359
              ],
              "name": "MinLibBytes",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1260,
                    "nodeType": "Block",
                    "src": "503:99:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1253,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1248,
                              "src": "517:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "517:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1255,
                            "name": "maxlen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "531:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "517:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1259,
                        "nodeType": "IfStatement",
                        "src": "513:83:9",
                        "trueBody": {
                          "id": 1258,
                          "nodeType": "Block",
                          "src": "539:57:9",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "562:24:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "571:4:9"
                                        },
                                        {
                                          "name": "maxlen",
                                          "nodeType": "YulIdentifier",
                                          "src": "577:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "564:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "564:20:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "564:20:9"
                                  }
                                ]
                              },
                              "evmVersion": "istanbul",
                              "externalReferences": [
                                {
                                  "declaration": 1248,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "571:4:9",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1250,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "577:6:9",
                                  "valueSize": 1
                                }
                              ],
                              "id": 1257,
                              "nodeType": "InlineAssembly",
                              "src": "553:33:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "truncateInPlace",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1248,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "454:17:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1247,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "454:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1250,
                        "mutability": "mutable",
                        "name": "maxlen",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "473:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "473:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "453:35:9"
                  },
                  "returnParameters": {
                    "id": 1252,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "503:0:9"
                  },
                  "scope": 1359,
                  "src": "429:173:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1288,
                    "nodeType": "Block",
                    "src": "964:673:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1272,
                                  "name": "b",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1264,
                                  "src": "983:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "983:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1274,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1266,
                                  "src": "995:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "3230",
                                  "id": 1275,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1003:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_20_by_1",
                                    "typeString": "int_const 20"
                                  },
                                  "value": "20"
                                },
                                "src": "995:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "983:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "72656164416464726573733a206461746120746f6f2073686f7274",
                              "id": 1278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1007:29:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ff21d28ab53e736b05938ba9d5748dcb979d78d4c19815de87213f62c5dfe9a",
                                "typeString": "literal_string \"readAddress: data too short\""
                              },
                              "value": "readAddress: data too short"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ff21d28ab53e736b05938ba9d5748dcb979d78d4c19815de87213f62c5dfe9a",
                                "typeString": "literal_string \"readAddress: data too short\""
                              }
                            ],
                            "id": 1271,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "974:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "974:63:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1280,
                        "nodeType": "ExpressionStatement",
                        "src": "974:63:9"
                      },
                      {
                        "expression": {
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1281,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1266,
                            "src": "1275:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "3230",
                            "id": 1282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1284:2:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "1275:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1284,
                        "nodeType": "ExpressionStatement",
                        "src": "1275:11:9"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1348:260:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1519:79:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "b",
                                            "nodeType": "YulIdentifier",
                                            "src": "1543:1:9"
                                          },
                                          {
                                            "name": "index",
                                            "nodeType": "YulIdentifier",
                                            "src": "1546:5:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1539:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1539:13:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1533:5:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1533:20:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1555:42:9",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1529:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1529:69:9"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "1519:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1264,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1543:1:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1266,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1546:5:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1269,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1519:6:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 1285,
                        "nodeType": "InlineAssembly",
                        "src": "1339:269:9"
                      },
                      {
                        "expression": {
                          "id": 1286,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1269,
                          "src": "1624:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1270,
                        "id": 1287,
                        "nodeType": "Return",
                        "src": "1617:13:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1262,
                    "nodeType": "StructuredDocumentation",
                    "src": "608:210:9",
                    "text": "@dev Reads an address from a position in a byte array.\n @param b Byte array containing an address.\n @param index Index in byte array of address.\n @return result address from byte array."
                  },
                  "id": 1289,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "readAddress",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1264,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1289,
                        "src": "853:14:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1263,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "853:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1266,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1289,
                        "src": "877:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "877:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "843:53:9"
                  },
                  "returnParameters": {
                    "id": 1270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1269,
                        "mutability": "mutable",
                        "name": "result",
                        "nodeType": "VariableDeclaration",
                        "scope": 1289,
                        "src": "944:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "944:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "943:16:9"
                  },
                  "scope": 1359,
                  "src": "823:814:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1311,
                    "nodeType": "Block",
                    "src": "1784:230:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1299,
                                  "name": "b",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1291,
                                  "src": "1802:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1802:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1301,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1293,
                                  "src": "1814:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 1302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1822:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "1814:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1802:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "72656164427974657333323a206461746120746f6f2073686f7274",
                              "id": 1305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1826:29:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_767dc5ed40d0b25ea26edf167fbb901f3024eaabad14c9340870a684e6339d57",
                                "typeString": "literal_string \"readBytes32: data too short\""
                              },
                              "value": "readBytes32: data too short"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_767dc5ed40d0b25ea26edf167fbb901f3024eaabad14c9340870a684e6339d57",
                                "typeString": "literal_string \"readBytes32: data too short\""
                              }
                            ],
                            "id": 1298,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1794:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1794:63:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1307,
                        "nodeType": "ExpressionStatement",
                        "src": "1794:63:9"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1923:62:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1937:38:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1957:1:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "index",
                                            "nodeType": "YulIdentifier",
                                            "src": "1964:5:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1970:2:9",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1960:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1960:13:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1953:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1953:21:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1947:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1947:28:9"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "1937:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1291,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1957:1:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1293,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1964:5:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1296,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1937:6:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 1308,
                        "nodeType": "InlineAssembly",
                        "src": "1914:71:9"
                      },
                      {
                        "expression": {
                          "id": 1309,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1296,
                          "src": "2001:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1297,
                        "id": 1310,
                        "nodeType": "Return",
                        "src": "1994:13:9"
                      }
                    ]
                  },
                  "id": 1312,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "readBytes32",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1294,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1291,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1312,
                        "src": "1673:14:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1290,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1673:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1293,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1312,
                        "src": "1697:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1292,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1697:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:53:9"
                  },
                  "returnParameters": {
                    "id": 1297,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1296,
                        "mutability": "mutable",
                        "name": "result",
                        "nodeType": "VariableDeclaration",
                        "scope": 1312,
                        "src": "1764:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1295,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1764:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1763:16:9"
                  },
                  "scope": 1359,
                  "src": "1643:371:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1334,
                    "nodeType": "Block",
                    "src": "2398:79:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1322,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "2408:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1326,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1315,
                                    "src": "2437:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 1327,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1317,
                                    "src": "2440:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1325,
                                  "name": "readBytes32",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1312,
                                  "src": "2425:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory,uint256) pure returns (bytes32)"
                                  }
                                },
                                "id": 1328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2425:21:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2417:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1323,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2417:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2417:30:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2408:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1331,
                        "nodeType": "ExpressionStatement",
                        "src": "2408:39:9"
                      },
                      {
                        "expression": {
                          "id": 1332,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1320,
                          "src": "2464:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1321,
                        "id": 1333,
                        "nodeType": "Return",
                        "src": "2457:13:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1313,
                    "nodeType": "StructuredDocumentation",
                    "src": "2020:232:9",
                    "text": "@dev Reads a uint256 value from a position in a byte array.\n @param b Byte array containing a uint256 value.\n @param index Index in byte array of uint256 value.\n @return result uint256 value from byte array."
                  },
                  "id": 1335,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "readUint256",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1318,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1315,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1335,
                        "src": "2287:14:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1314,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2287:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1317,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1335,
                        "src": "2311:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1316,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2311:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2277:53:9"
                  },
                  "returnParameters": {
                    "id": 1321,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1320,
                        "mutability": "mutable",
                        "name": "result",
                        "nodeType": "VariableDeclaration",
                        "scope": 1335,
                        "src": "2378:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1319,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2378:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2377:16:9"
                  },
                  "scope": 1359,
                  "src": "2257:220:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1357,
                    "nodeType": "Block",
                    "src": "2622:432:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1345,
                                  "name": "b",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1337,
                                  "src": "2640:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2640:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1347,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1339,
                                  "src": "2652:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "34",
                                  "id": 1348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2660:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "2652:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2640:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "726561644279746573343a206461746120746f6f2073686f7274",
                              "id": 1351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2663:28:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e3fe8b8d7a4d7297198f00bec48c1f664c9a2ab21f2fa0d4a68337ee48c21898",
                                "typeString": "literal_string \"readBytes4: data too short\""
                              },
                              "value": "readBytes4: data too short"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e3fe8b8d7a4d7297198f00bec48c1f664c9a2ab21f2fa0d4a68337ee48c21898",
                                "typeString": "literal_string \"readBytes4: data too short\""
                              }
                            ],
                            "id": 1344,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2632:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2632:60:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1353,
                        "nodeType": "ExpressionStatement",
                        "src": "2632:60:9"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2757:268:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2771:38:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "b",
                                        "nodeType": "YulIdentifier",
                                        "src": "2791:1:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "index",
                                            "nodeType": "YulIdentifier",
                                            "src": "2798:5:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2804:2:9",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2794:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2794:13:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2787:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2787:21:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2781:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2781:28:9"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "2771:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2926:89:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "result",
                                    "nodeType": "YulIdentifier",
                                    "src": "2940:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2948:66:9",
                                    "type": "",
                                    "value": "0xFFFFFFFF00000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2936:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2936:79:9"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "2926:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1337,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2791:1:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1339,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2798:5:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1342,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2771:6:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1342,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2926:6:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1342,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2940:6:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 1354,
                        "nodeType": "InlineAssembly",
                        "src": "2748:277:9"
                      },
                      {
                        "expression": {
                          "id": 1355,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1342,
                          "src": "3041:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 1343,
                        "id": 1356,
                        "nodeType": "Return",
                        "src": "3034:13:9"
                      }
                    ]
                  },
                  "id": 1358,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "readBytes4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1337,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1358,
                        "src": "2512:14:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1336,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2512:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1339,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1358,
                        "src": "2536:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1338,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2536:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2502:53:9"
                  },
                  "returnParameters": {
                    "id": 1343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1342,
                        "mutability": "mutable",
                        "name": "result",
                        "nodeType": "VariableDeclaration",
                        "scope": 1358,
                        "src": "2603:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1341,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2603:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2602:15:9"
                  },
                  "scope": 1359,
                  "src": "2483:571:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1360,
              "src": "182:2874:9"
            }
          ],
          "src": "156:2901:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1961
            ],
            "Ownable": [
              1469
            ]
          },
          "id": 1470,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1361,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1362,
              "nodeType": "ImportDirective",
              "scope": 1470,
              "sourceUnit": 1962,
              "src": "66:30:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1364,
                    "name": "Context",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1961,
                    "src": "621:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$1961",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 1365,
                  "nodeType": "InheritanceSpecifier",
                  "src": "621:7:10"
                }
              ],
              "contractDependencies": [
                1961
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1363,
                "nodeType": "StructuredDocumentation",
                "src": "97:494:10",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 1469,
              "linearizedBaseContracts": [
                1469,
                1961
              ],
              "name": "Ownable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1367,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1469,
                  "src": "635:22:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 1373,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1369,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1373,
                        "src": "691:29:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1368,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1371,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1373,
                        "src": "722:24:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1370,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "722:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "690:57:10"
                  },
                  "src": "664:84:10"
                },
                {
                  "body": {
                    "id": 1394,
                    "nodeType": "Block",
                    "src": "874:135:10",
                    "statements": [
                      {
                        "assignments": [
                          1378
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1378,
                            "mutability": "mutable",
                            "name": "msgSender",
                            "nodeType": "VariableDeclaration",
                            "scope": 1394,
                            "src": "884:17:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1377,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "884:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1381,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1379,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1949,
                            "src": "904:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "904:12:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "884:32:10"
                      },
                      {
                        "expression": {
                          "id": 1384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1382,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1367,
                            "src": "926:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1383,
                            "name": "msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1378,
                            "src": "935:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "926:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1385,
                        "nodeType": "ExpressionStatement",
                        "src": "926:18:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "988:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "980:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1387,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "980:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "980:10:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1391,
                              "name": "msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1378,
                              "src": "992:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1386,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "959:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "959:43:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1393,
                        "nodeType": "EmitStatement",
                        "src": "954:48:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1374,
                    "nodeType": "StructuredDocumentation",
                    "src": "754:91:10",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 1395,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1375,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "862:2:10"
                  },
                  "returnParameters": {
                    "id": 1376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "874:0:10"
                  },
                  "scope": 1469,
                  "src": "850:159:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1403,
                    "nodeType": "Block",
                    "src": "1140:30:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1401,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "1157:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1400,
                        "id": 1402,
                        "nodeType": "Return",
                        "src": "1150:13:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1396,
                    "nodeType": "StructuredDocumentation",
                    "src": "1015:65:10",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 1404,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1397,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1099:2:10"
                  },
                  "returnParameters": {
                    "id": 1400,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1399,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1404,
                        "src": "1131:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1398,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1131:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1130:9:10"
                  },
                  "scope": 1469,
                  "src": "1085:85:10",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1417,
                    "nodeType": "Block",
                    "src": "1279:96:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1408,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1404,
                                  "src": "1297:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 1409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1297:7:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1410,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1949,
                                  "src": "1308:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 1411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1308:12:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1297:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 1413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1322:34:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 1407,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1289:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1289:68:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1415,
                        "nodeType": "ExpressionStatement",
                        "src": "1289:68:10"
                      },
                      {
                        "id": 1416,
                        "nodeType": "PlaceholderStatement",
                        "src": "1367:1:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1405,
                    "nodeType": "StructuredDocumentation",
                    "src": "1176:77:10",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 1418,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1406,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1276:2:10"
                  },
                  "src": "1258:117:10",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1439,
                    "nodeType": "Block",
                    "src": "1771:91:10",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1425,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "1807:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1428,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1823:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1815:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1426,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1815:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1815:10:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1424,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "1786:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1786:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1431,
                        "nodeType": "EmitStatement",
                        "src": "1781:45:10"
                      },
                      {
                        "expression": {
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1432,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1367,
                            "src": "1836:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1853:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1845:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1433,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1845:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1845:10:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1836:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1438,
                        "nodeType": "ExpressionStatement",
                        "src": "1836:19:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1419,
                    "nodeType": "StructuredDocumentation",
                    "src": "1381:331:10",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 1440,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1422,
                      "modifierName": {
                        "id": 1421,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1418,
                        "src": "1761:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1761:9:10"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1420,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1743:2:10"
                  },
                  "returnParameters": {
                    "id": 1423,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1771:0:10"
                  },
                  "scope": 1469,
                  "src": "1717:145:10",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1467,
                    "nodeType": "Block",
                    "src": "2081:170:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1449,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1443,
                                "src": "2099:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1452,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2119:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2111:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1450,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2111:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2111:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2099:22:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 1455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2123:40:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 1448,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2091:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2091:73:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1457,
                        "nodeType": "ExpressionStatement",
                        "src": "2091:73:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1459,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "2200:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1460,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1443,
                              "src": "2208:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1458,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "2179:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2179:38:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1462,
                        "nodeType": "EmitStatement",
                        "src": "2174:43:10"
                      },
                      {
                        "expression": {
                          "id": 1465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1463,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1367,
                            "src": "2227:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1464,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1443,
                            "src": "2236:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2227:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1466,
                        "nodeType": "ExpressionStatement",
                        "src": "2227:17:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1441,
                    "nodeType": "StructuredDocumentation",
                    "src": "1868:138:10",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 1468,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1446,
                      "modifierName": {
                        "id": 1445,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1418,
                        "src": "2071:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2071:9:10"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1443,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1468,
                        "src": "2038:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1442,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2038:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2037:18:10"
                  },
                  "returnParameters": {
                    "id": 1447,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2081:0:10"
                  },
                  "scope": 1469,
                  "src": "2011:240:10",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1470,
              "src": "592:1661:10"
            }
          ],
          "src": "33:2221:10"
        },
        "id": 10
      },
      "@openzeppelin/contracts/drafts/IERC20Permit.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/drafts/IERC20Permit.sol",
          "exportedSymbols": {
            "IERC20Permit": [
              1505
            ]
          },
          "id": 1506,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1471,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:11"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1472,
                "nodeType": "StructuredDocumentation",
                "src": "66:482:11",
                "text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
              },
              "fullyImplemented": false,
              "id": 1505,
              "linearizedBaseContracts": [
                1505
              ],
              "name": "IERC20Permit",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1473,
                    "nodeType": "StructuredDocumentation",
                    "src": "578:788:11",
                    "text": " @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
                  },
                  "functionSelector": "d505accf",
                  "id": 1490,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1488,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1475,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "1387:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1474,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1387:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1477,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "1402:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1476,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1402:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1479,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "1419:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1419:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1481,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "1434:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1434:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1483,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "1452:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1482,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1452:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1485,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "1461:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1484,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1461:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1487,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 1490,
                        "src": "1472:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1486,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1472:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1386:96:11"
                  },
                  "returnParameters": {
                    "id": 1489,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1491:0:11"
                  },
                  "scope": 1505,
                  "src": "1371:121:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1491,
                    "nodeType": "StructuredDocumentation",
                    "src": "1498:294:11",
                    "text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
                  },
                  "functionSelector": "7ecebe00",
                  "id": 1498,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1493,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1498,
                        "src": "1813:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1492,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1813:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1812:15:11"
                  },
                  "returnParameters": {
                    "id": 1497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1496,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1498,
                        "src": "1851:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1495,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1850:9:11"
                  },
                  "scope": 1505,
                  "src": "1797:63:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1499,
                    "nodeType": "StructuredDocumentation",
                    "src": "1866:128:11",
                    "text": " @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}."
                  },
                  "functionSelector": "3644e515",
                  "id": 1504,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2077:2:11"
                  },
                  "returnParameters": {
                    "id": 1503,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1502,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1504,
                        "src": "2103:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1501,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2103:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2102:9:11"
                  },
                  "scope": 1505,
                  "src": "2052:60:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1506,
              "src": "549:1565:11"
            }
          ],
          "src": "33:2082:11"
        },
        "id": 11
      },
      "@openzeppelin/contracts/math/SafeMath.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
          "exportedSymbols": {
            "SafeMath": [
              1860
            ]
          },
          "id": 1861,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1507,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1508,
                "nodeType": "StructuredDocumentation",
                "src": "66:563:12",
                "text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
              },
              "fullyImplemented": true,
              "id": 1860,
              "linearizedBaseContracts": [
                1860
              ],
              "name": "SafeMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1538,
                    "nodeType": "Block",
                    "src": "865:98:12",
                    "statements": [
                      {
                        "assignments": [
                          1521
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1521,
                            "mutability": "mutable",
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 1538,
                            "src": "875:9:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1520,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "875:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1525,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1522,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1511,
                            "src": "887:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1523,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1513,
                            "src": "891:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "887:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "875:17:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1526,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "906:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1527,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1511,
                            "src": "910:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "906:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1533,
                        "nodeType": "IfStatement",
                        "src": "902:28:12",
                        "trueBody": {
                          "expression": {
                            "components": [
                              {
                                "hexValue": "66616c7365",
                                "id": 1529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "921:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "30",
                                "id": 1530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "928:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 1531,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "920:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                              "typeString": "tuple(bool,int_const 0)"
                            }
                          },
                          "functionReturnParameters": 1519,
                          "id": 1532,
                          "nodeType": "Return",
                          "src": "913:17:12"
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 1534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "948:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "id": 1535,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1521,
                              "src": "954:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1536,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "947:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 1519,
                        "id": 1537,
                        "nodeType": "Return",
                        "src": "940:16:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1509,
                    "nodeType": "StructuredDocumentation",
                    "src": "653:131:12",
                    "text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 1539,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryAdd",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1511,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1539,
                        "src": "805:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1510,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "805:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1513,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1539,
                        "src": "816:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1512,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "816:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "804:22:12"
                  },
                  "returnParameters": {
                    "id": 1519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1516,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1539,
                        "src": "850:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1515,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "850:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1518,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1539,
                        "src": "856:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1517,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "856:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "849:15:12"
                  },
                  "scope": 1860,
                  "src": "789:174:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1565,
                    "nodeType": "Block",
                    "src": "1185:75:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1551,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1544,
                            "src": "1199:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1552,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1542,
                            "src": "1203:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1199:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1558,
                        "nodeType": "IfStatement",
                        "src": "1195:28:12",
                        "trueBody": {
                          "expression": {
                            "components": [
                              {
                                "hexValue": "66616c7365",
                                "id": 1554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1214:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "30",
                                "id": 1555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1221:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 1556,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1213:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                              "typeString": "tuple(bool,int_const 0)"
                            }
                          },
                          "functionReturnParameters": 1550,
                          "id": 1557,
                          "nodeType": "Return",
                          "src": "1206:17:12"
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 1559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1241:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1560,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1542,
                                "src": "1247:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1561,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1544,
                                "src": "1251:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1247:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1563,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1240:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 1550,
                        "id": 1564,
                        "nodeType": "Return",
                        "src": "1233:20:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1540,
                    "nodeType": "StructuredDocumentation",
                    "src": "969:135:12",
                    "text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 1566,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1542,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1566,
                        "src": "1125:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1541,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1125:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1544,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1566,
                        "src": "1136:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1543,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1136:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1124:22:12"
                  },
                  "returnParameters": {
                    "id": 1550,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1547,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1566,
                        "src": "1170:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1546,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1170:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1549,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1566,
                        "src": "1176:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1548,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1176:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1169:15:12"
                  },
                  "scope": 1860,
                  "src": "1109:151:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1606,
                    "nodeType": "Block",
                    "src": "1484:359:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1578,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1569,
                            "src": "1716:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1721:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1716:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1585,
                        "nodeType": "IfStatement",
                        "src": "1712:28:12",
                        "trueBody": {
                          "expression": {
                            "components": [
                              {
                                "hexValue": "74727565",
                                "id": 1581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1732:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "hexValue": "30",
                                "id": 1582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1738:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 1583,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1731:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                              "typeString": "tuple(bool,int_const 0)"
                            }
                          },
                          "functionReturnParameters": 1577,
                          "id": 1584,
                          "nodeType": "Return",
                          "src": "1724:16:12"
                        }
                      },
                      {
                        "assignments": [
                          1587
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1587,
                            "mutability": "mutable",
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 1606,
                            "src": "1750:9:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1586,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1750:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1591,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1588,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1569,
                            "src": "1762:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1589,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1571,
                            "src": "1766:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1762:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1750:17:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1592,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1587,
                              "src": "1781:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1593,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1569,
                              "src": "1785:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1781:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1595,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1571,
                            "src": "1790:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1781:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1601,
                        "nodeType": "IfStatement",
                        "src": "1777:33:12",
                        "trueBody": {
                          "expression": {
                            "components": [
                              {
                                "hexValue": "66616c7365",
                                "id": 1597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1801:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "30",
                                "id": 1598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1808:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 1599,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1800:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                              "typeString": "tuple(bool,int_const 0)"
                            }
                          },
                          "functionReturnParameters": 1577,
                          "id": 1600,
                          "nodeType": "Return",
                          "src": "1793:17:12"
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1828:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "id": 1603,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1587,
                              "src": "1834:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1604,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1827:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 1577,
                        "id": 1605,
                        "nodeType": "Return",
                        "src": "1820:16:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1567,
                    "nodeType": "StructuredDocumentation",
                    "src": "1266:137:12",
                    "text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 1607,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryMul",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1569,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1607,
                        "src": "1424:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1568,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1424:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1571,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1607,
                        "src": "1435:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1570,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1435:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1423:22:12"
                  },
                  "returnParameters": {
                    "id": 1577,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1574,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1607,
                        "src": "1469:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1573,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1469:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1576,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1607,
                        "src": "1475:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1575,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1475:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1468:15:12"
                  },
                  "scope": 1860,
                  "src": "1408:435:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1633,
                    "nodeType": "Block",
                    "src": "2068:76:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1619,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1612,
                            "src": "2082:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2087:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2082:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1626,
                        "nodeType": "IfStatement",
                        "src": "2078:29:12",
                        "trueBody": {
                          "expression": {
                            "components": [
                              {
                                "hexValue": "66616c7365",
                                "id": 1622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2098:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "30",
                                "id": 1623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2105:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 1624,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2097:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                              "typeString": "tuple(bool,int_const 0)"
                            }
                          },
                          "functionReturnParameters": 1618,
                          "id": 1625,
                          "nodeType": "Return",
                          "src": "2090:17:12"
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 1627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2125:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1628,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1610,
                                "src": "2131:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1629,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1612,
                                "src": "2135:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2131:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1631,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2124:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 1618,
                        "id": 1632,
                        "nodeType": "Return",
                        "src": "2117:20:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1608,
                    "nodeType": "StructuredDocumentation",
                    "src": "1849:138:12",
                    "text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
                  },
                  "id": 1634,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryDiv",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1613,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1610,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1634,
                        "src": "2008:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1609,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2008:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1612,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1634,
                        "src": "2019:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1611,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2019:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2007:22:12"
                  },
                  "returnParameters": {
                    "id": 1618,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1615,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1634,
                        "src": "2053:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1614,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2053:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1617,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1634,
                        "src": "2059:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1616,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2059:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2052:15:12"
                  },
                  "scope": 1860,
                  "src": "1992:152:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1660,
                    "nodeType": "Block",
                    "src": "2379:76:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1646,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1639,
                            "src": "2393:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2398:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2393:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1653,
                        "nodeType": "IfStatement",
                        "src": "2389:29:12",
                        "trueBody": {
                          "expression": {
                            "components": [
                              {
                                "hexValue": "66616c7365",
                                "id": 1649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2409:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "30",
                                "id": 1650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2416:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 1651,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2408:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                              "typeString": "tuple(bool,int_const 0)"
                            }
                          },
                          "functionReturnParameters": 1645,
                          "id": 1652,
                          "nodeType": "Return",
                          "src": "2401:17:12"
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 1654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2436:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1655,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1637,
                                "src": "2442:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "id": 1656,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1639,
                                "src": "2446:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2442:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1658,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2435:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 1645,
                        "id": 1659,
                        "nodeType": "Return",
                        "src": "2428:20:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1635,
                    "nodeType": "StructuredDocumentation",
                    "src": "2150:148:12",
                    "text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
                  },
                  "id": 1661,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryMod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1640,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1637,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1661,
                        "src": "2319:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1636,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2319:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1639,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1661,
                        "src": "2330:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1638,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2318:22:12"
                  },
                  "returnParameters": {
                    "id": 1645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1642,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1661,
                        "src": "2364:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1641,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2364:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1644,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1661,
                        "src": "2370:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2370:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2363:15:12"
                  },
                  "scope": 1860,
                  "src": "2303:152:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1686,
                    "nodeType": "Block",
                    "src": "2757:108:12",
                    "statements": [
                      {
                        "assignments": [
                          1672
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1672,
                            "mutability": "mutable",
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 1686,
                            "src": "2767:9:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1671,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2767:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1676,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1673,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1664,
                            "src": "2779:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1674,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1666,
                            "src": "2783:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2779:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2767:17:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1678,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1672,
                                "src": "2802:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1679,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1664,
                                "src": "2807:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2802:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                              "id": 1681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2810:29:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              },
                              "value": "SafeMath: addition overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              }
                            ],
                            "id": 1677,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2794:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2794:46:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1683,
                        "nodeType": "ExpressionStatement",
                        "src": "2794:46:12"
                      },
                      {
                        "expression": {
                          "id": 1684,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1672,
                          "src": "2857:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1670,
                        "id": 1685,
                        "nodeType": "Return",
                        "src": "2850:8:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1662,
                    "nodeType": "StructuredDocumentation",
                    "src": "2461:224:12",
                    "text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
                  },
                  "id": 1687,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1667,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1664,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1687,
                        "src": "2703:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1663,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2703:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1666,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1687,
                        "src": "2714:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1665,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2714:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2702:22:12"
                  },
                  "returnParameters": {
                    "id": 1670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1669,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1687,
                        "src": "2748:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1668,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2748:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2747:9:12"
                  },
                  "scope": 1860,
                  "src": "2690:175:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1708,
                    "nodeType": "Block",
                    "src": "3203:88:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1698,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1692,
                                "src": "3221:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1699,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1690,
                                "src": "3226:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3221:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                              "id": 1701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3229:32:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              },
                              "value": "SafeMath: subtraction overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              }
                            ],
                            "id": 1697,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3213:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3213:49:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1703,
                        "nodeType": "ExpressionStatement",
                        "src": "3213:49:12"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1704,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1690,
                            "src": "3279:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1705,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1692,
                            "src": "3283:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3279:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1696,
                        "id": 1707,
                        "nodeType": "Return",
                        "src": "3272:12:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1688,
                    "nodeType": "StructuredDocumentation",
                    "src": "2871:260:12",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 1709,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1693,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1690,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1709,
                        "src": "3149:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1689,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3149:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1692,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1709,
                        "src": "3160:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1691,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3160:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3148:22:12"
                  },
                  "returnParameters": {
                    "id": 1696,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1695,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1709,
                        "src": "3194:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1694,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3194:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3193:9:12"
                  },
                  "scope": 1860,
                  "src": "3136:155:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1742,
                    "nodeType": "Block",
                    "src": "3605:148:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1719,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1712,
                            "src": "3619:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3624:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3619:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1724,
                        "nodeType": "IfStatement",
                        "src": "3615:20:12",
                        "trueBody": {
                          "expression": {
                            "hexValue": "30",
                            "id": 1722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3634:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 1718,
                          "id": 1723,
                          "nodeType": "Return",
                          "src": "3627:8:12"
                        }
                      },
                      {
                        "assignments": [
                          1726
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1726,
                            "mutability": "mutable",
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 1742,
                            "src": "3645:9:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1725,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3645:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1730,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1727,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1712,
                            "src": "3657:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1728,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1714,
                            "src": "3661:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3657:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3645:17:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1732,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1726,
                                  "src": "3680:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1733,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1712,
                                  "src": "3684:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3680:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1735,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1714,
                                "src": "3689:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3680:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                              "id": 1737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3692:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              },
                              "value": "SafeMath: multiplication overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              }
                            ],
                            "id": 1731,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3672:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3672:56:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1739,
                        "nodeType": "ExpressionStatement",
                        "src": "3672:56:12"
                      },
                      {
                        "expression": {
                          "id": 1740,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1726,
                          "src": "3745:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1718,
                        "id": 1741,
                        "nodeType": "Return",
                        "src": "3738:8:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1710,
                    "nodeType": "StructuredDocumentation",
                    "src": "3297:236:12",
                    "text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
                  },
                  "id": 1743,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1712,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1743,
                        "src": "3551:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1711,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1714,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1743,
                        "src": "3562:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1713,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3562:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:22:12"
                  },
                  "returnParameters": {
                    "id": 1718,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1717,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1743,
                        "src": "3596:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1716,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3596:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3595:9:12"
                  },
                  "scope": 1860,
                  "src": "3538:215:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1764,
                    "nodeType": "Block",
                    "src": "4284:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1754,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1748,
                                "src": "4302:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4306:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4302:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                              "id": 1757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4309:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              },
                              "value": "SafeMath: division by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              }
                            ],
                            "id": 1753,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4294:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4294:44:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1759,
                        "nodeType": "ExpressionStatement",
                        "src": "4294:44:12"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1760,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1746,
                            "src": "4355:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1761,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1748,
                            "src": "4359:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4355:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1752,
                        "id": 1763,
                        "nodeType": "Return",
                        "src": "4348:12:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1744,
                    "nodeType": "StructuredDocumentation",
                    "src": "3759:453:12",
                    "text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 1765,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1749,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1746,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1765,
                        "src": "4230:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1745,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4230:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1748,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1765,
                        "src": "4241:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1747,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4241:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4229:22:12"
                  },
                  "returnParameters": {
                    "id": 1752,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1751,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1765,
                        "src": "4275:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1750,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4275:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4274:9:12"
                  },
                  "scope": 1860,
                  "src": "4217:150:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1786,
                    "nodeType": "Block",
                    "src": "4887:81:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1776,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1770,
                                "src": "4905:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4909:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4905:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
                              "id": 1779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4912:26:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                                "typeString": "literal_string \"SafeMath: modulo by zero\""
                              },
                              "value": "SafeMath: modulo by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                                "typeString": "literal_string \"SafeMath: modulo by zero\""
                              }
                            ],
                            "id": 1775,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4897:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4897:42:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1781,
                        "nodeType": "ExpressionStatement",
                        "src": "4897:42:12"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1782,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1768,
                            "src": "4956:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 1783,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1770,
                            "src": "4960:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4956:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1774,
                        "id": 1785,
                        "nodeType": "Return",
                        "src": "4949:12:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1766,
                    "nodeType": "StructuredDocumentation",
                    "src": "4373:442:12",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 1787,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1771,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1768,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1787,
                        "src": "4833:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1767,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4833:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1770,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1787,
                        "src": "4844:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1769,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4832:22:12"
                  },
                  "returnParameters": {
                    "id": 1774,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1773,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1787,
                        "src": "4878:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1772,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4878:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4877:9:12"
                  },
                  "scope": 1860,
                  "src": "4820:148:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1810,
                    "nodeType": "Block",
                    "src": "5527:68:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1800,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "5545:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1801,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1790,
                                "src": "5550:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5545:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1803,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1794,
                              "src": "5553:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1799,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5537:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5537:29:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1805,
                        "nodeType": "ExpressionStatement",
                        "src": "5537:29:12"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1806,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "5583:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1807,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1792,
                            "src": "5587:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5583:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1798,
                        "id": 1809,
                        "nodeType": "Return",
                        "src": "5576:12:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1788,
                    "nodeType": "StructuredDocumentation",
                    "src": "4974:453:12",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 1811,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1795,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1790,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "5445:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1789,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5445:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1792,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "5456:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1791,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5456:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1794,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "5467:26:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1793,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5467:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5444:50:12"
                  },
                  "returnParameters": {
                    "id": 1798,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1797,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "5518:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1796,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5518:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5517:9:12"
                  },
                  "scope": 1860,
                  "src": "5432:163:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1834,
                    "nodeType": "Block",
                    "src": "6347:67:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1824,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1816,
                                "src": "6365:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6369:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6365:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1827,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1818,
                              "src": "6372:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1823,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6357:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6357:28:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1829,
                        "nodeType": "ExpressionStatement",
                        "src": "6357:28:12"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1830,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1814,
                            "src": "6402:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1831,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1816,
                            "src": "6406:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6402:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1822,
                        "id": 1833,
                        "nodeType": "Return",
                        "src": "6395:12:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1812,
                    "nodeType": "StructuredDocumentation",
                    "src": "5601:646:12",
                    "text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 1835,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1819,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1814,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1835,
                        "src": "6265:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1813,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6265:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1816,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1835,
                        "src": "6276:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1815,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6276:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1818,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1835,
                        "src": "6287:26:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1817,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6287:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6264:50:12"
                  },
                  "returnParameters": {
                    "id": 1822,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1821,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1835,
                        "src": "6338:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1820,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6338:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6337:9:12"
                  },
                  "scope": 1860,
                  "src": "6252:162:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1858,
                    "nodeType": "Block",
                    "src": "7155:67:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1848,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1840,
                                "src": "7173:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7177:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7173:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1851,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1842,
                              "src": "7180:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1847,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7165:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7165:28:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1853,
                        "nodeType": "ExpressionStatement",
                        "src": "7165:28:12"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1854,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1838,
                            "src": "7210:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 1855,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1840,
                            "src": "7214:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7210:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1846,
                        "id": 1857,
                        "nodeType": "Return",
                        "src": "7203:12:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1836,
                    "nodeType": "StructuredDocumentation",
                    "src": "6420:635:12",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 1859,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1838,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1859,
                        "src": "7073:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1837,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7073:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1840,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1859,
                        "src": "7084:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1839,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7084:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1842,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1859,
                        "src": "7095:26:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1841,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7095:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7072:50:12"
                  },
                  "returnParameters": {
                    "id": 1846,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1845,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1859,
                        "src": "7146:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1844,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7146:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7145:9:12"
                  },
                  "scope": 1860,
                  "src": "7060:162:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1861,
              "src": "630:6594:12"
            }
          ],
          "src": "33:7192:12"
        },
        "id": 12
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1938
            ]
          },
          "id": 1939,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1862,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1863,
                "nodeType": "StructuredDocumentation",
                "src": "66:70:13",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 1938,
              "linearizedBaseContracts": [
                1938
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1864,
                    "nodeType": "StructuredDocumentation",
                    "src": "160:66:13",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1869,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1865,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "251:2:13"
                  },
                  "returnParameters": {
                    "id": 1868,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1867,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1869,
                        "src": "277:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1866,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "277:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "276:9:13"
                  },
                  "scope": 1938,
                  "src": "231:55:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1870,
                    "nodeType": "StructuredDocumentation",
                    "src": "292:72:13",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1877,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1872,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1877,
                        "src": "388:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1871,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "388:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "387:17:13"
                  },
                  "returnParameters": {
                    "id": 1876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1875,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1877,
                        "src": "428:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "427:9:13"
                  },
                  "scope": 1938,
                  "src": "369:68:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1878,
                    "nodeType": "StructuredDocumentation",
                    "src": "443:209:13",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1887,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1883,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1880,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "675:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1879,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "675:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1882,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "694:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1881,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "694:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "674:35:13"
                  },
                  "returnParameters": {
                    "id": 1886,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1885,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1887,
                        "src": "728:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1884,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "727:6:13"
                  },
                  "scope": 1938,
                  "src": "657:77:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1888,
                    "nodeType": "StructuredDocumentation",
                    "src": "740:264:13",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1897,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1893,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1890,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1897,
                        "src": "1028:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1889,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1028:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1892,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1897,
                        "src": "1043:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1891,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1043:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1027:32:13"
                  },
                  "returnParameters": {
                    "id": 1896,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1895,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1897,
                        "src": "1083:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1894,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1083:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1082:9:13"
                  },
                  "scope": 1938,
                  "src": "1009:83:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1898,
                    "nodeType": "StructuredDocumentation",
                    "src": "1098:642:13",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1907,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1903,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1900,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1907,
                        "src": "1762:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1899,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1762:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1902,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1907,
                        "src": "1779:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1901,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1779:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1761:33:13"
                  },
                  "returnParameters": {
                    "id": 1906,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1905,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1907,
                        "src": "1813:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1904,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1813:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1812:6:13"
                  },
                  "scope": 1938,
                  "src": "1745:74:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1908,
                    "nodeType": "StructuredDocumentation",
                    "src": "1825:296:13",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1919,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1915,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1910,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1919,
                        "src": "2148:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1909,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2148:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1912,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1919,
                        "src": "2164:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1911,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2164:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1914,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1919,
                        "src": "2183:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1913,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2183:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2147:51:13"
                  },
                  "returnParameters": {
                    "id": 1918,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1917,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1919,
                        "src": "2217:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1916,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2217:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2216:6:13"
                  },
                  "scope": 1938,
                  "src": "2126:97:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1920,
                    "nodeType": "StructuredDocumentation",
                    "src": "2229:158:13",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 1928,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1927,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1922,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1928,
                        "src": "2407:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1921,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2407:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1924,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1928,
                        "src": "2429:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2429:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1926,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1928,
                        "src": "2449:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1925,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2449:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2406:57:13"
                  },
                  "src": "2392:72:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1929,
                    "nodeType": "StructuredDocumentation",
                    "src": "2470:148:13",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 1937,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1936,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1931,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1937,
                        "src": "2638:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1930,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2638:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1933,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1937,
                        "src": "2661:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1932,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2661:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1935,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1937,
                        "src": "2686:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1934,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2686:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2637:63:13"
                  },
                  "src": "2623:78:13"
                }
              ],
              "scope": 1939,
              "src": "137:2566:13"
            }
          ],
          "src": "33:2671:13"
        },
        "id": 13
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1961
            ]
          },
          "id": 1962,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1940,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:14"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1961,
              "linearizedBaseContracts": [
                1961
              ],
              "name": "Context",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1948,
                    "nodeType": "Block",
                    "src": "668:34:14",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1945,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "685:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "685:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 1944,
                        "id": 1947,
                        "nodeType": "Return",
                        "src": "678:17:14"
                      }
                    ]
                  },
                  "id": 1949,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1941,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "617:2:14"
                  },
                  "returnParameters": {
                    "id": 1944,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1943,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1949,
                        "src": "651:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1942,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "651:15:14",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "650:17:14"
                  },
                  "scope": 1961,
                  "src": "598:104:14",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1959,
                    "nodeType": "Block",
                    "src": "773:165:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 1954,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "783:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Context_$1961",
                            "typeString": "contract Context"
                          }
                        },
                        "id": 1955,
                        "nodeType": "ExpressionStatement",
                        "src": "783:4:14"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 1956,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "923:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "923:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1953,
                        "id": 1958,
                        "nodeType": "Return",
                        "src": "916:15:14"
                      }
                    ]
                  },
                  "id": 1960,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1950,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "725:2:14"
                  },
                  "returnParameters": {
                    "id": 1953,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1952,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1960,
                        "src": "759:12:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1951,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "759:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "758:14:14"
                  },
                  "scope": 1961,
                  "src": "708:230:14",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1962,
              "src": "566:374:14"
            }
          ],
          "src": "33:908:14"
        },
        "id": 14
      },
      "contracts/gsn/IUniswap.sol": {
        "ast": {
          "absolutePath": "contracts/gsn/IUniswap.sol",
          "exportedSymbols": {
            "IUniswap": [
              2008
            ]
          },
          "id": 2009,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1963,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:15"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2008,
              "linearizedBaseContracts": [
                2008
              ],
              "name": "IUniswap",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "18cbafe5",
                  "id": 1980,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForETH",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1975,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1965,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nodeType": "VariableDeclaration",
                        "scope": 1980,
                        "src": "123:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1964,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "123:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1967,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1980,
                        "src": "146:17:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1966,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "146:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1970,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "scope": 1980,
                        "src": "173:23:15",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1968,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "173:7:15",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1969,
                          "nodeType": "ArrayTypeName",
                          "src": "173:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1972,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1980,
                        "src": "206:10:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1971,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "206:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1974,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "scope": 1980,
                        "src": "226:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1973,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "226:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "113:132:15"
                  },
                  "returnParameters": {
                    "id": 1979,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1978,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "scope": 1980,
                        "src": "272:21:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1976,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "272:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1977,
                          "nodeType": "ArrayTypeName",
                          "src": "272:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "271:23:15"
                  },
                  "scope": 2008,
                  "src": "83:212:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d06ca61f",
                  "id": 1991,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsOut",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1986,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1982,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nodeType": "VariableDeclaration",
                        "scope": 1991,
                        "src": "325:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1981,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "325:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1985,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "scope": 1991,
                        "src": "340:23:15",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1983,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "340:7:15",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1984,
                          "nodeType": "ArrayTypeName",
                          "src": "340:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "324:40:15"
                  },
                  "returnParameters": {
                    "id": 1990,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1989,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "scope": 1991,
                        "src": "388:21:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1987,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "388:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1988,
                          "nodeType": "ArrayTypeName",
                          "src": "388:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "387:23:15"
                  },
                  "scope": 2008,
                  "src": "302:109:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1f00ca74",
                  "id": 2002,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsIn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1997,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1993,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nodeType": "VariableDeclaration",
                        "scope": 2002,
                        "src": "439:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1992,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "439:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1996,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "scope": 2002,
                        "src": "455:23:15",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "455:7:15",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1995,
                          "nodeType": "ArrayTypeName",
                          "src": "455:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "438:41:15"
                  },
                  "returnParameters": {
                    "id": 2001,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2000,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "scope": 2002,
                        "src": "503:21:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1998,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "503:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1999,
                          "nodeType": "ArrayTypeName",
                          "src": "503:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "502:23:15"
                  },
                  "scope": 2008,
                  "src": "417:109:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ad5c4648",
                  "id": 2007,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "WETH",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2003,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "545:2:15"
                  },
                  "returnParameters": {
                    "id": 2006,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2005,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2007,
                        "src": "571:7:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2004,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "571:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "570:9:15"
                  },
                  "scope": 2008,
                  "src": "532:48:15",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2009,
              "src": "57:525:15"
            }
          ],
          "src": "31:552:15"
        },
        "id": 15
      },
      "contracts/gsn/TokenPaymasterPermitPaymaster.sol": {
        "ast": {
          "absolutePath": "contracts/gsn/TokenPaymasterPermitPaymaster.sol",
          "exportedSymbols": {
            "BasePaymaster": [
              187
            ],
            "Context": [
              1961
            ],
            "GsnEip712Library": [
              1171
            ],
            "GsnTypes": [
              1197
            ],
            "GsnUtils": [
              1244
            ],
            "IERC20": [
              1938
            ],
            "IERC20Permit": [
              1505
            ],
            "IForwarder": [
              273
            ],
            "IPaymaster": [
              343
            ],
            "IRelayHub": [
              611
            ],
            "IRelayRecipient": [
              640
            ],
            "IStakeManager": [
              803
            ],
            "IUniswap": [
              2008
            ],
            "MinLibBytes": [
              1359
            ],
            "Ownable": [
              1469
            ],
            "SafeMath": [
              1860
            ],
            "TokenPaymasterPermitPaymaster": [
              2722
            ]
          },
          "id": 2723,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2010,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:16"
            },
            {
              "id": 2011,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "56:33:16"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2012,
              "nodeType": "ImportDirective",
              "scope": 2723,
              "sourceUnit": 1470,
              "src": "91:52:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
              "file": "@openzeppelin/contracts/math/SafeMath.sol",
              "id": 2013,
              "nodeType": "ImportDirective",
              "scope": 2723,
              "sourceUnit": 1861,
              "src": "144:51:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/drafts/IERC20Permit.sol",
              "file": "@openzeppelin/contracts/drafts/IERC20Permit.sol",
              "id": 2014,
              "nodeType": "ImportDirective",
              "scope": 2723,
              "sourceUnit": 1506,
              "src": "196:57:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2015,
              "nodeType": "ImportDirective",
              "scope": 2723,
              "sourceUnit": 1939,
              "src": "254:56:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@opengsn/contracts/src/BasePaymaster.sol",
              "file": "@opengsn/contracts/src/BasePaymaster.sol",
              "id": 2016,
              "nodeType": "ImportDirective",
              "scope": 2723,
              "sourceUnit": 188,
              "src": "311:50:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@opengsn/contracts/src/interfaces/IRelayHub.sol",
              "file": "@opengsn/contracts/src/interfaces/IRelayHub.sol",
              "id": 2017,
              "nodeType": "ImportDirective",
              "scope": 2723,
              "sourceUnit": 612,
              "src": "362:57:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/gsn/IUniswap.sol",
              "file": "./IUniswap.sol",
              "id": 2018,
              "nodeType": "ImportDirective",
              "scope": 2723,
              "sourceUnit": 2009,
              "src": "421:24:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2020,
                    "name": "BasePaymaster",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 187,
                    "src": "698:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BasePaymaster_$187",
                      "typeString": "contract BasePaymaster"
                    }
                  },
                  "id": 2021,
                  "nodeType": "InheritanceSpecifier",
                  "src": "698:13:16"
                }
              ],
              "contractDependencies": [
                187,
                343,
                1469,
                1961
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 2019,
                "nodeType": "StructuredDocumentation",
                "src": "447:208:16",
                "text": " A Token-based paymaster.\n - each request is paid for by the caller.\n - preRelayedCall - pre-pay the maximum possible price for the tx\n - postRelayedCall - refund the caller for the unused gas"
              },
              "fullyImplemented": true,
              "id": 2722,
              "linearizedBaseContracts": [
                2722,
                187,
                1469,
                1961,
                343
              ],
              "name": "TokenPaymasterPermitPaymaster",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 2024,
                  "libraryName": {
                    "id": 2022,
                    "name": "SafeMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1860,
                    "src": "724:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeMath_$1860",
                      "typeString": "library SafeMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "718:27:16",
                  "typeName": {
                    "id": 2023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "baseFunctions": [
                    342
                  ],
                  "body": {
                    "id": 2032,
                    "nodeType": "Block",
                    "src": "833:31:16",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "322e322e30",
                          "id": 2030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "850:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c3370ec04d3fde248d4ca6dba2b404616edc2a8aabef2176407cb0399c4bec87",
                            "typeString": "literal_string \"2.2.0\""
                          },
                          "value": "2.2.0"
                        },
                        "functionReturnParameters": 2029,
                        "id": 2031,
                        "nodeType": "Return",
                        "src": "843:14:16"
                      }
                    ]
                  },
                  "functionSelector": "921276ea",
                  "id": 2033,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "versionPaymaster",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2026,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "788:8:16"
                  },
                  "parameters": {
                    "id": 2025,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "776:2:16"
                  },
                  "returnParameters": {
                    "id": 2029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2028,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2033,
                        "src": "819:13:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2027,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "819:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "818:15:16"
                  },
                  "scope": 2722,
                  "src": "751:113:16",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "constant": false,
                  "functionSelector": "ef1a830e",
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "routersMap",
                  "nodeType": "VariableDeclaration",
                  "scope": 2722,
                  "src": "870:46:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 2036,
                    "keyType": {
                      "id": 2034,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "879:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "870:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueType": {
                      "id": 2035,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "890:7:16",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ad12e50e",
                  "id": 2039,
                  "mutability": "mutable",
                  "name": "gasUsedByPost",
                  "nodeType": "VariableDeclaration",
                  "scope": 2722,
                  "src": "923:25:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2038,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2042,
                    "nodeType": "Block",
                    "src": "976:7:16",
                    "statements": []
                  },
                  "id": 2043,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2040,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "966:2:16"
                  },
                  "returnParameters": {
                    "id": 2041,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "976:0:16"
                  },
                  "scope": 2722,
                  "src": "955:28:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2054,
                    "nodeType": "Block",
                    "src": "1054:47:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 2052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2050,
                            "name": "gasUsedByPost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "1064:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2051,
                            "name": "_gasUsedByPost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2045,
                            "src": "1080:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1064:30:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2053,
                        "nodeType": "ExpressionStatement",
                        "src": "1064:30:16"
                      }
                    ]
                  },
                  "functionSelector": "6d7c3e2b",
                  "id": 2055,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2048,
                      "modifierName": {
                        "id": 2047,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1418,
                        "src": "1044:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1044:9:16"
                    }
                  ],
                  "name": "setPostGasUsage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2046,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2045,
                        "mutability": "mutable",
                        "name": "_gasUsedByPost",
                        "nodeType": "VariableDeclaration",
                        "scope": 2055,
                        "src": "1014:19:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2044,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1014:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1013:21:16"
                  },
                  "returnParameters": {
                    "id": 2049,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1054:0:16"
                  },
                  "scope": 2722,
                  "src": "989:112:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2069,
                    "nodeType": "Block",
                    "src": "1208:65:16",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 2062,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1219:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                "typeString": "contract TokenPaymasterPermitPaymaster"
                              }
                            }
                          ],
                          "id": 2063,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1218:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                            "typeString": "contract TokenPaymasterPermitPaymaster"
                          }
                        },
                        "id": 2064,
                        "nodeType": "ExpressionStatement",
                        "src": "1218:6:16"
                      },
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "id": 2065,
                              "name": "relayRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2057,
                              "src": "1241:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            },
                            "id": 2066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "request",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1193,
                            "src": "1241:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ForwardRequest_$205_calldata_ptr",
                              "typeString": "struct IForwarder.ForwardRequest calldata"
                            }
                          },
                          "id": 2067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "from",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 192,
                          "src": "1241:25:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2061,
                        "id": 2068,
                        "nodeType": "Return",
                        "src": "1234:32:16"
                      }
                    ]
                  },
                  "functionSelector": "41bbb7ca",
                  "id": 2070,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPayer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2058,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2057,
                        "mutability": "mutable",
                        "name": "relayRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 2070,
                        "src": "1125:43:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest"
                        },
                        "typeName": {
                          "id": 2056,
                          "name": "GsnTypes.RelayRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1196,
                          "src": "1125:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayRequest_$1196_storage_ptr",
                            "typeString": "struct GsnTypes.RelayRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1124:45:16"
                  },
                  "returnParameters": {
                    "id": 2061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2060,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2070,
                        "src": "1199:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2059,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1199:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1198:9:16"
                  },
                  "scope": 2722,
                  "src": "1107:166:16",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    168
                  ],
                  "body": {
                    "id": 2079,
                    "nodeType": "Block",
                    "src": "1315:41:16",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2075,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1339:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1339:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2074,
                            "name": "Received",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2721,
                            "src": "1330:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1330:19:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2078,
                        "nodeType": "EmitStatement",
                        "src": "1325:24:16"
                      }
                    ]
                  },
                  "id": 2080,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2072,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1298:8:16"
                  },
                  "parameters": {
                    "id": 2071,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1286:2:16"
                  },
                  "returnParameters": {
                    "id": 2073,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1315:0:16"
                  },
                  "scope": 2722,
                  "src": "1279:77:16",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2135,
                    "nodeType": "Block",
                    "src": "1595:362:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 2100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2095,
                            "name": "payer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2091,
                            "src": "1605:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2098,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2086,
                                "src": "1627:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              ],
                              "expression": {
                                "id": 2096,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1613:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                  "typeString": "contract TokenPaymasterPermitPaymaster"
                                }
                              },
                              "id": 2097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getPayer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2070,
                              "src": "1613:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_struct$_RelayRequest_$1196_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (struct GsnTypes.RelayRequest memory) view external returns (address)"
                              }
                            },
                            "id": 2099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1613:27:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1605:35:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2101,
                        "nodeType": "ExpressionStatement",
                        "src": "1605:35:16"
                      },
                      {
                        "assignments": [
                          2103
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2103,
                            "mutability": "mutable",
                            "name": "ethMaxCharge",
                            "nodeType": "VariableDeclaration",
                            "scope": 2135,
                            "src": "1650:17:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2102,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1650:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2110,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2106,
                              "name": "maxPossibleGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2088,
                              "src": "1695:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2107,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2086,
                                "src": "1711:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 2108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "relayData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1195,
                              "src": "1711:22:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayData calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayData calldata"
                              }
                            ],
                            "expression": {
                              "id": 2104,
                              "name": "relayHub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "1670:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRelayHub_$611",
                                "typeString": "contract IRelayHub"
                              }
                            },
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "calculateCharge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 541,
                            "src": "1670:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_struct$_RelayData_$1191_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,struct GsnTypes.RelayData memory) view external returns (uint256)"
                            }
                          },
                          "id": 2109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1670:64:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1650:84:16"
                      },
                      {
                        "expression": {
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2111,
                            "name": "ethMaxCharge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2103,
                            "src": "1744:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 2112,
                                "name": "relayRequest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2086,
                                "src": "1760:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayRequest calldata"
                                }
                              },
                              "id": 2113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "request",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1193,
                              "src": "1760:20:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ForwardRequest_$205_calldata_ptr",
                                "typeString": "struct IForwarder.ForwardRequest calldata"
                              }
                            },
                            "id": 2114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 196,
                            "src": "1760:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1744:42:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2116,
                        "nodeType": "ExpressionStatement",
                        "src": "1744:42:16"
                      },
                      {
                        "expression": {
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2117,
                            "name": "tokenPreCharge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "1796:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2119,
                                "name": "ethMaxCharge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2103,
                                "src": "1838:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2120,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2082,
                                "src": "1852:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1938",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 2121,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2084,
                                "src": "1859:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswap_$2008",
                                  "typeString": "contract IUniswap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1938",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IUniswap_$2008",
                                  "typeString": "contract IUniswap"
                                }
                              ],
                              "id": 2118,
                              "name": "getTokenToEthOutputPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2699,
                              "src": "1813:24:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_contract$_IERC20_$1938_$_t_contract$_IUniswap_$2008_$returns$_t_uint256_$",
                                "typeString": "function (uint256,contract IERC20,contract IUniswap) view returns (uint256)"
                              }
                            },
                            "id": 2122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1813:53:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1796:70:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2124,
                        "nodeType": "ExpressionStatement",
                        "src": "1796:70:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2126,
                                "name": "tokenPreCharge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2093,
                                "src": "1884:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 2129,
                                    "name": "payer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2091,
                                    "src": "1918:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2127,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2082,
                                    "src": "1902:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1938",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1877,
                                  "src": "1902:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 2130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1902:22:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1884:40:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "746f6b656e2062616c616e636520746f6f206c6f77",
                              "id": 2132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1926:23:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b436a453104c967d5dda2f161596a8ee581041d16cd34aefe6d327b6e586ba3c",
                                "typeString": "literal_string \"token balance too low\""
                              },
                              "value": "token balance too low"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b436a453104c967d5dda2f161596a8ee581041d16cd34aefe6d327b6e586ba3c",
                                "typeString": "literal_string \"token balance too low\""
                              }
                            ],
                            "id": 2125,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1876:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1876:74:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2134,
                        "nodeType": "ExpressionStatement",
                        "src": "1876:74:16"
                      }
                    ]
                  },
                  "functionSelector": "59d3901f",
                  "id": 2136,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculatePreCharge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2089,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2082,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2136,
                        "src": "1399:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1938",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2081,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "1399:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1938",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2084,
                        "mutability": "mutable",
                        "name": "router",
                        "nodeType": "VariableDeclaration",
                        "scope": 2136,
                        "src": "1421:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswap_$2008",
                          "typeString": "contract IUniswap"
                        },
                        "typeName": {
                          "id": 2083,
                          "name": "IUniswap",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2008,
                          "src": "1421:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswap_$2008",
                            "typeString": "contract IUniswap"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2086,
                        "mutability": "mutable",
                        "name": "relayRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 2136,
                        "src": "1446:43:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest"
                        },
                        "typeName": {
                          "id": 2085,
                          "name": "GsnTypes.RelayRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1196,
                          "src": "1446:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayRequest_$1196_storage_ptr",
                            "typeString": "struct GsnTypes.RelayRequest"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2088,
                        "mutability": "mutable",
                        "name": "maxPossibleGas",
                        "nodeType": "VariableDeclaration",
                        "scope": 2136,
                        "src": "1499:22:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2087,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1499:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1389:133:16"
                  },
                  "returnParameters": {
                    "id": 2094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2091,
                        "mutability": "mutable",
                        "name": "payer",
                        "nodeType": "VariableDeclaration",
                        "scope": 2136,
                        "src": "1556:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2090,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1556:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2093,
                        "mutability": "mutable",
                        "name": "tokenPreCharge",
                        "nodeType": "VariableDeclaration",
                        "scope": 2136,
                        "src": "1571:22:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2092,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1571:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1555:39:16"
                  },
                  "scope": 2722,
                  "src": "1362:595:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    325
                  ],
                  "body": {
                    "id": 2263,
                    "nodeType": "Block",
                    "src": "2270:762:16",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 2154,
                              "name": "relayRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2138,
                              "src": "2281:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            },
                            {
                              "id": 2155,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2140,
                              "src": "2295:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 2156,
                              "name": "approvalData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "2306:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 2157,
                              "name": "maxPossibleGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "2320:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2158,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2280:55:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_struct$_RelayRequest_$1196_calldata_ptr_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct GsnTypes.RelayRequest calldata,bytes calldata,bytes calldata,uint256)"
                          }
                        },
                        "id": 2159,
                        "nodeType": "ExpressionStatement",
                        "src": "2280:55:16"
                      },
                      {
                        "assignments": [
                          2161,
                          2163
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2161,
                            "mutability": "mutable",
                            "name": "token",
                            "nodeType": "VariableDeclaration",
                            "scope": 2263,
                            "src": "2347:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1938",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 2160,
                              "name": "IERC20",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1938,
                              "src": "2347:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2163,
                            "mutability": "mutable",
                            "name": "router",
                            "nodeType": "VariableDeclaration",
                            "scope": 2263,
                            "src": "2361:15:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswap_$2008",
                              "typeString": "contract IUniswap"
                            },
                            "typeName": {
                              "id": 2162,
                              "name": "IUniswap",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2008,
                              "src": "2361:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2169,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 2165,
                                  "name": "relayRequest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2138,
                                  "src": "2390:12:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                    "typeString": "struct GsnTypes.RelayRequest calldata"
                                  }
                                },
                                "id": 2166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "relayData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1195,
                                "src": "2390:22:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                  "typeString": "struct GsnTypes.RelayData calldata"
                                }
                              },
                              "id": 2167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymasterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1188,
                              "src": "2390:36:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 2164,
                            "name": "_getToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2578,
                            "src": "2380:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_contract$_IERC20_$1938_$_t_contract$_IUniswap_$2008_$",
                              "typeString": "function (bytes memory) view returns (contract IERC20,contract IUniswap)"
                            }
                          },
                          "id": 2168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2380:47:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_contract$_IERC20_$1938_$_t_contract$_IUniswap_$2008_$",
                            "typeString": "tuple(contract IERC20,contract IUniswap)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2346:81:16"
                      },
                      {
                        "assignments": [
                          2171,
                          2173
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2171,
                            "mutability": "mutable",
                            "name": "payer",
                            "nodeType": "VariableDeclaration",
                            "scope": 2263,
                            "src": "2438:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2170,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2438:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2173,
                            "mutability": "mutable",
                            "name": "tokenPrecharge",
                            "nodeType": "VariableDeclaration",
                            "scope": 2263,
                            "src": "2453:22:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2172,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2453:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2180,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2175,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2161,
                              "src": "2498:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2176,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2163,
                              "src": "2505:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            },
                            {
                              "id": 2177,
                              "name": "relayRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2138,
                              "src": "2513:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              }
                            },
                            {
                              "id": 2178,
                              "name": "maxPossibleGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "2527:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              },
                              {
                                "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayRequest calldata"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2174,
                            "name": "calculatePreCharge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2136,
                            "src": "2479:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1938_$_t_contract$_IUniswap_$2008_$_t_struct$_RelayRequest_$1196_calldata_ptr_$_t_uint256_$returns$_t_address_$_t_uint256_$",
                              "typeString": "function (contract IERC20,contract IUniswap,struct GsnTypes.RelayRequest calldata,uint256) view returns (address,uint256)"
                            }
                          },
                          "id": 2179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2479:63:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                            "typeString": "tuple(address,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2437:105:16"
                      },
                      {
                        "assignments": [
                          2182,
                          2184,
                          2186,
                          2188,
                          2190,
                          2192
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2182,
                            "mutability": "mutable",
                            "name": "owner",
                            "nodeType": "VariableDeclaration",
                            "scope": 2263,
                            "src": "2553:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2181,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2553:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2184,
                            "mutability": "mutable",
                            "name": "value",
                            "nodeType": "VariableDeclaration",
                            "scope": 2263,
                            "src": "2568:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2183,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2568:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2186,
                            "mutability": "mutable",
                            "name": "deadline",
                            "nodeType": "VariableDeclaration",
                            "scope": 2263,
                            "src": "2583:16:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2185,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2583:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2188,
                            "mutability": "mutable",
                            "name": "v",
                            "nodeType": "VariableDeclaration",
                            "scope": 2263,
                            "src": "2601:7:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2187,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "2601:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2190,
                            "mutability": "mutable",
                            "name": "r",
                            "nodeType": "VariableDeclaration",
                            "scope": 2263,
                            "src": "2610:9:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2189,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2610:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2192,
                            "mutability": "mutable",
                            "name": "s",
                            "nodeType": "VariableDeclaration",
                            "scope": 2263,
                            "src": "2621:9:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2191,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2621:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2210,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2195,
                              "name": "approvalData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "2645:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 2197,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2660:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2196,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2660:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2669:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2198,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2669:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2678:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2200,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2678:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2687:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 2202,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2687:5:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2694:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 2204,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2694:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2703:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 2206,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2703:7:16",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 2208,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2659:52:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint8_$_$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(address),type(uint256),type(uint256),type(uint8),type(bytes32),type(bytes32))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint8_$_$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$",
                                "typeString": "tuple(type(address),type(uint256),type(uint256),type(uint8),type(bytes32),type(bytes32))"
                              }
                            ],
                            "expression": {
                              "id": 2193,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2634:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "2634:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2634:78:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                            "typeString": "tuple(address payable,uint256,uint256,uint8,bytes32,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2552:160:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2218,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2182,
                              "src": "2758:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2221,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2773:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                ],
                                "id": 2220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2765:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2219,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2765:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2765:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 2223,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2184,
                              "src": "2780:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2224,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2186,
                              "src": "2787:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2225,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2188,
                              "src": "2797:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 2226,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2190,
                              "src": "2800:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2227,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2192,
                              "src": "2803:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2214,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2161,
                                      "src": "2743:5:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1938",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$1938",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 2213,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2735:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2212,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2735:7:16",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2215,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2735:14:16",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2211,
                                "name": "IERC20Permit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1505,
                                "src": "2722:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$1505_$",
                                  "typeString": "type(contract IERC20Permit)"
                                }
                              },
                              "id": 2216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2722:28:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Permit_$1505",
                                "typeString": "contract IERC20Permit"
                              }
                            },
                            "id": 2217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "permit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1490,
                            "src": "2722:35:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                            }
                          },
                          "id": 2228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2722:83:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2229,
                        "nodeType": "ExpressionStatement",
                        "src": "2722:83:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2233,
                              "name": "payer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2171,
                              "src": "2834:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2236,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2849:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                ],
                                "id": 2235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2841:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2234,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2841:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2841:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 2238,
                              "name": "tokenPrecharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2173,
                              "src": "2856:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2230,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2161,
                              "src": "2815:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1919,
                            "src": "2815:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2815:56:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2240,
                        "nodeType": "ExpressionStatement",
                        "src": "2815:56:16"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2244,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2161,
                                  "src": "2911:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1938",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1938",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 2243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2903:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2242,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2903:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2903:14:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2248,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2163,
                                  "src": "2927:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswap_$2008",
                                    "typeString": "contract IUniswap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IUniswap_$2008",
                                    "typeString": "contract IUniswap"
                                  }
                                ],
                                "id": 2247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2919:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2246,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2919:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2919:15:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2250,
                              "name": "tokenPrecharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2173,
                              "src": "2936:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2241,
                            "name": "TokensPrecharged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2717,
                            "src": "2886:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2886:65:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2252,
                        "nodeType": "EmitStatement",
                        "src": "2881:70:16"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 2255,
                                  "name": "payer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2171,
                                  "src": "2980:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2256,
                                  "name": "tokenPrecharge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2173,
                                  "src": "2987:14:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 2257,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2161,
                                  "src": "3003:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1938",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 2258,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2163,
                                  "src": "3010:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswap_$2008",
                                    "typeString": "contract IUniswap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1938",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IUniswap_$2008",
                                    "typeString": "contract IUniswap"
                                  }
                                ],
                                "expression": {
                                  "id": 2253,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2969:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "2969:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2969:48:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 2260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3019:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "id": 2261,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2968:57:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bool_$",
                            "typeString": "tuple(bytes memory,bool)"
                          }
                        },
                        "functionReturnParameters": 2153,
                        "id": 2262,
                        "nodeType": "Return",
                        "src": "2961:64:16"
                      }
                    ]
                  },
                  "functionSelector": "00be5dd4",
                  "id": 2264,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2148,
                      "modifierName": {
                        "id": 2147,
                        "name": "relayHubOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "2192:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2192:12:16"
                    }
                  ],
                  "name": "preRelayedCall",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2146,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2167:8:16"
                  },
                  "parameters": {
                    "id": 2145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2138,
                        "mutability": "mutable",
                        "name": "relayRequest",
                        "nodeType": "VariableDeclaration",
                        "scope": 2264,
                        "src": "1997:43:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$1196_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest"
                        },
                        "typeName": {
                          "id": 2137,
                          "name": "GsnTypes.RelayRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1196,
                          "src": "1997:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayRequest_$1196_storage_ptr",
                            "typeString": "struct GsnTypes.RelayRequest"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2140,
                        "mutability": "mutable",
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 2264,
                        "src": "2050:24:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2139,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2050:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2142,
                        "mutability": "mutable",
                        "name": "approvalData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2264,
                        "src": "2084:27:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2141,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2084:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2144,
                        "mutability": "mutable",
                        "name": "maxPossibleGas",
                        "nodeType": "VariableDeclaration",
                        "scope": 2264,
                        "src": "2121:22:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2121:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1987:162:16"
                  },
                  "returnParameters": {
                    "id": 2153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2150,
                        "mutability": "mutable",
                        "name": "context",
                        "nodeType": "VariableDeclaration",
                        "scope": 2264,
                        "src": "2218:20:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2149,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2218:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2152,
                        "mutability": "mutable",
                        "name": "revertOnRecipientRevert",
                        "nodeType": "VariableDeclaration",
                        "scope": 2264,
                        "src": "2240:28:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2151,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2240:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2217:52:16"
                  },
                  "scope": 2722,
                  "src": "1964:1068:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    337
                  ],
                  "body": {
                    "id": 2308,
                    "nodeType": "Block",
                    "src": "3260:252:16",
                    "statements": [
                      {
                        "assignments": [
                          2279,
                          2281,
                          2283,
                          2285
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2279,
                            "mutability": "mutable",
                            "name": "payer",
                            "nodeType": "VariableDeclaration",
                            "scope": 2308,
                            "src": "3271:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2278,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3271:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2281,
                            "mutability": "mutable",
                            "name": "tokenPrecharge",
                            "nodeType": "VariableDeclaration",
                            "scope": 2308,
                            "src": "3286:22:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2280,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3286:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2283,
                            "mutability": "mutable",
                            "name": "token",
                            "nodeType": "VariableDeclaration",
                            "scope": 2308,
                            "src": "3310:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1938",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 2282,
                              "name": "IERC20",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1938,
                              "src": "3310:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2285,
                            "mutability": "mutable",
                            "name": "router",
                            "nodeType": "VariableDeclaration",
                            "scope": 2308,
                            "src": "3324:15:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswap_$2008",
                              "typeString": "contract IUniswap"
                            },
                            "typeName": {
                              "id": 2284,
                              "name": "IUniswap",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2008,
                              "src": "3324:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2297,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2288,
                              "name": "context",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2266,
                              "src": "3354:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 2290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3364:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2289,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3364:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3373:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2291,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3373:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2293,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1938,
                                  "src": "3382:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$1938_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                {
                                  "id": 2294,
                                  "name": "IUniswap",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2008,
                                  "src": "3390:8:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IUniswap_$2008_$",
                                    "typeString": "type(contract IUniswap)"
                                  }
                                }
                              ],
                              "id": 2295,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3363:36:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_contract$_IERC20_$1938_$_$_t_type$_t_contract$_IUniswap_$2008_$_$",
                                "typeString": "tuple(type(address),type(uint256),type(contract IERC20),type(contract IUniswap))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_contract$_IERC20_$1938_$_$_t_type$_t_contract$_IUniswap_$2008_$_$",
                                "typeString": "tuple(type(address),type(uint256),type(contract IERC20),type(contract IUniswap))"
                              }
                            ],
                            "expression": {
                              "id": 2286,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3343:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "3343:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3343:57:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_contract$_IERC20_$1938_$_t_contract$_IUniswap_$2008_$",
                            "typeString": "tuple(address payable,uint256,contract IERC20,contract IUniswap)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3270:130:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2299,
                              "name": "payer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2279,
                              "src": "3435:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2300,
                              "name": "tokenPrecharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2281,
                              "src": "3442:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 2301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3458:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 2302,
                              "name": "gasUseWithoutPost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2270,
                              "src": "3461:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2303,
                              "name": "relayData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2272,
                              "src": "3480:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayData calldata"
                              }
                            },
                            {
                              "id": 2304,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2283,
                              "src": "3491:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2305,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2285,
                              "src": "3498:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayData calldata"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            ],
                            "id": 2298,
                            "name": "_postRelayedCallInternal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2428,
                            "src": "3410:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_RelayData_$1191_calldata_ptr_$_t_contract$_IERC20_$1938_$_t_contract$_IUniswap_$2008_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256,struct GsnTypes.RelayData calldata,contract IERC20,contract IUniswap)"
                            }
                          },
                          "id": 2306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3410:95:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2307,
                        "nodeType": "ExpressionStatement",
                        "src": "3410:95:16"
                      }
                    ]
                  },
                  "functionSelector": "76fa01c3",
                  "id": 2309,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2276,
                      "modifierName": {
                        "id": 2275,
                        "name": "relayHubOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "3247:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3247:12:16"
                    }
                  ],
                  "name": "postRelayedCall",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2274,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3222:8:16"
                  },
                  "parameters": {
                    "id": 2273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2266,
                        "mutability": "mutable",
                        "name": "context",
                        "nodeType": "VariableDeclaration",
                        "scope": 2309,
                        "src": "3072:22:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2265,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3072:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2268,
                        "mutability": "mutable",
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 2309,
                        "src": "3104:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2267,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3104:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2270,
                        "mutability": "mutable",
                        "name": "gasUseWithoutPost",
                        "nodeType": "VariableDeclaration",
                        "scope": 2309,
                        "src": "3126:25:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3126:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2272,
                        "mutability": "mutable",
                        "name": "relayData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2309,
                        "src": "3161:37:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayData"
                        },
                        "typeName": {
                          "id": 2271,
                          "name": "GsnTypes.RelayData",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1191,
                          "src": "3161:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayData_$1191_storage_ptr",
                            "typeString": "struct GsnTypes.RelayData"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3062:142:16"
                  },
                  "returnParameters": {
                    "id": 2277,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3260:0:16"
                  },
                  "scope": 2722,
                  "src": "3038:474:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2324,
                    "nodeType": "Block",
                    "src": "3589:54:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2320,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3630:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                ],
                                "id": 2319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3622:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2318,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3622:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3622:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 2316,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2311,
                              "src": "3606:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1877,
                            "src": "3606:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3606:30:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2315,
                        "id": 2323,
                        "nodeType": "Return",
                        "src": "3599:37:16"
                      }
                    ]
                  },
                  "functionSelector": "3aecd0e3",
                  "id": 2325,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokenBalance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2311,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2325,
                        "src": "3543:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1938",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2310,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "3543:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1938",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3542:14:16"
                  },
                  "returnParameters": {
                    "id": 2315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2314,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2325,
                        "src": "3580:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2313,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3580:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3579:9:16"
                  },
                  "scope": 2722,
                  "src": "3518:125:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2360,
                    "nodeType": "Block",
                    "src": "3740:186:16",
                    "statements": [
                      {
                        "assignments": [
                          2337
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2337,
                            "mutability": "mutable",
                            "name": "tokenBalance",
                            "nodeType": "VariableDeclaration",
                            "scope": 2360,
                            "src": "3750:20:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2336,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3750:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2345,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2342,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3797:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                ],
                                "id": 2341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3789:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2340,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3789:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3789:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 2338,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2327,
                              "src": "3773:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1877,
                            "src": "3773:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3773:30:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3750:53:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2347,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2331,
                                "src": "3821:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 2348,
                                "name": "tokenBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2337,
                                "src": "3831:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3821:22:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e5061796d61737465722f42616c616e636520746f206c6f772e",
                              "id": 2350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3845:32:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2dff411ca9110b5bbd8f89e6e9bb7e3a9da30fd96d434a60138f3395d1135730",
                                "typeString": "literal_string \"TokenPaymaster/Balance to low.\""
                              },
                              "value": "TokenPaymaster/Balance to low."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2dff411ca9110b5bbd8f89e6e9bb7e3a9da30fd96d434a60138f3395d1135730",
                                "typeString": "literal_string \"TokenPaymaster/Balance to low.\""
                              }
                            ],
                            "id": 2346,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3813:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3813:65:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2352,
                        "nodeType": "ExpressionStatement",
                        "src": "3813:65:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2356,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2329,
                              "src": "3903:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2357,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2331,
                              "src": "3912:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2353,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2327,
                              "src": "3888:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1887,
                            "src": "3888:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3888:31:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2359,
                        "nodeType": "ExpressionStatement",
                        "src": "3888:31:16"
                      }
                    ]
                  },
                  "functionSelector": "01e33667",
                  "id": 2361,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 2334,
                      "modifierName": {
                        "id": 2333,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1418,
                        "src": "3728:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3728:11:16"
                    }
                  ],
                  "name": "withdrawToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2327,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2361,
                        "src": "3672:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1938",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2326,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "3672:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1938",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2329,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2361,
                        "src": "3686:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2328,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3686:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2331,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2361,
                        "src": "3703:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2330,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3703:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3671:47:16"
                  },
                  "returnParameters": {
                    "id": 2335,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3740:0:16"
                  },
                  "scope": 2722,
                  "src": "3649:277:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2427,
                    "nodeType": "Block",
                    "src": "4197:528:16",
                    "statements": [
                      {
                        "assignments": [
                          2379
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2379,
                            "mutability": "mutable",
                            "name": "ethActualCharge",
                            "nodeType": "VariableDeclaration",
                            "scope": 2427,
                            "src": "4207:23:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2378,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4207:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2388,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2384,
                                  "name": "gasUsedByPost",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2039,
                                  "src": "4280:13:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2382,
                                  "name": "gasUseWithoutPost",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2369,
                                  "src": "4258:17:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1687,
                                "src": "4258:21:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4258:36:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2386,
                              "name": "relayData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2371,
                              "src": "4296:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayData calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                                "typeString": "struct GsnTypes.RelayData calldata"
                              }
                            ],
                            "expression": {
                              "id": 2380,
                              "name": "relayHub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "4233:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRelayHub_$611",
                                "typeString": "contract IRelayHub"
                              }
                            },
                            "id": 2381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "calculateCharge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 541,
                            "src": "4233:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_struct$_RelayData_$1191_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,struct GsnTypes.RelayData memory) view external returns (uint256)"
                            }
                          },
                          "id": 2387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4233:73:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4207:99:16"
                      },
                      {
                        "assignments": [
                          2390
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2390,
                            "mutability": "mutable",
                            "name": "tokenActualCharge",
                            "nodeType": "VariableDeclaration",
                            "scope": 2427,
                            "src": "4316:25:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2389,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4316:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2399,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2394,
                                  "name": "ethActualCharge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2379,
                                  "src": "4388:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2392,
                                  "name": "valueRequested",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2367,
                                  "src": "4369:14:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1687,
                                "src": "4369:18:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4369:35:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2396,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2373,
                              "src": "4406:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2397,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2375,
                              "src": "4413:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            ],
                            "id": 2391,
                            "name": "getTokenToEthOutputPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2699,
                            "src": "4344:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_contract$_IERC20_$1938_$_t_contract$_IUniswap_$2008_$returns$_t_uint256_$",
                              "typeString": "function (uint256,contract IERC20,contract IUniswap) view returns (uint256)"
                            }
                          },
                          "id": 2398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4344:76:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4316:104:16"
                      },
                      {
                        "assignments": [
                          2401
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2401,
                            "mutability": "mutable",
                            "name": "tokenRefund",
                            "nodeType": "VariableDeclaration",
                            "scope": 2427,
                            "src": "4430:19:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2400,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4430:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2406,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2404,
                              "name": "tokenActualCharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2390,
                              "src": "4471:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2402,
                              "name": "tokenPrecharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2365,
                              "src": "4452:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1709,
                            "src": "4452:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4452:37:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4430:59:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2408,
                              "name": "payer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2363,
                              "src": "4512:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2409,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2373,
                              "src": "4519:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2410,
                              "name": "tokenRefund",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2401,
                              "src": "4526:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2407,
                            "name": "_refundPayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2447,
                            "src": "4499:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$1938_$_t_uint256_$returns$__$",
                              "typeString": "function (address,contract IERC20,uint256)"
                            }
                          },
                          "id": 2411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4499:39:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2412,
                        "nodeType": "ExpressionStatement",
                        "src": "4499:39:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2414,
                              "name": "ethActualCharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2379,
                              "src": "4570:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2415,
                              "name": "tokenActualCharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2390,
                              "src": "4587:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2416,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2373,
                              "src": "4606:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2417,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2375,
                              "src": "4613:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            ],
                            "id": 2413,
                            "name": "_depositProceedsToHub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2534,
                            "src": "4548:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_IERC20_$1938_$_t_contract$_IUniswap_$2008_$returns$__$",
                              "typeString": "function (uint256,uint256,contract IERC20,contract IUniswap)"
                            }
                          },
                          "id": 2418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4548:72:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2419,
                        "nodeType": "ExpressionStatement",
                        "src": "4548:72:16"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2421,
                              "name": "gasUseWithoutPost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2369,
                              "src": "4649:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2422,
                              "name": "gasUsedByPost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2039,
                              "src": "4668:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2423,
                              "name": "ethActualCharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2379,
                              "src": "4683:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2424,
                              "name": "tokenActualCharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2390,
                              "src": "4700:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2420,
                            "name": "TokensCharged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2709,
                            "src": "4635:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 2425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4635:83:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2426,
                        "nodeType": "EmitStatement",
                        "src": "4630:88:16"
                      }
                    ]
                  },
                  "id": 2428,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_postRelayedCallInternal",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2363,
                        "mutability": "mutable",
                        "name": "payer",
                        "nodeType": "VariableDeclaration",
                        "scope": 2428,
                        "src": "3975:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2362,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3975:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2365,
                        "mutability": "mutable",
                        "name": "tokenPrecharge",
                        "nodeType": "VariableDeclaration",
                        "scope": 2428,
                        "src": "3998:22:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2364,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3998:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2367,
                        "mutability": "mutable",
                        "name": "valueRequested",
                        "nodeType": "VariableDeclaration",
                        "scope": 2428,
                        "src": "4030:22:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4030:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2369,
                        "mutability": "mutable",
                        "name": "gasUseWithoutPost",
                        "nodeType": "VariableDeclaration",
                        "scope": 2428,
                        "src": "4062:25:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2368,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4062:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2371,
                        "mutability": "mutable",
                        "name": "relayData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2428,
                        "src": "4097:37:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayData_$1191_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayData"
                        },
                        "typeName": {
                          "id": 2370,
                          "name": "GsnTypes.RelayData",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1191,
                          "src": "4097:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayData_$1191_storage_ptr",
                            "typeString": "struct GsnTypes.RelayData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2373,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2428,
                        "src": "4144:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1938",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2372,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "4144:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1938",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2375,
                        "mutability": "mutable",
                        "name": "router",
                        "nodeType": "VariableDeclaration",
                        "scope": 2428,
                        "src": "4166:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswap_$2008",
                          "typeString": "contract IUniswap"
                        },
                        "typeName": {
                          "id": 2374,
                          "name": "IUniswap",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2008,
                          "src": "4166:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswap_$2008",
                            "typeString": "contract IUniswap"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3965:222:16"
                  },
                  "returnParameters": {
                    "id": 2377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4197:0:16"
                  },
                  "scope": 2722,
                  "src": "3932:793:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2446,
                    "nodeType": "Block",
                    "src": "4841:77:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2440,
                                  "name": "payer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2430,
                                  "src": "4874:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2441,
                                  "name": "tokenRefund",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2434,
                                  "src": "4881:11:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2438,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2432,
                                  "src": "4859:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1938",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 2439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1887,
                                "src": "4859:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4859:34:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6661696c656420726566756e64",
                              "id": 2443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4895:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_313f2c731b040432382b587b0cf65ba7b6e869f03bb701593151aa9a51d2bdd8",
                                "typeString": "literal_string \"failed refund\""
                              },
                              "value": "failed refund"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_313f2c731b040432382b587b0cf65ba7b6e869f03bb701593151aa9a51d2bdd8",
                                "typeString": "literal_string \"failed refund\""
                              }
                            ],
                            "id": 2437,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4851:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4851:60:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2445,
                        "nodeType": "ExpressionStatement",
                        "src": "4851:60:16"
                      }
                    ]
                  },
                  "id": 2447,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_refundPayer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2430,
                        "mutability": "mutable",
                        "name": "payer",
                        "nodeType": "VariableDeclaration",
                        "scope": 2447,
                        "src": "4762:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4762:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2432,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2447,
                        "src": "4785:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1938",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2431,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "4785:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1938",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2434,
                        "mutability": "mutable",
                        "name": "tokenRefund",
                        "nodeType": "VariableDeclaration",
                        "scope": 2447,
                        "src": "4807:19:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2433,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4807:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4752:80:16"
                  },
                  "returnParameters": {
                    "id": 2436,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4841:0:16"
                  },
                  "scope": 2722,
                  "src": "4731:187:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2533,
                    "nodeType": "Block",
                    "src": "5102:413:16",
                    "statements": [
                      {
                        "assignments": [
                          2462
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2462,
                            "mutability": "mutable",
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "scope": 2533,
                            "src": "5148:21:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2460,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5148:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2461,
                              "nodeType": "ArrayTypeName",
                              "src": "5148:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2468,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 2466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5186:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 2465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5172:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2463,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5176:7:16",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2464,
                              "nodeType": "ArrayTypeName",
                              "src": "5176:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 2467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5172:16:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5148:40:16"
                      },
                      {
                        "expression": {
                          "id": 2476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2469,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2462,
                              "src": "5198:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2471,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 2470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5203:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5198:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2474,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2453,
                                "src": "5216:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1938",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1938",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 2473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5208:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2472,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5208:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5208:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5198:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2477,
                        "nodeType": "ExpressionStatement",
                        "src": "5198:24:16"
                      },
                      {
                        "expression": {
                          "id": 2484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2478,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2462,
                              "src": "5232:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2480,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 2479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5237:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5232:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2481,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2455,
                                "src": "5242:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswap_$2008",
                                  "typeString": "contract IUniswap"
                                }
                              },
                              "id": 2482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "WETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2007,
                              "src": "5242:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                "typeString": "function () pure external returns (address)"
                              }
                            },
                            "id": 2483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5242:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5232:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2485,
                        "nodeType": "ExpressionStatement",
                        "src": "5232:23:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2491,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2455,
                                  "src": "5287:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswap_$2008",
                                    "typeString": "contract IUniswap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IUniswap_$2008",
                                    "typeString": "contract IUniswap"
                                  }
                                ],
                                "id": 2490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5279:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2489,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5279:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5279:15:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2496,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "5300:2:16",
                                  "subExpression": {
                                    "hexValue": "31",
                                    "id": 2495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5301:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_minus_1_by_1",
                                    "typeString": "int_const -1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_minus_1_by_1",
                                    "typeString": "int_const -1"
                                  }
                                ],
                                "id": 2494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5295:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 2493,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5295:4:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5295:8:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2486,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2453,
                              "src": "5265:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1907,
                            "src": "5265:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5265:39:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2499,
                        "nodeType": "ExpressionStatement",
                        "src": "5265:39:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2503,
                              "name": "tokenActualCharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2451,
                              "src": "5343:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2504,
                              "name": "ethActualCharge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2449,
                              "src": "5362:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2505,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2462,
                              "src": "5379:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2508,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5392:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                ],
                                "id": 2507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5384:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2506,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5384:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5384:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2510,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5399:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5399:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_900_by_1",
                                  "typeString": "int_const 900"
                                },
                                "id": 2514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3630",
                                  "id": 2512,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5415:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_60_by_1",
                                    "typeString": "int_const 60"
                                  },
                                  "value": "60"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3135",
                                  "id": 2513,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5418:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_15_by_1",
                                    "typeString": "int_const 15"
                                  },
                                  "value": "15"
                                },
                                "src": "5415:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_900_by_1",
                                  "typeString": "int_const 900"
                                }
                              },
                              "src": "5399:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2500,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2455,
                              "src": "5314:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            },
                            "id": 2502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1980,
                            "src": "5314:28:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                            }
                          },
                          "id": 2516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5314:107:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 2517,
                        "nodeType": "ExpressionStatement",
                        "src": "5314:107:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2529,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5502:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenPaymasterPermitPaymaster_$2722",
                                    "typeString": "contract TokenPaymasterPermitPaymaster"
                                  }
                                ],
                                "id": 2528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5494:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2527,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5494:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5494:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2521,
                                        "name": "relayHub",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15,
                                        "src": "5449:8:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IRelayHub_$611",
                                          "typeString": "contract IRelayHub"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IRelayHub_$611",
                                          "typeString": "contract IRelayHub"
                                        }
                                      ],
                                      "id": 2520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5441:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2519,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5441:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5441:17:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2518,
                                  "name": "IRelayHub",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 611,
                                  "src": "5431:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IRelayHub_$611_$",
                                    "typeString": "type(contract IRelayHub)"
                                  }
                                },
                                "id": 2523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5431:28:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRelayHub_$611",
                                  "typeString": "contract IRelayHub"
                                }
                              },
                              "id": 2524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "depositFor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 488,
                              "src": "5431:39:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                                "typeString": "function (address) payable external"
                              }
                            },
                            "id": 2526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 2525,
                                "name": "ethActualCharge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2449,
                                "src": "5477:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "5431:62:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                              "typeString": "function (address) payable external"
                            }
                          },
                          "id": 2531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5431:77:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2532,
                        "nodeType": "ExpressionStatement",
                        "src": "5431:77:16"
                      }
                    ]
                  },
                  "id": 2534,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_depositProceedsToHub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2449,
                        "mutability": "mutable",
                        "name": "ethActualCharge",
                        "nodeType": "VariableDeclaration",
                        "scope": 2534,
                        "src": "5012:23:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2448,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5012:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2451,
                        "mutability": "mutable",
                        "name": "tokenActualCharge",
                        "nodeType": "VariableDeclaration",
                        "scope": 2534,
                        "src": "5036:25:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2450,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5036:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2453,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2534,
                        "src": "5063:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1938",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2452,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "5063:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1938",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2455,
                        "mutability": "mutable",
                        "name": "router",
                        "nodeType": "VariableDeclaration",
                        "scope": 2534,
                        "src": "5077:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswap_$2008",
                          "typeString": "contract IUniswap"
                        },
                        "typeName": {
                          "id": 2454,
                          "name": "IUniswap",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2008,
                          "src": "5077:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswap_$2008",
                            "typeString": "contract IUniswap"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5011:82:16"
                  },
                  "returnParameters": {
                    "id": 2457,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5102:0:16"
                  },
                  "scope": 2722,
                  "src": "4981:534:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2577,
                    "nodeType": "Block",
                    "src": "5735:240:16",
                    "statements": [
                      {
                        "assignments": [
                          2544
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2544,
                            "mutability": "mutable",
                            "name": "token",
                            "nodeType": "VariableDeclaration",
                            "scope": 2577,
                            "src": "5746:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2543,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5746:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2552,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2547,
                              "name": "paymasterData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2536,
                              "src": "5774:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 2549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5790:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2548,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5790:7:16",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 2550,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5789:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 2545,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5763:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5763:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5763:36:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5745:54:16"
                      },
                      {
                        "assignments": [
                          2554
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2554,
                            "mutability": "mutable",
                            "name": "router",
                            "nodeType": "VariableDeclaration",
                            "scope": 2577,
                            "src": "5810:14:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2553,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5810:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2558,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2555,
                            "name": "routersMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2037,
                            "src": "5828:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 2557,
                          "indexExpression": {
                            "id": 2556,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2544,
                            "src": "5839:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5828:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5809:36:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2560,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2544,
                                "src": "5863:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2563,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5880:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2562,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5872:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2561,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5872:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5872:10:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5863:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5468697320746f6b656e206e6f7420737570706f7274656420617320666565",
                              "id": 2566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5884:33:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25c4d1a3ff99c020f0e9e83e8b3e3d05dfaddd2b987303f9cd57adb34433792d",
                                "typeString": "literal_string \"This token not supported as fee\""
                              },
                              "value": "This token not supported as fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25c4d1a3ff99c020f0e9e83e8b3e3d05dfaddd2b987303f9cd57adb34433792d",
                                "typeString": "literal_string \"This token not supported as fee\""
                              }
                            ],
                            "id": 2559,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5855:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5855:63:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2568,
                        "nodeType": "ExpressionStatement",
                        "src": "5855:63:16"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 2570,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2544,
                                  "src": "5943:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2569,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1938,
                                "src": "5936:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1938_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5936:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1938",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2573,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2554,
                                  "src": "5960:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2572,
                                "name": "IUniswap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2008,
                                "src": "5951:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswap_$2008_$",
                                  "typeString": "type(contract IUniswap)"
                                }
                              },
                              "id": 2574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5951:16:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            }
                          ],
                          "id": 2575,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5935:33:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_contract$_IERC20_$1938_$_t_contract$_IUniswap_$2008_$",
                            "typeString": "tuple(contract IERC20,contract IUniswap)"
                          }
                        },
                        "functionReturnParameters": 2542,
                        "id": 2576,
                        "nodeType": "Return",
                        "src": "5928:40:16"
                      }
                    ]
                  },
                  "functionSelector": "2f4b3c5c",
                  "id": 2578,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2536,
                        "mutability": "mutable",
                        "name": "paymasterData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2578,
                        "src": "5668:26:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2535,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5668:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5667:28:16"
                  },
                  "returnParameters": {
                    "id": 2542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2539,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2578,
                        "src": "5717:6:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1938",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2538,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "5717:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1938",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2541,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2578,
                        "src": "5725:8:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswap_$2008",
                          "typeString": "contract IUniswap"
                        },
                        "typeName": {
                          "id": 2540,
                          "name": "IUniswap",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2008,
                          "src": "5725:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswap_$2008",
                            "typeString": "contract IUniswap"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5716:18:16"
                  },
                  "scope": 2722,
                  "src": "5649:326:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2593,
                    "nodeType": "Block",
                    "src": "6082:43:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 2591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2587,
                              "name": "routersMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2037,
                              "src": "6092:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 2589,
                            "indexExpression": {
                              "id": 2588,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2580,
                              "src": "6103:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6092:17:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2590,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2582,
                            "src": "6112:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6092:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2592,
                        "nodeType": "ExpressionStatement",
                        "src": "6092:26:16"
                      }
                    ]
                  },
                  "functionSelector": "5476bd72",
                  "id": 2594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2585,
                      "modifierName": {
                        "id": 2584,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1418,
                        "src": "6072:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6072:9:16"
                    }
                  ],
                  "name": "addToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2580,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2594,
                        "src": "6032:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2579,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2582,
                        "mutability": "mutable",
                        "name": "router",
                        "nodeType": "VariableDeclaration",
                        "scope": 2594,
                        "src": "6047:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6047:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6031:31:16"
                  },
                  "returnParameters": {
                    "id": 2586,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6082:0:16"
                  },
                  "scope": 2722,
                  "src": "6014:111:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2628,
                    "nodeType": "Block",
                    "src": "6308:125:16",
                    "statements": [
                      {
                        "body": {
                          "id": 2626,
                          "nodeType": "Block",
                          "src": "6360:67:16",
                          "statements": [
                            {
                              "expression": {
                                "id": 2624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2616,
                                    "name": "routersMap",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2037,
                                    "src": "6378:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                      "typeString": "mapping(address => address)"
                                    }
                                  },
                                  "id": 2620,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2617,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2597,
                                      "src": "6389:6:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 2619,
                                    "indexExpression": {
                                      "id": 2618,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2606,
                                      "src": "6396:1:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6389:9:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6378:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2621,
                                    "name": "routers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2600,
                                    "src": "6402:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 2623,
                                  "indexExpression": {
                                    "id": 2622,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2606,
                                    "src": "6410:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6402:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6378:34:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2625,
                              "nodeType": "ExpressionStatement",
                              "src": "6378:34:16"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2609,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2606,
                            "src": "6338:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2610,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2597,
                              "src": "6341:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6341:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6338:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2627,
                        "initializationExpression": {
                          "assignments": [
                            2606
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2606,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 2627,
                              "src": "6326:6:16",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2605,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6326:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2608,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6335:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6326:10:16"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6356:3:16",
                            "subExpression": {
                              "id": 2613,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2606,
                              "src": "6356:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2615,
                          "nodeType": "ExpressionStatement",
                          "src": "6356:3:16"
                        },
                        "nodeType": "ForStatement",
                        "src": "6322:105:16"
                      }
                    ]
                  },
                  "functionSelector": "db3f831e",
                  "id": 2629,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2603,
                      "modifierName": {
                        "id": 2602,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1418,
                        "src": "6298:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6298:9:16"
                    }
                  ],
                  "name": "addBatchTokens",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2601,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2597,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 2629,
                        "src": "6238:23:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2595,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6238:7:16",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2596,
                          "nodeType": "ArrayTypeName",
                          "src": "6238:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2600,
                        "mutability": "mutable",
                        "name": "routers",
                        "nodeType": "VariableDeclaration",
                        "scope": 2629,
                        "src": "6263:24:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2598,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6263:7:16",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2599,
                          "nodeType": "ArrayTypeName",
                          "src": "6263:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6237:51:16"
                  },
                  "returnParameters": {
                    "id": 2604,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6308:0:16"
                  },
                  "scope": 2722,
                  "src": "6214:219:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    62
                  ],
                  "body": {
                    "id": 2643,
                    "nodeType": "Block",
                    "src": "6586:166:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "323530303030",
                              "id": 2637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6648:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_250000_by_1",
                                "typeString": "int_const 250000"
                              },
                              "value": "250000"
                            },
                            {
                              "hexValue": "323030303030",
                              "id": 2638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6672:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000_by_1",
                                "typeString": "int_const 200000"
                              },
                              "value": "200000"
                            },
                            {
                              "hexValue": "323130303030",
                              "id": 2639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6696:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_210000_by_1",
                                "typeString": "int_const 210000"
                              },
                              "value": "210000"
                            },
                            {
                              "id": 2640,
                              "name": "CALLDATA_SIZE_LIMIT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "6716:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_250000_by_1",
                                "typeString": "int_const 250000"
                              },
                              {
                                "typeIdentifier": "t_rational_200000_by_1",
                                "typeString": "int_const 200000"
                              },
                              {
                                "typeIdentifier": "t_rational_210000_by_1",
                                "typeString": "int_const 210000"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2635,
                              "name": "IPaymaster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "6603:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPaymaster_$343_$",
                                "typeString": "type(contract IPaymaster)"
                              }
                            },
                            "id": 2636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "GasAndDataLimits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 286,
                            "src": "6603:27:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_GasAndDataLimits_$286_storage_ptr_$",
                              "typeString": "type(struct IPaymaster.GasAndDataLimits storage pointer)"
                            }
                          },
                          "id": 2641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6603:142:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GasAndDataLimits_$286_memory_ptr",
                            "typeString": "struct IPaymaster.GasAndDataLimits memory"
                          }
                        },
                        "functionReturnParameters": 2634,
                        "id": 2642,
                        "nodeType": "Return",
                        "src": "6596:149:16"
                      }
                    ]
                  },
                  "functionSelector": "b039a88f",
                  "id": 2644,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGasAndDataLimits",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2631,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6486:8:16"
                  },
                  "parameters": {
                    "id": 2630,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6468:2:16"
                  },
                  "returnParameters": {
                    "id": 2634,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2633,
                        "mutability": "mutable",
                        "name": "limits",
                        "nodeType": "VariableDeclaration",
                        "scope": 2644,
                        "src": "6538:41:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GasAndDataLimits_$286_memory_ptr",
                          "typeString": "struct IPaymaster.GasAndDataLimits"
                        },
                        "typeName": {
                          "id": 2632,
                          "name": "IPaymaster.GasAndDataLimits",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 286,
                          "src": "6538:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GasAndDataLimits_$286_storage_ptr",
                            "typeString": "struct IPaymaster.GasAndDataLimits"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6528:57:16"
                  },
                  "scope": 2722,
                  "src": "6440:312:16",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2698,
                    "nodeType": "Block",
                    "src": "6927:226:16",
                    "statements": [
                      {
                        "assignments": [
                          2659
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2659,
                            "mutability": "mutable",
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "scope": 2698,
                            "src": "6937:21:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2657,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6937:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2658,
                              "nodeType": "ArrayTypeName",
                              "src": "6937:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2665,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 2663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6975:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 2662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6961:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2660,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6965:7:16",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2661,
                              "nodeType": "ArrayTypeName",
                              "src": "6965:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 2664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6961:16:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6937:40:16"
                      },
                      {
                        "expression": {
                          "id": 2673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2666,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2659,
                              "src": "6987:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2668,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 2667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6992:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6987:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2671,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2648,
                                "src": "7005:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1938",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1938",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 2670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6997:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2669,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6997:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6997:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6987:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2674,
                        "nodeType": "ExpressionStatement",
                        "src": "6987:24:16"
                      },
                      {
                        "expression": {
                          "id": 2681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2675,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2659,
                              "src": "7021:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2677,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 2676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7026:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7021:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2678,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2650,
                                "src": "7031:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswap_$2008",
                                  "typeString": "contract IUniswap"
                                }
                              },
                              "id": 2679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "WETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2007,
                              "src": "7031:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                "typeString": "function () pure external returns (address)"
                              }
                            },
                            "id": 2680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7031:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7021:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2682,
                        "nodeType": "ExpressionStatement",
                        "src": "7021:23:16"
                      },
                      {
                        "assignments": [
                          2687
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2687,
                            "mutability": "mutable",
                            "name": "amountOuts",
                            "nodeType": "VariableDeclaration",
                            "scope": 2698,
                            "src": "7054:24:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2685,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "7054:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2686,
                              "nodeType": "ArrayTypeName",
                              "src": "7054:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2693,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2690,
                              "name": "ethValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2646,
                              "src": "7101:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2691,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2659,
                              "src": "7111:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            ],
                            "expression": {
                              "id": 2688,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2650,
                              "src": "7081:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswap_$2008",
                                "typeString": "contract IUniswap"
                              }
                            },
                            "id": 2689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAmountsIn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2002,
                            "src": "7081:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                            }
                          },
                          "id": 2692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7081:35:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7054:62:16"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2694,
                            "name": "amountOuts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2687,
                            "src": "7133:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2696,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 2695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7144:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7133:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2654,
                        "id": 2697,
                        "nodeType": "Return",
                        "src": "7126:20:16"
                      }
                    ]
                  },
                  "id": 2699,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokenToEthOutputPrice",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2651,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2646,
                        "mutability": "mutable",
                        "name": "ethValue",
                        "nodeType": "VariableDeclaration",
                        "scope": 2699,
                        "src": "6849:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2645,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6849:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2648,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2699,
                        "src": "6864:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1938",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2647,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "6864:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1938",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2650,
                        "mutability": "mutable",
                        "name": "router",
                        "nodeType": "VariableDeclaration",
                        "scope": 2699,
                        "src": "6878:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswap_$2008",
                          "typeString": "contract IUniswap"
                        },
                        "typeName": {
                          "id": 2649,
                          "name": "IUniswap",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2008,
                          "src": "6878:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswap_$2008",
                            "typeString": "contract IUniswap"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6848:46:16"
                  },
                  "returnParameters": {
                    "id": 2654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2653,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2699,
                        "src": "6918:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2652,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6918:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6917:9:16"
                  },
                  "scope": 2722,
                  "src": "6815:338:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "id": 2709,
                  "name": "TokensCharged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2708,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2701,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "gasUseWithoutPost",
                        "nodeType": "VariableDeclaration",
                        "scope": 2709,
                        "src": "7193:22:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2700,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7193:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2703,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "gasUsedByPost",
                        "nodeType": "VariableDeclaration",
                        "scope": 2709,
                        "src": "7217:18:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2702,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7217:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2705,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ethActualCharge",
                        "nodeType": "VariableDeclaration",
                        "scope": 2709,
                        "src": "7237:20:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2704,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7237:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2707,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokenActualCharge",
                        "nodeType": "VariableDeclaration",
                        "scope": 2709,
                        "src": "7259:22:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2706,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7259:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7192:90:16"
                  },
                  "src": "7173:110:16"
                },
                {
                  "anonymous": false,
                  "id": 2717,
                  "name": "TokensPrecharged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2716,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2711,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2717,
                        "src": "7311:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2710,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7311:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2713,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "router",
                        "nodeType": "VariableDeclaration",
                        "scope": 2717,
                        "src": "7326:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2712,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7326:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2715,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokenPrecharge",
                        "nodeType": "VariableDeclaration",
                        "scope": 2717,
                        "src": "7342:19:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2714,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7342:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7310:52:16"
                  },
                  "src": "7288:75:16"
                },
                {
                  "anonymous": false,
                  "id": 2721,
                  "name": "Received",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2720,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2719,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "eth",
                        "nodeType": "VariableDeclaration",
                        "scope": 2721,
                        "src": "7383:8:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2718,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7383:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7382:10:16"
                  },
                  "src": "7368:25:16"
                }
              ],
              "scope": 2723,
              "src": "656:6739:16"
            }
          ],
          "src": "31:7365:16"
        },
        "id": 16
      }
    }
  }
}
